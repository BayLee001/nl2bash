Unrecognized cmd_option type argument_option
Reading data from ../../data/bash
Saving models to ../../model/seq2seq
../../data/bash
Loading data from ../../data/bash
  reading data line 1000
  reading data line 2000
  reading data line 3000
  reading data line 4000
  4689 data points read.
  465 data points read.
  471 data points read.
spell correction: kat -> cat
spell correction: shs -> ssh
spell correction: currect -> current
spell correction: ahve -> have
spell correction: currect -> current
spell correction: dispaly -> display
spell correction: horus -> hours
spell correction: confined -> contained
spell correction: dispaly -> display
spell correction: listig -> listing
spell correction: netinst -> nextint
spell correction: ffiles -> files
spell correction: flies -> files
spell correction: modifid -> modified
spell correction: accesed -> accessed
Example 0 (1)
Original English: List all *.jar files/directories under /usr, /home and /tmp directory
English: list all _REGEX "files/directories" under _REGEX _REGEX and _REGEX directori
GT Command 1: find /usr /home  /tmp -name "*.jar"
Prediction 1: find File -name Pattern | xargs -I {} ls -l {} (-0.19717822969)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.257796168327)
Prediction 3: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.30177372694)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.305370956659)
Prediction 5: find File -name Pattern -exec ls -l {} \; (-0.305806219578)
Prediction 6: find File -name Pattern | xargs -I {} ls -l -d {} (-0.347112059593)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -print (-0.350504457951)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.35179746151)
Prediction 9: find File -type f -name Pattern | xargs -I {} grep -L Pattern {} (-0.372251778841)
Prediction 10: find File -name Pattern | xargs -I {} ls {} (-0.375366032124)

Example 1 (1)
Original English: find files having specific name in a folder
English: find file have specif name in folder
GT Command 1: find ~/Books -name Waldo
Prediction 1: find File -iname Pattern (-0.115129001439)
Prediction 2: find File -name Pattern (-0.259249895811)
Prediction 3: find File -type f -iname Pattern (-0.921876609325)
Prediction 4: find File -type f -name Pattern (-1.01871180534)
Prediction 5: find File -type f -iname Pattern -print (-1.34488236904)
Prediction 6: find File -user Pattern -name Pattern (-1.42214679718)
Prediction 7: find File -iname Pattern -print (-1.44511914253)
Prediction 8: find File -mount -name Pattern (-1.58246004581)
Prediction 9: find File -name Pattern -print (-1.66444718838)
Prediction 10: find File File -name Pattern (-1.68742311001)

Example 2 (1)
Original English: Search the current working directory tree for files whose names start with "fileA_" or "fileB_"
English: search current work directori tree for file whose name start with _REGEX or _REGEX
GT Command 1: find . -name 'fileA_*' -o -name 'fileB_*'
Prediction 1: find File \( -name Pattern -or -name Pattern \) (-0.137303993106)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -print (-0.332785010338)
Prediction 3: find File -regextype Pattern -regex Pattern (-0.343978136778)
Prediction 4: find File \( -regex Pattern -and -not -regex Pattern \) (-0.370945632458)
Prediction 5: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.41025736928)
Prediction 6: find File \( -name Pattern -and -not -regex Pattern \) (-0.453024715185)
Prediction 7: find File \( -path File -prune -or -name Pattern \) -print (-0.459333211184)
Prediction 8: find File -regex Pattern (-0.481832623482)
Prediction 9: find File \( -path File -prune -or -print \) (-0.485290199518)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.525133788586)

Example 3 (1)
Original English: change the owner of all the files in folder /u/netinst to netinst
English: chang owner of all file in folder _REGEX to nextint
GT Command 1: find /u/netinst -print | xargs chown netinst
Prediction 1: find File -exec chown Pattern {} \; (-0.109054245055)
Prediction 2: find File -print | xargs -I {} chown Pattern {} (-0.17402818799)
Prediction 3: find File -print0 | xargs -0 -I {} chown Pattern {} (-0.268057435751)
Prediction 4: find File -user Pattern -exec chown Pattern {} \; (-0.295378863811)
Prediction 5: find File -exec chown Pattern {} + (-0.412395179272)
Prediction 6: find File -print -exec chown Pattern {} \; (-0.41946542263)
Prediction 7: find File -print | xargs -I {} tar -c -v -f Unknown {} (-0.421331852674)
Prediction 8: find File -user Pattern -print | xargs -I {} chown Pattern {} (-0.462445348501)
Prediction 9: find File -print | xargs -I {} chmod Permission {} (-0.491992175579)
Prediction 10: find File | xargs -I {} chown Pattern {} (-0.559347748756)

Example 4 (1)
Original English: search the pattern ^PyErr in all the ".c" files in the folder Lib/
English: search pattern _REGEX in all _REGEX file in folder _REGEX
GT Command 1: find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr
Prediction 1: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.13102671504)
Prediction 2: find File -name Pattern | xargs -I {} grep Pattern {} (-0.149087801576)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; -print (-0.258557975292)
Prediction 4: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.312606602907)
Prediction 5: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.318589895964)
Prediction 6: find File -name Pattern | xargs -n -2 -I {} grep Pattern {} (-0.339297950268)
Prediction 7: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.344523340464)
Prediction 8: find File -name Pattern -exec grep Pattern {} \; (-0.345832169056)
Prediction 9: find File -name Pattern | xargs -I {} grep -r Pattern {} (-0.35044118762)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.353351861238)

Example 5 (1)
Original English: Find files owner by user shs
English: find file owner by user ssh
GT Command 1: find -user shs
Prediction 1: find File -user Pattern (-0.0351119749248)
Prediction 2: find File -user Pattern -print (-0.461531549692)
Prediction 3: find File -type f -user Pattern (-0.948036968708)
Prediction 4: find File -user Pattern -perm Permission (-0.953233957291)
Prediction 5: find File -user Pattern -type f (-0.980744838715)
Prediction 6: find File -type f -user Pattern -print (-1.01727950573)
Prediction 7: find File -user Pattern -name Pattern (-1.09894263744)
Prediction 8: find File -user Pattern -perm Permission -print (-1.15298891068)
Prediction 9: find File -perm Permission (-1.22601354122)
Prediction 10: find File -user Pattern -type f -print (-1.23122286797)

Example 6 (1)
Original English: Find all *.tex regular files in maximum 2 levels down the current directory
English: find all _REGEX regular file in maximum _NUM level down current directori
GT Command 1: find . -type f -maxdepth 2 -name "*.tex"
Prediction 1: find File -maxdepth Number -type f -name Pattern (-0.0364435017109)
Prediction 2: find File -maxdepth Number -type f -name Pattern -print0 (-0.324185162783)
Prediction 3: find File -maxdepth Number -type f -name Pattern -exec rm -f {} \; (-0.351937025785)
Prediction 4: find File -maxdepth Number -maxdepth Number -type f -name Pattern (-0.406841993332)
Prediction 5: find File -maxdepth Number -type f -name Pattern -exec rm -r -f {} \; (-0.431715160608)
Prediction 6: find File -maxdepth Number -type f -name Pattern -exec rm {} \; (-0.435037732124)
Prediction 7: find File -maxdepth Number -name Pattern -type f (-0.437438994646)
Prediction 8: find File -maxdepth Number -mindepth Number -type f -name Pattern (-0.487784385681)
Prediction 9: find File -maxdepth Number -type f -name Pattern -print (-0.541768848896)
Prediction 10: find File -maxdepth Number -type f -perm Permission (-0.557759404182)

Example 7 (1)
Original English: display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder
English: display top _NUM biggest file in current folder present in same partit as of current folder
GT Command 1: find . -xdev -printf ‘%s %p\n’ |sort -nr|head -20
Prediction 1: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.381948500872)
Prediction 2: find File -printf Pattern | xargs -I {} ls -l {} (-0.391520380974)
Prediction 3: find File -printf Pattern | sort -r -n | head -n Number (-0.410204172134)
Prediction 4: find -L File -type f -name Pattern -exec ls -l {} \; (-0.420926213264)
Prediction 5: find File -name Pattern -printf Pattern | xargs -0 -I {} cp {} File {} (-0.443398922682)
Prediction 6: find File -size Size -exec ls -l {} \; (-0.445146501064)
Prediction 7: find File -name Pattern -printf Pattern | xargs -0 -I {} ls -l {} (-0.470210939646)
Prediction 8: find File -regex Pattern -exec ls -l {} \; (-0.480038046837)
Prediction 9: find File -name Pattern -printf Pattern | xargs -I {} rm {} (-0.500680744648)
Prediction 10: find File -name Pattern -printf Pattern | xargs -0 -I {} cp {} File (-0.52702742815)

Example 8 (1)
Original English: Find all files in the current directory tree that match pattern 'a(b*'
English: find all file in current directori tree match pattern _REGEX
GT Command 1: find . -name 'a(b*' -print
Prediction 1: find File -name Pattern (-0.0755566880107)
Prediction 2: find File -type f -name Pattern (-0.550753355026)
Prediction 3: find File -path File (-0.5652089715)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.66366571188)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.757863581181)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.825139939785)
Prediction 7: find File -print | grep Pattern (-0.860018491745)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.869682312012)
Prediction 9: find File -print | grep -E Pattern (-0.948542416096)
Prediction 10: find File -iname Pattern (-0.953958570957)

Example 9 (1)
Original English: Find all files with the name "MyProgram.c" in the current directory and all of it's sub-directories.
English: find all file with name _REGEX in current directori and all of 's sub-directori
GT Command 1: find -name "MyCProgram.c"
Prediction 1: find File -name Pattern (-0.0465985238552)
Prediction 2: find File -type f -name Pattern (-0.394461721182)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.689720451832)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.735350906849)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.796797931194)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.799677908421)
Prediction 7: find File -type f -iname Pattern (-0.8033618927)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.815104186535)
Prediction 9: find File -iname Pattern (-0.816438913345)
Prediction 10: find File -type f -iname Pattern -print (-0.904493689537)

Example 10 (1)
Original English: remove all the files in the current folder which have not been modified in the last 10 days
English: remov all file in current folder not modifi in last _NUM day
GT Command 1: find . -mtime +10 | xargs rm
Prediction 1: find File -mtime Time -exec rm {} \; (-0.0438983179629)
Prediction 2: find File -mtime Time -exec rm -f {} \; (-0.292411595583)
Prediction 3: find File -daystart -mtime Time -exec rm {} \; (-0.378492534161)
Prediction 4: find File -mtime Time -print0 | xargs -0 -I {} rm {} (-0.403467774391)
Prediction 5: find File -type f -mtime Time -exec rm {} \; (-0.41370755434)
Prediction 6: find File -mtime Time -daystart -exec rm {} \; (-0.460978090763)
Prediction 7: find File -mtime Time | xargs -I {} rm {} (-0.461433112621)
Prediction 8: find File -daystart -mtime Time -exec rm -f {} \; (-0.473915576935)
Prediction 9: find File -mtime Time -mtime Time -exec rm {} \; (-0.485736846924)
Prediction 10: find File -atime Time -exec rm {} \; (-0.500046253204)

Example 11 (1)
Original English: find file.txt in the file system, search confined to a specific path
English: find _REGEX in file system search contain to specif path
GT Command 1: find / -path /usr/lib/important/*/file.txt
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.235914051533)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.253567755222)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.278667092323)
Prediction 4: find File -name Pattern -exec grep -l Pattern {} \; (-0.32556411624)
Prediction 5: find File -name Pattern -exec grep Pattern {} \; (-0.33537375927)
Prediction 6: find File -name Pattern -exec grep -i -l Pattern {} \; (-0.380366027355)
Prediction 7: find File \( -path File -prune -or -name Pattern \) -print (-0.387891948223)
Prediction 8: find File -name Pattern -exec grep Pattern {} \; -print (-0.389979183674)
Prediction 9: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.397761464119)
Prediction 10: find File -name Pattern | grep -v Pattern (-0.435200870037)

Example 12 (1)
Original English: Find file1 in the level 1 directories and above
English: find _REGEX in level _NUM directori and abov
GT Command 1: find -maxdepth 2 -name file1
Prediction 1: find File -maxdepth Number -type d -name Pattern (-0.200866788626)
Prediction 2: find File -mindepth Number -maxdepth Number -type d -name Pattern (-0.20677319169)
Prediction 3: find File -mindepth Number -maxdepth Number -name Pattern -type f (-0.256614983082)
Prediction 4: find File -maxdepth Number -name Pattern -type f (-0.265705883503)
Prediction 5: find File -mindepth Number -maxdepth Number -name Pattern -type d (-0.310675054789)
Prediction 6: find File -maxdepth Number -type f -name Pattern (-0.329431444407)
Prediction 7: find File -maxdepth Number -name Pattern -type d (-0.423165112734)
Prediction 8: find File -mindepth Number -maxdepth Number -type f -name Pattern (-0.426904499531)
Prediction 9: find File -maxdepth Number -name Pattern -type f -print (-0.438868373632)
Prediction 10: find File -maxdepth Number -type d -name Pattern -print (-0.455204904079)

Example 13 (1)
Original English: find all the files in a folder which do not belong to any user
English: find all file in folder not belong to ani user
GT Command 1: find /home -nouser -print
Prediction 1: find File -nouser (-0.248363211751)
Prediction 2: find File -user Pattern (-0.297221004963)
Prediction 3: find File -user Pattern -print (-0.532579243183)
Prediction 4: find File -nouser -print (-0.693614184856)
Prediction 5: find File ! -user Pattern (-0.846594929695)
Prediction 6: find File ! -user Pattern -print (-0.927903354168)
Prediction 7: find File -not -user Pattern (-1.00821578503)
Prediction 8: find File -user Pattern -perm Permission (-1.02824389935)
Prediction 9: find File -nogroup -print (-1.14772832394)
Prediction 10: find File -uid Pattern -print (-1.220495224)

Example 14 (1)
Original English: print the files in the subdirectories between level 1 and 4
English: print file in subdirectori between level _NUM and _NUM
GT Command 1: find -mindepth 2 -maxdepth 5 -name "sum.java"
Prediction 1: find File -maxdepth Number -mindepth Number -name Pattern (-0.294594079256)
Prediction 2: find File -maxdepth Number -cmin Number (-0.404774338007)
Prediction 3: find File -mindepth Number -maxdepth Number -name Pattern (-0.416569977999)
Prediction 4: find File -maxdepth Number -mindepth Number -maxdepth Number -name Pattern (-0.457784503698)
Prediction 5: find File -maxdepth Number -name Pattern (-0.473039835691)
Prediction 6: find File -mindepth Number -maxdepth Number -type f -printf Pattern (-0.48035043478)
Prediction 7: find File -maxdepth Number -mindepth Number -maxdepth Number -type f -printf Pattern (-0.493563860655)
Prediction 8: find File -maxdepth Number -cmin Number -print (-0.531101405621)
Prediction 9: find File -maxdepth Number \( -name Pattern -prune -or -print \) (-0.551163136959)
Prediction 10: find File -maxdepth Number -mindepth Number -type f (-0.552027523518)

Example 15 (1)
Original English: Find files with 002 permission in entire file system
English: find file with _NUM permiss in entir file system
GT Command 1: find / -type f -perm -002
Prediction 1: find File -perm Permission (-0.0323461964726)
Prediction 2: find File -perm Permission -print (-0.538274645805)
Prediction 3: find File -type f -perm Permission -print (-0.572125792503)
Prediction 4: find File -type f -perm Permission (-0.611704945564)
Prediction 5: find File -perm Permission -exec ls -l {} \; (-0.940081059933)
Prediction 6: find File -perm Permission -type f (-0.972197115421)
Prediction 7: find File -type f -perm Permission -perm Permission -print (-0.98946082592)
Prediction 8: find File -name Pattern -perm Permission -print (-1.05593144894)
Prediction 9: find File -type f -perm Permission -perm Permission (-1.10366654396)
Prediction 10: find File -type f -perm Permission -ls (-1.16626644135)

Example 16 (1)
Original English: Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories
English: search for _REGEX in all _REGEX file under current directori without descend into _REGEX and _REGEX directori
GT Command 1: find . -name "*.png" -prune -o -name "*.gif" -prune -o -name "*.svn" -prune -o -print0 | xargs -0 -I FILES grep -IR "foo=" FILES
Prediction 1: find File \( -path File -prune -or -name Pattern \) -print (-0.14215144515)
Prediction 2: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.267142415047)
Prediction 3: find File \( -path File -prune -or -name Pattern \) -prune -or -name Pattern \) -print (-0.303675234318)
Prediction 4: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -print (-0.327516674995)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.333380699158)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.336596012115)
Prediction 7: find File \( -name Pattern -prune -or -name Pattern \) -prune -or -name Pattern \) -print (-0.336640566587)
Prediction 8: find File \( -path File -prune -or -name Pattern \) -type f -print (-0.336847305298)
Prediction 9: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.348744302988)
Prediction 10: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.356616377831)

Example 17 (1)
Original English: list all the sqlite files in the current folder
English: list all sqlite file in current folder
GT Command 1: find ./ -name "*.sqlite" -ls
Prediction 1: find File -name Pattern (-0.133319303393)
Prediction 2: find File -type f -name Pattern (-0.355528444052)
Prediction 3: find File -type f -name Pattern -exec ls -l {} \; (-0.389332264662)
Prediction 4: find File -name Pattern -exec ls -l {} \; (-0.42777583003)
Prediction 5: find File -name Pattern -print (-0.569539666176)
Prediction 6: find File -type f -name Pattern -exec ls {} \; (-0.572090744972)
Prediction 7: find File -type f -name Pattern -print (-0.602252602577)
Prediction 8: find File -exec ls -l {} \; (-0.735321700573)
Prediction 9: find File -type f -iname Pattern -print (-0.737511396408)
Prediction 10: find File -type f -iname Pattern -ls (-0.764235913754)

Example 18 (1)
Original English: search for a word in all the files with the extension "ch" in the current folder
English: search for word in all file with extens _REGEX in current folder
GT Command 1: find -name '*.[ch]' | xargs grep -E 'expr'
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.139742910862)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.162488207221)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.207635551691)
Prediction 4: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.267683565617)
Prediction 5: find File -type f -name Pattern | xargs -I {} grep Pattern {} (-0.283886015415)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.290506720543)
Prediction 7: find File -type f -name Pattern | xargs -I {} grep -L Pattern {} (-0.311978876591)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.312849134207)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.330174654722)
Prediction 10: find File -type f -name Pattern -exec grep -H Pattern {} \; (-0.356397151947)

Example 19 (2)
Original English: remove all core dump files from user's home directory
English: remov all core dump file from user 's home directori
GT Command 1: find ~/ -name 'core*' -exec rm {} \;
GT Command 2: find ~/ -name 'core*' -exec rm {} \;
Prediction 1: find File -name Pattern -ok rm {} \; (-0.137091726065)
Prediction 2: find File -name Pattern -exec rm {} \; (-0.235581815243)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.249967083335)
Prediction 4: find File -type f -name Pattern -exec rm -f {} \; (-0.290164023638)
Prediction 5: find File -type f -name Pattern -ok rm {} \; (-0.372331738472)
Prediction 6: find File -type f -name Pattern -exec rm {} \; (-0.384945571423)
Prediction 7: find File -name Pattern -size Size -exec rm {} \; (-0.391563653946)
Prediction 8: find File -name Pattern -printf Pattern | xargs -I {} rm {} (-0.399616003036)
Prediction 9: find File -size Size -exec rm {} \; (-0.492601245642)
Prediction 10: find File -name Pattern -exec rm -f {} \; (-0.504777014256)

Example 20 (1)
Original English: Find all the files that are exactly 30 days old.
English: find all file exact _NUM day old
GT Command 1: find . -mtime 30 -print
Prediction 1: find File -mtime Time (-0.155479103327)
Prediction 2: find File -daystart -mtime Time (-0.530872642994)
Prediction 3: find File -type f -ctime Time (-0.549221456051)
Prediction 4: find File -type f -atime Time (-0.575509250164)
Prediction 5: find File -type f -mtime Time (-0.628776371479)
Prediction 6: find File -mtime Time -print (-0.655561566353)
Prediction 7: find File -atime Time (-0.697888255119)
Prediction 8: find File -daystart -ctime Time (-0.705074191093)
Prediction 9: find File -type f -daystart -mtime Time (-0.721663177013)
Prediction 10: find File -mtime Time -daystart (-0.769451141357)

Example 21 (1)
Original English: Find recursively all regular files changed within the last 5 minutes starting from directory b
English: find recurs all regular file chang within last _NUM minut start from directori b
GT Command 1: find b -type f -cmin -5
Prediction 1: find File -maxdepth Number -cmin Number -type f (-0.323044866323)
Prediction 2: find File -cmin Number -type f (-0.3780772686)
Prediction 3: find File -cmin Number | xargs -I {} ls -l -d {} (-0.405382245779)
Prediction 4: find File -cmin Number -type f -print (-0.424676537514)
Prediction 5: find File -cmin Number -type f | xargs -I {} ls -l -d {} (-0.425330430269)
Prediction 6: find File -maxdepth Number -cmin Number -type f | xargs -I {} ls -l -d {} (-0.448916107416)
Prediction 7: find File -type f -cmin Number | xargs -I {} ls -l -d {} (-0.468507617712)
Prediction 8: find File -maxdepth Number -type f -cmin Number (-0.480047285557)
Prediction 9: find File -type f -cmin Number | xargs -I {} -0 -I {} (-0.484400451183)
Prediction 10: find File -type f -cmin Number | xargs -I {} -0 -I {} ls -l {} (-0.50400018692)

Example 22 (1)
Original English: Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety
English: find _REGEX file under _REGEX and delet with confirm prompt ensur white space safeti
GT Command 1: find /mnt/zip -name "*prefs copy" -print0 | xargs    -0 -p /bin/rm
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.0369551517069)
Prediction 2: find File -name Pattern -print0 | xargs -r -0 -I {} rm {} (-0.238103717566)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.2794277668)
Prediction 4: find File -name Pattern -print0 | xargs -I {} rm {} (-0.286096930504)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.354802668095)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} rm {} (-0.363307863474)
Prediction 7: find File -name Pattern -print0 | xargs -0 -n -1 -I {} rm {} (-0.37425878644)
Prediction 8: find File -name Pattern -print0 | xargs -p -I {} rm {} (-0.38293710351)
Prediction 9: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.39590972662)
Prediction 10: find File -name Pattern -ok rm {} \; (-0.400943607092)

Example 23 (1)
Original English: find the file "filename.txt" in the usr folder
English: find file _REGEX in usr folder
GT Command 1: find /usr -name filename.txt -print
Prediction 1: find File -name Pattern (-0.0506010018289)
Prediction 2: find File -type f -name Pattern (-0.453344196081)
Prediction 3: find File -name Pattern -print (-0.657232582569)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.769895970821)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.77137863636)
Prediction 6: find File -iname Pattern (-0.807703495026)
Prediction 7: find File -name Pattern -type f (-0.83421677351)
Prediction 8: find File -type f -name Pattern -print (-0.878322958946)
Prediction 9: find File -type f -iname Pattern -print (-0.901943564415)
Prediction 10: find File -name Pattern -type f -print (-0.939650595188)

Example 24 (1)
Original English: Find string "STRING" in files residing in the current directory tree, case insensitive
English: find string _REGEX in file resid in current directori tree case insensit
GT Command 1: find . -type f -print | xargs grep -ni "STRING"
Prediction 1: find File -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.226345166564)
Prediction 2: find File -iname Pattern -print | xargs -I {} grep Pattern {} (-0.291247576475)
Prediction 3: find File -iname Pattern (-0.30295369029)
Prediction 4: find File -iname Pattern | xargs -I {} grep -L Pattern {} (-0.319196730852)
Prediction 5: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.322958022356)
Prediction 6: find File -iname Pattern -print | xargs -I {} grep -L Pattern {} (-0.327359884977)
Prediction 7: find File -iname Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.32793161273)
Prediction 8: find File -iname Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.341236978769)
Prediction 9: find File -iname Pattern -print0 | xargs -0 -I {} grep -i Pattern {} (-0.350403279066)
Prediction 10: find File -iname Pattern -exec grep -i -l Pattern {} \; (-0.355333507061)

Example 25 (1)
Original English: Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.
English: search entir file hierarchi for file name zsh exist on _REGEX file system and print out detail inform about file
GT Command 1: find / -fstype ext3 -name zsh -ls
Prediction 1: find File -name Pattern -size Size -exec rm {} \; (-0.325245290995)
Prediction 2: find File -name Pattern -follow -exec rm {} \; (-0.370172262192)
Prediction 3: find File -name Pattern -ok rm {} \; (-0.411247164011)
Prediction 4: find File -iname Pattern -follow -exec rm {} \; (-0.464677006006)
Prediction 5: find File -follow -name Pattern -exec rm {} \; (-0.502829134464)
Prediction 6: find File -name Pattern -size Size -exec rm -r -f {} \; (-0.512552201748)
Prediction 7: find File -fstype Unknown -name Pattern (-0.551315069199)
Prediction 8: find File -name Pattern -size Size -print (-0.581366062164)
Prediction 9: find File -name Pattern -ls (-0.62757319212)
Prediction 10: find File -fstype Unknown -name Pattern -print (-0.65386557579)

Example 26 (1)
Original English: Find all the files called FindCommandExamples.txt of owner root
English: find all file call _REGEX of owner root
GT Command 1: find / -user root -name FindCommandExamples.txt
Prediction 1: find File -user Pattern -name Pattern (-0.0208999682218)
Prediction 2: find File -user Pattern -iname Pattern (-0.499227285385)
Prediction 3: find File -user Pattern -name Pattern -print (-0.771956384182)
Prediction 4: find File -user Pattern -type f -name Pattern (-0.8644541502)
Prediction 5: find File -user Pattern (-0.924350142479)
Prediction 6: find File -name Pattern -user Pattern (-0.996501028538)
Prediction 7: find File -name Pattern (-1.07146906853)
Prediction 8: find File -user Pattern -iname Pattern -print (-1.15481162071)
Prediction 9: find File -user Pattern -user Pattern (-1.16297996044)
Prediction 10: find File -user Pattern -name Pattern -print0 (-1.16639518738)

Example 27 (1)
Original English: find all fonts which belong to a specific user
English: find all font belong to specif user
GT Command 1: find /usr/local/fonts -user warwick
Prediction 1: find File -user Pattern (-0.106710836291)
Prediction 2: find File -user Pattern -print (-0.27458307147)
Prediction 3: find File -user Pattern -type f (-0.527241706848)
Prediction 4: find File -user Pattern -type f -print (-0.732167243958)
Prediction 5: find File -user Pattern -perm Permission (-0.764689385891)
Prediction 6: find File -user Pattern -iname Pattern (-0.78291708231)
Prediction 7: find File -user Pattern -name Pattern (-0.869008779526)
Prediction 8: find File -user Pattern -perm Permission -print (-0.967923939228)
Prediction 9: find File -user Pattern -user Pattern (-1.06610822678)
Prediction 10: find File -user Pattern -name Pattern -print (-1.09440100193)

Example 28 (1)
Original English: find within a directory called /mp3collection, only those mp3 files that have a size less than 5000 Kilobytes ( < 5MB)
English: find within directori call _REGEX onli _REGEX file size less than _NUM _REGEX
GT Command 1: find /mp3collection -name '*.mp3' -size -5000k
Prediction 1: find File -type f -name Pattern -size Size (-0.279371410608)
Prediction 2: find File -type f -size Size -iname Pattern (-0.303823530674)
Prediction 3: find File \( -name Pattern -and -size Size \) (-0.31025415659)
Prediction 4: find File -name Pattern -size Size (-0.3422768116)
Prediction 5: find File -type f -size Size -not -iname Pattern (-0.363382220268)
Prediction 6: find File -type f -size Size -name Pattern (-0.392865359783)
Prediction 7: find File -type f -size Size -not -name Pattern (-0.432294845581)
Prediction 8: find File -type f -iname Pattern -size Size (-0.457585126162)
Prediction 9: find File -type f -name Pattern -size Size -print (-0.457785964012)
Prediction 10: find File -size Size -iname Pattern (-0.497531890869)

Example 29 (1)
Original English: display all the files in current folder which have been changed in the last 24 hours
English: display all file in current folder chang in last _NUM hour
GT Command 1: find . -ctime -1 -print
Prediction 1: find File -cmin Number (-0.21096765995)
Prediction 2: find File -ctime Time (-0.291014641523)
Prediction 3: find File -cmin Number -print (-0.531905591488)
Prediction 4: find File -mtime Time (-0.600941181183)
Prediction 5: find File -mtime Time -print (-0.800609230995)
Prediction 6: find File -type f -ctime Time (-0.825565099716)
Prediction 7: find File -daystart -ctime Time (-0.926380455494)
Prediction 8: find File -amin Number (-0.974842071533)
Prediction 9: find File -ctime Time -print (-1.02977192402)
Prediction 10: find File -mmin Number (-1.29166722298)

Example 30 (1)
Original English: display all the regular files in the current folder which dont not have the permission 777
English: display all regular file in current folder dont not permiss _NUM
GT Command 1: find . -type f ! -perm 777
Prediction 1: find File -type f ! -perm Permission (-0.0298989210278)
Prediction 2: find File ! -type f -perm Permission (-0.481671333313)
Prediction 3: find File -type f -perm Permission (-0.52478569746)
Prediction 4: find File -type f ! -perm Permission -print (-0.535026490688)
Prediction 5: find File -type f -perm Permission ! -perm Permission (-0.537401616573)
Prediction 6: find File ! -perm Permission -type f (-0.611590564251)
Prediction 7: find File -maxdepth Number -type f ! -perm Permission (-0.618235111237)
Prediction 8: find File -maxdepth Number -type f -perm Permission (-0.631557583809)
Prediction 9: find File -type f -perm Permission -print (-0.763030767441)
Prediction 10: find File -type f ! -perm Permission -print0 (-0.783250153065)

Example 31 (2)
Original English: find all the text files in the home directory
English: find all text file in home directori
GT Command 1: find ~/ -name '*.txt'
GT Command 2: find ~/ -name '*.txt'
Prediction 1: find File -name Pattern (-0.0767295435071)
Prediction 2: find File -iname Pattern (-0.526457846165)
Prediction 3: find File -type f -name Pattern (-0.564345300198)
Prediction 4: find File -name Pattern -type f (-0.655020833015)
Prediction 5: find File -type f -iname Pattern -print (-0.658215641975)
Prediction 6: find File -name Pattern -print (-0.70240342617)
Prediction 7: find File -name Pattern -type f -print (-0.772275388241)
Prediction 8: find File -type f -iname Pattern (-0.829999744892)
Prediction 9: find File -iname Pattern -print (-0.835727334023)
Prediction 10: find File -type f -name Pattern -print (-0.911819279194)

Example 32 (1)
Original English: To list all files in the `/usr/local/fonts' directory tree owned by the user warwick  To find files owned by a particular user, give the username to search for as an argument to the `-user' option.
English: list all file in _REGEX directori tree own by user warwick _REGEX find file own by particular user give usernam to search for as argument to _REGEX option
GT Command 1: find /usr/local/fonts -user warwick
Prediction 1: find File -user Pattern -exec ls -l {} \; (-0.118015371263)
Prediction 2: find File ! -user Pattern -exec ls -l {} \; (-0.289451420307)
Prediction 3: find File -user Pattern -exec chown -R Pattern {} \; (-0.37060675025)
Prediction 4: find File -user Pattern -print | xargs -I {} ls -l {} (-0.432700783014)
Prediction 5: find File -user Pattern -print | xargs -I {} ls -l -d {} (-0.436448693275)
Prediction 6: find File -user Pattern -ok ls -l {} \; (-0.462615907192)
Prediction 7: find File -user Pattern -exec ls {} \; (-0.489498704672)
Prediction 8: find File -user Pattern -perm Permission -print (-0.500110566616)
Prediction 9: find File -nouser -exec ls -l {} \; (-0.51596736908)
Prediction 10: find File -user Pattern -print | xargs -I {} ls -l -S -h {} (-0.545411646366)

Example 33 (1)
Original English: List all files/directories with spaces in their names under ~/Library directory
English: list all "files/directories" with space in name under _PARAMET directori
GT Command 1: find ~/Library -name '* *' -exec ls {} \;
Prediction 1: find File -name Pattern (-0.0282614305615)
Prediction 2: find File -name Pattern -exec ls -l {} \; (-0.5324857831)
Prediction 3: find File -name Pattern -print0 (-0.535184025764)
Prediction 4: find File -name Pattern | xargs -I {} ls -l {} (-0.559876799583)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.585067093372)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} ls -l -d {} (-0.627235710621)
Prediction 7: find File -name Pattern | xargs -I {} ls -l -d {} (-0.641174018383)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.668362319469)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} ls -1 -S -s -h {} (-0.694597840309)
Prediction 10: find File -print0 | xargs -0 -I {} ls -l {} (-0.761223971844)

Example 34 (1)
Original English: Remove files under /mnt/zip matching "*prets copy" with confirmation
English: remov file under _REGEX match _REGEX with confirm
GT Command 1: find /mnt/zip -name "*prefs copy" -print0 | xargs -0 -p /bin/rm
Prediction 1: find File -name Pattern -exec rm {} \; (-0.173460900784)
Prediction 2: find File -type f -name Pattern -exec rm -f {} \; (-0.198041528463)
Prediction 3: find File -type f -name Pattern -exec rm {} \; (-0.256090581417)
Prediction 4: find File -name Pattern -ok rm {} \; (-0.26149854064)
Prediction 5: find File -name Pattern | xargs -I {} rm {} (-0.29174476862)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.345669180155)
Prediction 7: find File -type f -name Pattern -ok rm {} \; (-0.359586775303)
Prediction 8: find File -type f -regex Pattern -exec rm {} \; (-0.371950656176)
Prediction 9: find File -name Pattern -exec rm -f {} \; (-0.406943231821)
Prediction 10: find File -inum Number -exec rm {} \; (-0.548116922379)

Example 35 (2)
Original English: Find all the files in file system which are changed in last 1 hour
English: find all file in file system chang in last _NUM hour
GT Command 1: find / -cmin -60
GT Command 2: find / -ctime -1
Prediction 1: find File -cmin Number (-0.141871571541)
Prediction 2: find File -cmin Number -print (-0.44656547904)
Prediction 3: find File -ctime Time (-0.491067647934)
Prediction 4: find File -mtime Time -print (-0.614894092083)
Prediction 5: find File -mtime Time (-0.640017032623)
Prediction 6: find File -type f -ctime Time (-0.943673670292)
Prediction 7: find File -daystart -ctime Time (-0.99658793211)
Prediction 8: find File -mmin Number (-1.02613639832)
Prediction 9: find File -ctime Time -print (-1.05920708179)
Prediction 10: find File -amin Number (-1.12255632877)

Example 36 (1)
Original English: search all the files in the current folder using name patterns
English: search all file in current folder use name pattern
GT Command 1: find . -name 'a(b*' -print
Prediction 1: find File -name Pattern (-0.056335683912)
Prediction 2: find File -type f -name Pattern (-0.562211930752)
Prediction 3: find File -iname Pattern (-0.666271746159)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.717048346996)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.823813796043)
Prediction 6: find File -iregex Pattern (-0.837157487869)
Prediction 7: find File -type f -iname Pattern (-0.887296199799)
Prediction 8: find File -regex Pattern (-0.910513281822)
Prediction 9: find File \( -name Pattern -or -name Pattern \) -prune (-1.02046132088)
Prediction 10: find File -type f -iname Pattern -print (-1.02839922905)

Example 37 (1)
Original English: search from the / directory for any file that is larger than 10000k (> 10MB)
English: search from "/" directori for ani file larger than _NUMK
GT Command 1: find / -size +10000k
Prediction 1: find File -size Size (-0.0565101951361)
Prediction 2: find File -size Size -print (-0.421365827322)
Prediction 3: find File -type f -size Size (-0.534506618977)
Prediction 4: find File -type f -size Size -print (-0.780520439148)
Prediction 5: find File -size Size -exec ls -l {} \; (-0.829998314381)
Prediction 6: find File File -size Size (-0.872620284557)
Prediction 7: find File -name Pattern -size Size (-0.928844988346)
Prediction 8: find File -name Pattern -size Size -print (-0.964075028896)
Prediction 9: find File -type f -iname Pattern -size Size (-1.08914041519)
Prediction 10: find File -type f -iname Pattern -size Size -print (-1.20388746262)

Example 38 (1)
Original English: List root's regular files with permissions 4000
English: list root 's regular file with permiss _NUM
GT Command 1: find / -type f -user root -perm -4000 -exec ls -l {} \;
Prediction 1: find File -type f -perm Permission -print (-0.0513075962663)
Prediction 2: find File -type f -perm Permission -exec ls -l {} \; (-0.232065200806)
Prediction 3: find File -type f -perm Permission -print -exec ls -l {} \; (-0.306098610163)
Prediction 4: find File -type f -perm Permission -print0 | xargs -0 -I {} ls -l {} (-0.375754654408)
Prediction 5: find File -type f -perm Permission -print | xargs -I {} ls -l -d {} (-0.41618129611)
Prediction 6: find File -type f -perm Permission -ls (-0.422292947769)
Prediction 7: find File -type f -perm Permission | xargs -I {} ls -l -d {} (-0.430563777685)
Prediction 8: find File -type f -perm Permission -print0 | xargs -0 -I {} ls -l -d {} (-0.430621951818)
Prediction 9: find File -perm Permission -type f -exec ls -l {} \; (-0.46264180541)
Prediction 10: find File -type f -perm Permission | xargs -I {} ls -l {} (-0.462753236294)

Example 39 (3)
Original English: Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
English: find all "files/directories" in entir file system _REGEX bit set for either owner group or other
GT Command 1: find / -perm /u+w,g+w,o+w
GT Command 2: find / -perm /222
GT Command 3: find / -perm /a+w
Prediction 1: find File -perm Permission (-0.00730454036966)
Prediction 2: find File \( -perm Permission -or -perm Permission \) ! -perm Permission (-0.708833932877)
Prediction 3: find File \( -perm Permission -or -perm Permission \) (-0.765238046646)
Prediction 4: find File \( -perm Permission -or -perm Permission -or -perm Permission \) ! -perm Permission (-0.812661409378)
Prediction 5: find File \( -perm Permission -or -perm Permission -or -perm Permission \) -ls (-0.81526017189)
Prediction 6: find File \( -perm Permission -or -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.852455258369)
Prediction 7: find File \( -perm Permission -and -perm Permission \) (-0.860014200211)
Prediction 8: find File \( -perm Permission -or -perm Permission \) -ls (-0.867808461189)
Prediction 9: find File \( -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.875329613686)
Prediction 10: find File \( -perm Permission -and ! -perm Permission \) (-0.876619338989)

Example 40 (2)
Original English: start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
English: start from current directori skip directori _REGEX and print skip all file and directori under and print name of other file found
GT Command 1: find . -wholename './src/emacs' -prune -print -o -print
GT Command 2: find . -wholename './src/emacs' -prune , -print
Prediction 1: find File \( -name Pattern -prune -or -print \) (-0.339312106371)
Prediction 2: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.352479487658)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.397401750088)
Prediction 4: find File \( -path File -prune -or -print \) (-0.40355527401)
Prediction 5: find File -type f -printf Pattern | sort -n -r | head -n Number (-0.419334679842)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print -exec ls -l {} \; (-0.449898600578)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.463487297297)
Prediction 8: find File -type f -printf Pattern | sort -r -z (-0.496559530497)
Prediction 9: find File \( -name Pattern -or -print \) (-0.503615379333)
Prediction 10: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -L Pattern {} (-0.514254152775)

Example 41 (1)
Original English: Search directory /tmp/foo for files containing "/tmp/foo/bar" in their full names
English: search directori _REGEX for file contain _REGEX in full name
GT Command 1: find /tmp/foo -path /tmp/foo/bar -print
Prediction 1: find File -name Pattern (-0.0746728926897)
Prediction 2: find File -iname Pattern (-0.398865371943)
Prediction 3: find File -iname Pattern | xargs -I {} grep -L Pattern {} (-0.62080591917)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.63910061121)
Prediction 5: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.672953546047)
Prediction 6: find File -name Pattern | xargs -I {} grep Pattern {} (-0.700683057308)
Prediction 7: find File -iname Pattern | xargs -I {} grep -E Pattern {} (-0.738304436207)
Prediction 8: find File -iname Pattern | grep Pattern (-0.797026574612)
Prediction 9: find File -iname Pattern -exec grep Pattern {} \; (-0.863250017166)
Prediction 10: find File -name Pattern -print (-0.864291369915)

Example 42 (1)
Original English: List all zero-length files
English: list all zero-length file
GT Command 1: find . -empty -exec ls {} \;
Prediction 1: find File -print | xargs -I {} ls -l {} (-0.39339196682)
Prediction 2: find File ! -name Pattern (-0.43342217803)
Prediction 3: find File -print | xargs -I {} ls -l -d {} (-0.437679082155)
Prediction 4: find File -name Pattern (-0.444576948881)
Prediction 5: find File ! -name Pattern -print (-0.535619199276)
Prediction 6: find File -exec ls -l {} \; (-0.580218553543)
Prediction 7: find File -print | xargs -I {} ls {} (-0.585562944412)
Prediction 8: find File -type f -name Pattern (-0.590059995651)
Prediction 9: find File -type f -name Pattern -print (-0.671125710011)
Prediction 10: find File -path File (-0.674654483795)

Example 43 (1)
Original English: Delete all HTML files under tree ~/mydir
English: delet all _REGEX file under tree _PARAMET
GT Command 1: find ~/mydir -iname '*.htm' -exec rm {} \;
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.0880274027586)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.212496578693)
Prediction 3: find File -name Pattern -exec rm {} \; (-0.215536803007)
Prediction 4: find File -name Pattern -delete (-0.367646932602)
Prediction 5: find File -name Pattern | xargs -0 -I {} rm {} (-0.378749549389)
Prediction 6: find File -name Pattern | xargs -r -I {} rm {} (-0.423915565014)
Prediction 7: find File -name Pattern -exec rm -r -f {} \; (-0.433277904987)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.449210643768)
Prediction 9: find File -name Pattern | xargs -I {} rm -r -f {} (-0.472324222326)
Prediction 10: find File -type f -name Pattern -exec rm {} \; (-0.500677466393)

Example 44 (1)
Original English: Move files older than 1 day to directory TMP
English: move file older than _NUM day to directori _REGEX
GT Command 1: find . -atime +1 -type f -exec mv {} TMP \;
Prediction 1: find File -type f -mtime Time -name Pattern -exec ls -l {} \; (-0.284047067165)
Prediction 2: find File -type f -mtime Time -name Pattern -exec mv {} File \; (-0.29889434576)
Prediction 3: find File -mtime Time -type f -name Pattern -exec mv {} File \; (-0.317462712526)
Prediction 4: find File -type f -mtime Time -mtime Time -exec mv {} File \; (-0.320690363646)
Prediction 5: find File -type f -mtime Time -mtime Time -exec ls -l {} \; (-0.327752143145)
Prediction 6: find File -mtime Time -name Pattern -print | xargs -I {} mv {} File (-0.334288448095)
Prediction 7: find File -mtime Time -type f -name Pattern -exec rm -f {} \; (-0.343863487244)
Prediction 8: find File -mtime Time -name Pattern -exec mv {} File \; (-0.368977814913)
Prediction 9: find File -mtime Time -name Pattern -print | xargs -I {} rm -r -f {} (-0.392886549234)
Prediction 10: find File -mtime Time -mtime Time -exec mv {} File \; (-0.393896698952)

Example 45 (1)
Original English: Find all .c and .h files in the current directory tree and search them for "expr"
English: find all _REGEX and _REGEX file in current directori tree and search for _REGEX
GT Command 1: find -name '*.[ch]' | xargs grep -E 'expr'
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.162843853235)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.1784684062)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; (-0.213445395231)
Prediction 4: find File -type f -name Pattern -exec grep Pattern {} \; (-0.287992358208)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.308770507574)
Prediction 6: find File -name Pattern -exec grep Pattern {} \; -print (-0.312049567699)
Prediction 7: find File -type f -name Pattern | xargs -I {} grep Pattern {} (-0.317353248596)
Prediction 8: find File -type f -name Pattern -exec grep -H Pattern {} \; (-0.326993227005)
Prediction 9: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.340656548738)
Prediction 10: find File -type f -name Pattern -exec grep Pattern {} \; -print (-0.353990167379)

Example 46 (2)
Original English: print all files in the directories except the ./src/emacs directory
English: print all file in directori except _REGEX directori
GT Command 1: find . -wholename './src/emacs' -prune , -print
GT Command 2: find . -wholename './src/emacs' -prune -o -print
Prediction 1: find File \( ! -path File -prune -or -print \) (-0.332875341177)
Prediction 2: find File -maxdepth Number \( -name Pattern -prune -or -print \) (-0.347491294146)
Prediction 3: find File \( -path File -prune -or -print \) (-0.381639868021)
Prediction 4: find File ! -name Pattern -prune (-0.468169718981)
Prediction 5: find File -maxdepth Number ! -name Pattern -prune (-0.474345654249)
Prediction 6: find File -maxdepth Number ! -name Pattern -print (-0.506658911705)
Prediction 7: find File -maxdepth Number ! -name Pattern (-0.537426412106)
Prediction 8: find File \( ! -path File -and ! -name Pattern \) (-0.569838523865)
Prediction 9: find File ! -path File -prune (-0.599892675877)
Prediction 10: find File ! -path File -print (-0.611550331116)

Example 47 (1)
Original English: list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.
English: list regular file under user 's home directori over _NUMKB and not access in over _NUM day
GT Command 1: find $HOME -type f -atime +30 -size 100k
Prediction 1: find File -type f -atime Time -exec ls -l {} \; (-0.164818122983)
Prediction 2: find File -type f -atime Time -print (-0.337729692459)
Prediction 3: find File -type f -atime Time -print | xargs -I {} ls -l {} (-0.357001960278)
Prediction 4: find File File -type f -atime Time -exec ls -l {} \; (-0.368068963289)
Prediction 5: find File -type f -atime Time -exec ls {} \; (-0.382674604654)
Prediction 6: find File -type f -atime Time -print -exec ls -l {} \; (-0.40157854557)
Prediction 7: find File \( -type f -and -mtime Time -and -print0 \) \) (-0.43399181962)
Prediction 8: find File -type f -atime Time -print | xargs -I {} rm {} (-0.477084100246)
Prediction 9: find File -type f -atime Time ! -name Pattern -print (-0.480365455151)
Prediction 10: find File \( -type f -and -mtime Time -and ! -name Pattern \) (-0.498355269432)

Example 48 (1)
Original English: Find all files matching shell pattern "foo/bar" in the foo directory tree
English: find all file match shell pattern _REGEX in foo directori tree
GT Command 1: find foo -path foo/bar -print
Prediction 1: find File -name Pattern (-0.133274868131)
Prediction 2: find File -iname Pattern (-0.303072243929)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.556250751019)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.669008016586)
Prediction 5: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.708057820797)
Prediction 6: find File -type f -name Pattern (-0.727387845516)
Prediction 7: find File \( -iname Pattern -or -iname Pattern \) -print (-0.744204878807)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) (-0.754676699638)
Prediction 9: find File -type f -iname Pattern (-0.767947912216)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.780406832695)

Example 49 (2)
Original English: find all the swap files (files ending with ~) in the current folder and delete them
English: find all swap file in current folder and delet
GT Command 1: find . -name "*~" -delete
GT Command 2: find . -name "*~" -exec rm {} \;
Prediction 1: find File -type f -name Pattern -exec rm {} \; (-0.104597195983)
Prediction 2: find File -type f -name Pattern -exec rm -f {} \; (-0.138612180948)
Prediction 3: find File -name Pattern -exec rm {} \; (-0.210718616843)
Prediction 4: find File -type f -name Pattern -print0 | xargs -0 -I {} rm {} (-0.305064529181)
Prediction 5: find File -type f -name Pattern | xargs -I {} rm {} (-0.3155400455)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.393798261881)
Prediction 7: find File -type f -name Pattern -delete (-0.398672491312)
Prediction 8: find File -type f -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.411254912615)
Prediction 9: find File -type f -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.417468994856)
Prediction 10: find File -type f -name Pattern -exec rm -v -f {} \; (-0.436776012182)

Example 50 (2)
Original English: Find files under current directory that contains the string '/bin/ksh'
English: find file under current directori contain string _REGEX
GT Command 1: find . -type f -exec grep -iH '/bin/ksh' {} \;
GT Command 2: find . -type f -print | xargs    grep -il 'bin/ksh'
Prediction 1: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.265854299068)
Prediction 2: find File -type f -name Pattern -exec grep -H Pattern {} \; (-0.271044135094)
Prediction 3: find File -type f -name Pattern -exec grep -l Pattern {} \; (-0.294047683477)
Prediction 4: find File -name Pattern -type f -print | xargs -I {} grep Pattern {} (-0.305256456137)
Prediction 5: find File -name Pattern -exec grep Pattern {} \; (-0.309242576361)
Prediction 6: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.311885476112)
Prediction 7: find File -name Pattern -type f -exec grep -H Pattern {} \; (-0.327282994986)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.328540295362)
Prediction 9: find File -type f -name Pattern -exec grep Pattern {} \; (-0.332649260759)
Prediction 10: find File -name Pattern -exec grep Pattern {} \; -print (-0.364395499229)

Example 51 (1)
Original English: Remove files in the current directory tree modified more than 31 days ago recursively
English: remov file in current directori tree modifi more than _NUM day ago recurs
GT Command 1: find . -type f -mtime +31 -print0 | xargs -0 -r rm -f
Prediction 1: find File -type f -mtime Time -exec rm -f {} \; (-0.110811121762)
Prediction 2: find File -mtime Time -exec rm -f {} \; (-0.231705367565)
Prediction 3: find File -type f -mtime Time -print0 | xargs -0 -I {} rm {} (-0.250247001648)
Prediction 4: find File -mtime Time -exec rm {} \; (-0.26865363121)
Prediction 5: find File -type f -mtime Time -mtime Time -exec rm -f {} \; (-0.283508390188)
Prediction 6: find File -mtime Time -print0 | xargs -0 -I {} rm {} (-0.285391300917)
Prediction 7: find File -type f -mtime Time -print0 | xargs -0 -I {} rm -f {} (-0.301741749048)
Prediction 8: find File -type f -mtime Time -exec rm {} \; (-0.34355288744)
Prediction 9: find File -type f -mtime Time -print0 | xargs -0 -I {} rm -r -f {} (-0.361526221037)
Prediction 10: find File -type f -mtime Time | xargs -I {} rm {} (-0.422806531191)

Example 52 (1)
Original English: List all files except for those in directory SCCS
English: list all file except for in directori _REGEX
GT Command 1: find . -print -o -name SCCS -prune
Prediction 1: find File \( -path File -prune -or -print \) (-0.267443865538)
Prediction 2: find File ! -name Pattern -prune (-0.270536661148)
Prediction 3: find File \( -path File -prune -or -name Pattern \) -print (-0.281082034111)
Prediction 4: find File \( -name Pattern -prune -or -print \) (-0.389724761248)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.446181178093)
Prediction 6: find File ! -path File -prune (-0.500960886478)
Prediction 7: find File ! -path File -prune -name Pattern (-0.506070375443)
Prediction 8: find File \( -path File -prune -or -name Pattern \) (-0.508006393909)
Prediction 9: find File -not -path File -prune -name Pattern (-0.526255607605)
Prediction 10: find File -not -path File -prune (-0.58143466711)

Example 53 (1)
Original English: Find every vim undo file in the current directory tree
English: find everi vim undo file in current directori tree
GT Command 1: find -type f -iname '*.un~'
Prediction 1: find File -name Pattern (-0.032568346709)
Prediction 2: find File -type f -name Pattern (-0.633802235126)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.695827305317)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.726413667202)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.753571271896)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) (-0.800566077232)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.821495652199)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.837607085705)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.864142119884)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.866038501263)

Example 54 (1)
Original English: Find every vim undo file under current directory
English: find everi vim undo file under current directori
GT Command 1: find -type f -iname '*.un~'
Prediction 1: find File -name Pattern (-0.0881853401661)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.600863873959)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.63577246666)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.696032047272)
Prediction 5: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.711056232452)
Prediction 6: find File -iname Pattern (-0.717622995377)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.723073422909)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.743126034737)
Prediction 9: find File \( -name Pattern -or -name Pattern \) -or -type f \) (-0.747059524059)
Prediction 10: find File -type f -name Pattern (-0.761607706547)

Example 55 (1)
Original English: Find all empty regular files in the current directory tree
English: find all empti regular file in current directori tree
GT Command 1: find . -size 0c -type f
Prediction 1: find File -type f -empty (-0.0196880958974)
Prediction 2: find File -type f -size Size -print (-0.497010946274)
Prediction 3: find File -type f -size Size (-0.615969717503)
Prediction 4: find File -type f -empty -exec ls -l {} \; (-0.656103551388)
Prediction 5: find File -type f -empty | xargs -I {} ls -l {} (-0.673282921314)
Prediction 6: find File -type f -size Size -exec ls -l {} \; (-0.723317205906)
Prediction 7: find File -type f \( -empty -or -type f \) -print (-0.797751188278)
Prediction 8: find File -type f -empty -print (-0.805143117905)
Prediction 9: find File -type f -empty -print0 (-0.815552890301)
Prediction 10: find File -type f -empty | xargs -I {} ls -l -S {} (-0.846664369106)

Example 56 (1)
Original English: Search the ~/Books directory recursively for files named "Waldo"
English: search _PARAMET directori recurs for file name _REGEX
GT Command 1: find ~/Books -name Waldo
Prediction 1: find File -name Pattern (-0.0126933585852)
Prediction 2: find File -name Pattern -type f (-0.622643649578)
Prediction 3: find File -type f -name Pattern (-0.867891311646)
Prediction 4: find File -name Pattern -print (-1.06468749046)
Prediction 5: find File -iname Pattern (-1.19117188454)
Prediction 6: find File -name Pattern -name Pattern (-1.20618951321)
Prediction 7: find File -name Pattern -type f -print (-1.21863365173)
Prediction 8: find File -name Pattern -prune (-1.32705879211)
Prediction 9: find File -type d -name Pattern (-1.38803815842)
Prediction 10: find File -name Pattern -type d (-1.54240274429)

Example 57 (1)
Original English: Find all files in the current directory tree whose names are "file_name", except for those with pathnames matching pattern "./dirt to be Excluded/*"
English: find all file in current directori tree whose name _REGEX except for with pathnam match pattern _REGEX
GT Command 1: find ./ -iname file_name ! -path "./dirt to be Excluded/*"
Prediction 1: find File \( -path File -prune -or -print \) (-0.117156744003)
Prediction 2: find File \( -path File -prune -or -name Pattern \) -print (-0.212288767099)
Prediction 3: find File \( -path File -prune -or -name Pattern \) (-0.341926902533)
Prediction 4: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -print (-0.394324690104)
Prediction 5: find File \( -name Pattern -and -not -path File \) (-0.397905498743)
Prediction 6: find File -type f \( -name Pattern -and -not -path File \) (-0.406896322966)
Prediction 7: find File -type f \( -path File -prune -or -name Pattern \) -print (-0.423160731792)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.455383121967)
Prediction 9: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) (-0.496343612671)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.506563365459)

Example 58 (2)
Original English: List all empty files in the current directory tree
English: list all empti file in current directori tree
GT Command 1: find . -empty -exec ls {} \;
GT Command 2: find . -type f -empty
Prediction 1: find File -type f -empty (-0.067667350173)
Prediction 2: find File -type f -empty | xargs -I {} ls -l {} (-0.302129715681)
Prediction 3: find File -type f -empty -exec ls -l {} \; (-0.322324961424)
Prediction 4: find File -type f -empty -print0 | xargs -0 -I {} ls -l {} (-0.39536973834)
Prediction 5: find File -type f -empty | xargs -I {} ls -l -d {} (-0.476654887199)
Prediction 6: find File -type f -empty -print | xargs -I {} ls -l {} (-0.484804093838)
Prediction 7: find File -type f -empty -print0 | xargs -0 -I {} ls {} (-0.492791473866)
Prediction 8: find File -type f -empty | xargs -I {} ls -l -S -h {} (-0.502978086472)
Prediction 9: find File -type f -empty | xargs -I {} ls {} (-0.512655973434)
Prediction 10: find File -type f -empty -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.521851062775)

Example 59 (1)
Original English: find all the log files in the file system
English: find all log file in file system
GT Command 1: find / -name "*.log"
Prediction 1: find File -name Pattern (-0.0416353233159)
Prediction 2: find File -name Pattern -print (-0.532674908638)
Prediction 3: find File -type f -name Pattern (-0.598074257374)
Prediction 4: find File -name Pattern -type f -print (-0.686306774616)
Prediction 5: find File -name Pattern -type f (-0.758150279522)
Prediction 6: find File -type f -name Pattern -print (-0.942611157894)
Prediction 7: find File -name Pattern -size Size -print (-1.07977116108)
Prediction 8: find File -name Pattern -newer File (-1.0875428915)
Prediction 9: find File -name Pattern -size Size (-1.12612485886)
Prediction 10: find File -iname Pattern (-1.17422008514)

Example 60 (2)
Original English: find Texinfo source files in /usr/local/doc
English: find _REGEX sourc file in _REGEX
GT Command 1: find foo -path foo/bar -print
GT Command 2: find /usr/local/doc -name '*.texi'
Prediction 1: find File -name Pattern (-0.0439732782543)
Prediction 2: find File -type f -name Pattern (-0.417481094599)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.538274765015)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.622841775417)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.644073009491)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -name Pattern -print (-0.687474906445)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.690955400467)
Prediction 8: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.698498547077)
Prediction 9: find File \( -name Pattern -or -name Pattern \) {} \;  (-0.718430757523)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -name Pattern (-0.725772440434)

Example 61 (1)
Original English: display all the html files in the current folder that have not been modified in the last 7*24 horus
English: display all html file in current folder not modifi in last _REGEX hour
GT Command 1: find . -mtime +7 -name "*.html" -print
Prediction 1: find File -mtime Time -name Pattern -print (-0.0571283102036)
Prediction 2: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -t -r {} | tail -n Number (-0.432819664478)
Prediction 3: find File -mtime Time -type f -name Pattern -print (-0.453415185213)
Prediction 4: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -t -r {} | head -n Number (-0.489359945059)
Prediction 5: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -d {} (-0.497219949961)
Prediction 6: find File \( -name Pattern -and -mtime Time -and -mtime Time \) (-0.545589923859)
Prediction 7: find File -mtime Time -name Pattern -print | xargs -I {} ls -l {} (-0.549245476723)
Prediction 8: find File -type f -mtime Time -name Pattern -print (-0.555158913136)
Prediction 9: find File -mtime Time -type f -name Pattern (-0.564630389214)
Prediction 10: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -t -r {} | tail File (-0.573591113091)

Example 62 (1)
Original English: Find all directories under and below /home/admin/public_html/, and change their permissions to 755
English: find all directori under and below _REGEX and chang permiss to _NUM
GT Command 1: find /home/admin/public_html/ -type d -exec chmod 755 {} \;
Prediction 1: find File -type d -exec chmod Permission {} \; (-0.0304078683257)
Prediction 2: find File -type d -print0 | xargs -0 -I {} chmod Permission {} (-0.181460484862)
Prediction 3: find File -type d -name Pattern -exec chmod Permission {} \; (-0.3717636168)
Prediction 4: find File -type d -print0 | xargs -0 -I {} chmod -R Permission {} (-0.41427603364)
Prediction 5: find File -type d -print0 | xargs -0 -I {} chmod -v Permission {} (-0.422930061817)
Prediction 6: find File -type d -print0 | xargs -0 -I {} chmod Unknown {} (-0.432135283947)
Prediction 7: find File -name Pattern -type d -exec chmod Permission {} \; (-0.457206040621)
Prediction 8: find File -type d | xargs -I {} chmod Permission {} (-0.462248802185)
Prediction 9: find File File -type d -exec chmod Permission {} \; (-0.51426666975)
Prediction 10: find File -type d -print -exec chmod Permission {} \; (-0.529117703438)

Example 63 (1)
Original English: find all the regular/normal files in a folder which are less than 50 bytes.
English: find all "regular/normal" file in folder less than _NUM byte
GT Command 1: find /usr/bin -type f -size -50c
Prediction 1: find File -type f -size Size (-0.0187788009644)
Prediction 2: find File -size Size -type f (-0.570420444012)
Prediction 3: find File -type f -size Size -print (-0.707383215427)
Prediction 4: find File File -type f -size Size (-0.813207507133)
Prediction 5: find File -type f -newer File (-0.895345985889)
Prediction 6: find File -type f -links Number (-0.910810947418)
Prediction 7: find File -depth -type f -size Size (-0.926518797874)
Prediction 8: find File -type f -empty (-0.959482848644)
Prediction 9: find File -size Size -type f -print (-0.992267787457)
Prediction 10: find File -type type_descriptor -size Size (-1.01661550999)

Example 64 (1)
Original English: display a long list of all regular/normal files in the file system which belong to the root and with suid bit set
English: display long list of all "regular/normal" file in file system belong to root and with suid bit set
GT Command 1: find / -type f -user root -perm -4000 -exec ls -l {} \;
Prediction 1: find File -perm Permission -type f -exec ls -l {} \; (-0.139500454068)
Prediction 2: find File -user Pattern -perm Permission -type f -exec ls -l {} \; (-0.286068737507)
Prediction 3: find File -perm Permission -exec ls -l {} \; (-0.313478857279)
Prediction 4: find File -perm Permission -type f | xargs -I {} ls -l {} (-0.330242335796)
Prediction 5: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l {} (-0.341027289629)
Prediction 6: find File \( -perm Permission -or -perm Permission \) -ls (-0.363221555948)
Prediction 7: find File -user Pattern -type f -perm Permission -exec ls -l {} \; (-0.375765621662)
Prediction 8: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l -S -h {} (-0.383795589209)
Prediction 9: find File -perm Permission -type f | xargs -I {} ls -l -S -h {} (-0.424954593182)
Prediction 10: find File -user Pattern -type f -perm Permission -ls (-0.431789785624)

Example 65 (1)
Original English: Locate files whose status was changed less than 1 day ago
English: locat file whose status chang less than _NUM day ago
GT Command 1: find . -ctime -1 -print
Prediction 1: find File -ctime Time (-0.03925415501)
Prediction 2: find File -cmin Number (-0.679637134075)
Prediction 3: find File -name Pattern -ctime Time (-0.825474500656)
Prediction 4: find File -ctime Time -print (-0.987228035927)
Prediction 5: find File -type f -ctime Time (-1.00907361507)
Prediction 6: find File -mtime Time (-1.0930441618)
Prediction 7: find File -mtime Time -print (-1.14707219601)
Prediction 8: find File File -ctime Time (-1.17075777054)
Prediction 9: find File -cmin Number -print (-1.1767706871)
Prediction 10: find File -amin Number (-1.2249686718)

Example 66 (1)
Original English: Find files with inode number 199053
English: find file with inod number _NUM
GT Command 1: find / -inum 199053
Prediction 1: find File -inum Number (-0.0209996029735)
Prediction 2: find File -inum Number -exec ls -l {} \; (-0.658579468727)
Prediction 3: find -x File -inum Number (-0.672801136971)
Prediction 4: find File -inum Number -print (-0.861968696117)
Prediction 5: find File -inum Number -exec ls {} \; (-0.942148983479)
Prediction 6: find File -inum Number -exec ls -l -r {} \; (-1.04522037506)
Prediction 7: find File -inum Number -exec ls -l -d {} \; (-1.04709541798)
Prediction 8: find File -type f -inum Number (-1.07247948647)
Prediction 9: find File -follow -inum Number (-1.11828267574)
Prediction 10: find File -xdev -inum Number (-1.26272296906)

Example 67 (2)
Original English: Remove all files whose names end with "~" in the /home/peter directory tree
English: remov all file whose name end with _PARAMET in _REGEX directori tree
GT Command 1: find /home/peter -name *~ |xargs rm
GT Command 2: find /home/peter -name *~ -print0 |xargs -0 rm
Prediction 1: find File -name Pattern -exec rm {} \; (-0.105836637318)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.144316375256)
Prediction 3: find File -name Pattern | xargs -I {} rm {} (-0.145135000348)
Prediction 4: find File -name Pattern -exec rm -f {} \; (-0.40120446682)
Prediction 5: find File -type f -name Pattern -exec rm -f {} \; (-0.410095661879)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.418733626604)
Prediction 7: find File -name Pattern -print | xargs -I {} rm {} (-0.427838772535)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.438917666674)
Prediction 9: find File -type f -name Pattern -exec rm {} \; (-0.516100645065)
Prediction 10: find File -name Pattern -print0 | xargs -I {} rm {} (-0.531355917454)

Example 68 (1)
Original English: Delete files with inode number specified by [inode-number] under current directory
English: delet file with inod number specifi by _REGEX under current directori
GT Command 1: find . -inum [inode-number] -exec rm -i {} \;
Prediction 1: find File -inum Number -exec rm {} \; (-0.0121183842421)
Prediction 2: find File -type f -inum Number -exec rm {} \; (-0.345843106508)
Prediction 3: find File -inum Number | xargs -I {} rm {} (-0.477311372757)
Prediction 4: find File -inum Number -print0 | xargs -0 -I {} rm {} (-0.482034921646)
Prediction 5: find File -inum Number -exec mv {} File \; (-0.599517822266)
Prediction 6: find File -inum Number -exec rm -i {} \; (-0.609551548958)
Prediction 7: find File -inum Number -exec rm -r -f {} \; (-0.636902213097)
Prediction 8: find File -inum Number -exec rm -r {} \; (-0.683561146259)
Prediction 9: find File -inum Number -exec rm -f {} \; (-0.729384958744)
Prediction 10: find File -type f -inum Number -delete (-0.757405221462)

Example 69 (1)
Original English: Find all empty regular files in the current directory and below
English: find all empti regular file in current directori and below
GT Command 1: find . -type f -empty
Prediction 1: find File -type f -empty (-0.0253736916929)
Prediction 2: find File -type f -size Size (-0.451440185308)
Prediction 3: find File -type f -size Size -print (-0.500817000866)
Prediction 4: find File -type f \( -size Size -and -print \) (-0.747951745987)
Prediction 5: find File -type f \( -size Size -and -fprintf -and File -and File \) (-0.766753971577)
Prediction 6: find File -type f \( -size Size -and -fprintf -and File -and File \) \) (-0.836730539799)
Prediction 7: find File -type f \( -empty -or -type f \) (-0.856159567833)
Prediction 8: find File -type f \( -empty -or -type f \) -print (-0.868276059628)
Prediction 9: find File -type f \( -size Size -and -fprintf -and File -and File \) -print (-0.900301992893)
Prediction 10: find File -maxdepth Number -type f -empty (-0.90085798502)

Example 70 (1)
Original English: find all the configuration files which have been accessed in the last 30 minutes.
English: find all configur file access in last _NUM minut
GT Command 1: find /etc/sysconfig -amin -30
Prediction 1: find File -amin Number -name Pattern (-0.0751900225878)
Prediction 2: find File -amin Number (-0.353126585484)
Prediction 3: find File -amin Number -amin Number (-0.402629286051)
Prediction 4: find File -amin Number \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.739368617535)
Prediction 5: find File -amin Number \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.743937015533)
Prediction 6: find File -amin Number \( -name Pattern -or -name Pattern \) (-0.779156506062)
Prediction 7: find File -amin Number \( -name Pattern -or -name Pattern \) -print (-0.785545170307)
Prediction 8: find File -amin Number -type f -name Pattern (-0.836291313171)
Prediction 9: find File -amin Number -amin Number -name Pattern (-0.841039955616)
Prediction 10: find File -amin Number \( -name Pattern -or -name Pattern \) -type f -print (-0.845955848694)

Example 71 (1)
Original English: display list of all the hidden files in the home folder
English: display list of all hidden file in home folder
GT Command 1: find $HOME -name ".*" -ls
Prediction 1: find File -name Pattern -print (-0.120974555612)
Prediction 2: find File -name Pattern -ls (-0.279818743467)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.445554792881)
Prediction 4: find File -name Pattern -exec ls -l {} \; (-0.477490365505)
Prediction 5: find File -name Pattern -print | xargs -I {} ls -l {} (-0.480265259743)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.513386249542)
Prediction 7: find File -name Pattern -print | xargs -I {} ls -l -d {} (-0.543276965618)
Prediction 8: find File -name Pattern -exec ls {} \; (-0.608407497406)
Prediction 9: find File -name Pattern -print | xargs -I {} ls {} (-0.615995466709)
Prediction 10: find File -name Pattern (-0.65797317028)

Example 72 (1)
Original English: dispaly a long listig of all the files in the current folder which are bigger than 100KB
English: display long list of all file in current folder bigger than _NUMKB
GT Command 1: find . -size +100000 -ls
Prediction 1: find File -size Size -exec ls -l -h {} \; (-0.0953612476587)
Prediction 2: find File -size Size -exec ls -l -h {} + (-0.167772188783)
Prediction 3: find File -size Size -exec ls -l {} \; (-0.241407290101)
Prediction 4: find File -size Size -print0 | xargs -0 -I {} ls -l -S -h {} (-0.285366624594)
Prediction 5: find File -size Size -exec ls -l -S -h {} \; (-0.313155978918)
Prediction 6: find File -size Size -exec ls -l -S -h {} + (-0.356412440538)
Prediction 7: find File -size Size -exec ls -l {} + (-0.37822419405)
Prediction 8: find File -size Size -print0 | xargs -0 -I {} ls -l -S -h -S -h {} (-0.389573216438)
Prediction 9: find File -size Size -print0 | xargs -0 -I {} ls -l -S -S -h {} (-0.404709875584)
Prediction 10: find File -size Size -exec ls -l -S {} + (-0.438110023737)

Example 73 (1)
Original English: Find *.html files in the current directory tree that were last modified more than 7 days ago
English: find _REGEX file in current directori tree last modifi more than _NUM day ago
GT Command 1: find . -mtime +7 -name "*.html" -print
Prediction 1: find File -name Pattern -mtime Time (-0.250957369804)
Prediction 2: find File -name Pattern -mtime Time -mtime Time (-0.265477895737)
Prediction 3: find File -mtime Time -name Pattern (-0.326825886965)
Prediction 4: find File -name Pattern -mtime Time -daystart (-0.387002080679)
Prediction 5: find File -mtime Time -name Pattern -print (-0.390365242958)
Prediction 6: find File -type f -name Pattern -mtime Time -mtime Time (-0.438815534115)
Prediction 7: find File -name Pattern -mtime Time -print0 (-0.521699368954)
Prediction 8: find File -type f -mtime Time -name Pattern (-0.555348694324)
Prediction 9: find File -mtime Time -name Pattern -print0 (-0.588380038738)
Prediction 10: find File -type f -name Pattern -mtime Time (-0.605506896973)

Example 74 (1)
Original English: display all the text files in the current folder  and do not search in the bin directory
English: display all text file in current folder and not search in bin directori
GT Command 1: find . -name bin -prune -o -name "*.txt" -print
Prediction 1: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.217715725303)
Prediction 2: find File \( -path File -prune -or -name Pattern \) -print (-0.268089324236)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -prune -or -print \) (-0.330292463303)
Prediction 4: find File \( -name Pattern -prune -or \( -type f -and -print0 \) \) (-0.335762828588)
Prediction 5: find File \( \( -name Pattern -prune -or -name Pattern \) -prune -or -print \) (-0.3697026968)
Prediction 6: find File -maxdepth Number \( -name Pattern -prune -or -name Pattern \) -print (-0.372583240271)
Prediction 7: find File \( -name Pattern -prune -and -name Pattern \) -prune -or -print \) (-0.380540698767)
Prediction 8: find File \( -name Pattern -prune -or \( -type f -and -name Pattern \) -and ! -name Pattern \) -print (-0.39343136549)
Prediction 9: find File \( -name Pattern -prune -or \( -type f -and -name Pattern \) -and ! -name Pattern \) -prune -or -print \) (-0.393742084503)
Prediction 10: find File \( -name Pattern -prune -or \( -type f -and -name Pattern \) -prune -or -print \) (-0.398515611887)

Example 75 (1)
Original English: find all the files in the /usr folder which have modification date less than or equal to the file "/FirstFile"
English: find all file in _REGEX folder modif date less than or equal to file _REGEX
GT Command 1: find /usr ! -newer /FirstFile -print
Prediction 1: find File \( -size Size -and -fprintf -and File -and File \) (-0.427043825388)
Prediction 2: find File -size Size -print (-0.431342065334)
Prediction 3: find File \( -name Pattern -and -size Size \) (-0.434303551912)
Prediction 4: find File \( -name Pattern -or -size Size \) (-0.464541494846)
Prediction 5: find File \( -size Size -and -fprintf -and File -and File -and File \) (-0.477061003447)
Prediction 6: find File \( -name Pattern -or -size Size \) -print (-0.496129930019)
Prediction 7: find File \( -name Pattern -and -size Size \) -print (-0.50871771574)
Prediction 8: find File \( -size Size -and -fprintf -and File -and File \) \) (-0.513569414616)
Prediction 9: find File \( -size Size -and -fprintf -and File -and File -and File \) \) (-0.530485033989)
Prediction 10: find File \( -iname Pattern -and -size Size \) (-0.546725273132)

Example 76 (1)
Original English: search for all the directories ending with ".mp3" in the file system and move them to the folder /mnt/mp3
English: search for all directori end with _REGEX in file system and move to folder _REGEX
GT Command 1: find / -iname "*.mp3" -type d -exec /bin/mv {} /mnt/mp3 \;
Prediction 1: find File -name Pattern -type d -exec mv {} File \; (-0.121470212936)
Prediction 2: find File -type d -name Pattern -exec mv {} File \; (-0.146547794342)
Prediction 3: find File -name Pattern -type d -print0 | xargs -0 -I {} mv {} File (-0.19298774004)
Prediction 4: find File -name Pattern -type d | xargs -I {} mv {} File (-0.251482248306)
Prediction 5: find File -type d -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.262872368097)
Prediction 6: find File -iname Pattern -type d -exec mv {} File \; (-0.264217555523)
Prediction 7: find File -name Pattern -type d | xargs -I {} tar -c -v -f Unknown {} (-0.283778846264)
Prediction 8: find File -type d -name Pattern -execdir mv {} File \; (-0.330514460802)
Prediction 9: find File -type d -iname Pattern -exec mv {} File \; (-0.332603335381)
Prediction 10: find File -iname Pattern -type d | xargs -I {} mv {} File (-0.347799807787)

Example 77 (1)
Original English: Find all the files on the system that have been changed within the last hour
English: find all file on system chang within last hour
GT Command 1: find / -cmin -60
Prediction 1: find File -cmin Number (-0.0617266446352)
Prediction 2: find File -ctime Time (-0.54884403944)
Prediction 3: find File -cmin Number -print (-0.716808855534)
Prediction 4: find File -cmin Number | xargs -I {} ls -l -d {} (-0.834110319614)
Prediction 5: find File -cmin Number | xargs -I {} ls -l -S -h {} (-0.86685782671)
Prediction 6: find File -cmin Number | xargs -I {} ls -l -S -s -h {} (-0.903341472149)
Prediction 7: find File -cmin Number | xargs -I {} ls -S -s -h {} (-0.92655980587)
Prediction 8: find File -mmin Number (-0.936064004898)
Prediction 9: find File -cmin Number | xargs -I {} ls -1 -S -h -s -h {} (-0.976053059101)
Prediction 10: find File -amin Number (-0.996247947216)

Example 78 (1)
Original English: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the paths */generated/* and */deploy/*
English: list all "files/directories" under current directori match posix-egrep type regex _PARAMET in name exclud path _REGEX and _REGEX
GT Command 1: find . -regextype posix-egrep -regex '.+\.(c|cpp|h)$' -not -path '*/generated/*' -not -path '*/deploy/*' -print0 | xargs -0 ls -L1d
Prediction 1: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -print0 | xargs -0 -I {} ls -l {} (-0.353509455919)
Prediction 2: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -exec ls -l {} \; (-0.364015340805)
Prediction 3: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -printf Pattern | xargs -I {} ls -l {} (-0.375025123358)
Prediction 4: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -print0 | xargs -0 -I {} ls -l {} (-0.376005768776)
Prediction 5: find File \( -path File -prune -or \( -type f -and -mtime Time -and -print0 \) \) | xargs -0 -I {} grep -l Pattern {} (-0.380798876286)
Prediction 6: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -print0 | xargs -0 -I {} ls {} (-0.384369313717)
Prediction 7: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -print0 | xargs -0 -I {} grep -l Pattern {} (-0.38634967804)
Prediction 8: find File \( -path File -prune -or \( -type f -and -regex Pattern -and -not -regex Pattern \) (-0.402088969946)
Prediction 9: find File \( -path File -prune -or \( -type f -and -mtime Time -and -print0 \) \) | xargs -0 -I {} grep Pattern {} (-0.404406994581)
Prediction 10: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -print0 | xargs -0 -I {} ls {} (-0.405482262373)

Example 79 (1)
Original English: find all the files starting with a specific name in a folder
English: find all file start with specif name in folder
GT Command 1: find /etc -name "host*" — print
Prediction 1: find File -name Pattern (-0.0422734841704)
Prediction 2: find File -iname Pattern (-0.517413973808)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.796459972858)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.839204549789)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.851742148399)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.926132321358)
Prediction 7: find File -type f -name Pattern (-0.935611188412)
Prediction 8: find File \( -name Pattern -prune -or -print \) (-0.939073860645)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.979144096375)
Prediction 10: find File -name Pattern -print (-1.01706242561)

Example 80 (1)
Original English: display all the files in the kat folder
English: display all file in cat folder
GT Command 1: find kat -printf "%f\n"
Prediction 1: find File -type f (-0.236144691706)
Prediction 2: find File -print (-0.506740748882)
Prediction 3: find File -type f -print (-0.597053170204)
Prediction 4: find File (-0.841798067093)
Prediction 5: find File -maxdepth Number (-0.875701189041)
Prediction 6: find File -type f -links Number (-0.893566429615)
Prediction 7: find File -mindepth Number (-1.08845221996)
Prediction 8: find File -type f -depth (-1.14406609535)
Prediction 9: find File -mindepth Number -print (-1.16068577766)
Prediction 10: find File -maxdepth Number -print (-1.1673989296)

Example 81 (1)
Original English: Search the current directory tree for files whose names begin with 'my'
English: search current directori tree for file whose name begin with _REGEX
GT Command 1: find . -name 'my*'
Prediction 1: find File -name Pattern (-0.00282584573142)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.95805478096)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.99482434988)
Prediction 4: find File -maxdepth Number -name Pattern (-1.03202605247)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) (-1.04926860332)
Prediction 6: find File -type f -name Pattern (-1.10534894466)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -print (-1.11296153069)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -name Pattern -print (-1.19067013264)
Prediction 9: find File \( -name Pattern -and -name Pattern \) (-1.19809544086)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -name Pattern (-1.20790719986)

Example 82 (1)
Original English: Find all directories starting from / that have permissions 777
English: find all directori start from "/" permiss _NUM
GT Command 1: find / -type d -perm 0777
Prediction 1: find File -type d -perm Permission -print (-0.0952010378242)
Prediction 2: find File -type d -perm Permission (-0.159017026424)
Prediction 3: find File -type d ! -perm Permission (-0.560193300247)
Prediction 4: find File -type d -exec chmod Permission {} \; (-0.654855310917)
Prediction 5: find File -perm Permission -type d (-0.81337761879)
Prediction 6: find File -type d ! -perm Permission -print (-0.83743596077)
Prediction 7: find File -type d -print (-0.937494575977)
Prediction 8: find File -perm Permission -print (-0.939467608929)
Prediction 9: find File -perm Permission -type d -print (-1.00958883762)
Prediction 10: find File -perm Permission (-1.03158795834)

Example 83 (1)
Original English: display all sqlite files in the current directory along with their timestamp
English: display all sqlite file in current directori along with timestamp
GT Command 1: find ./ -name "*.sqlite" -printf '%Tc %p\n'
Prediction 1: find File -printf Pattern (-0.0674701333046)
Prediction 2: find File -name Pattern -printf Pattern (-0.332740575075)
Prediction 3: find File \( -name Pattern -prune -or -print \) (-0.650946736336)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.705877840519)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.779029607773)
Prediction 6: find File \( -name Pattern -prune -or -depth \) File -print (-0.799822747707)
Prediction 7: find File ! -name Pattern (-0.808122336864)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) (-0.810379624367)
Prediction 9: find File \( -name Pattern -prune -or -type f \) -print (-0.812745273113)
Prediction 10: find File \( -name Pattern -or -name Pattern \) (-0.864526450634)

Example 84 (1)
Original English: Delete all the .c files present in the current directory and below
English: delet all _REGEX file present in current directori and below
GT Command 1: find . -name "*.c" | xargs rm -f
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.0539528019726)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.281967818737)
Prediction 3: find File -name Pattern | xargs -0 -I {} rm {} (-0.299843609333)
Prediction 4: find File -name Pattern | xargs -n -1 -I {} rm {} (-0.319305092096)
Prediction 5: find File -name Pattern -exec rm {} \; (-0.367505043745)
Prediction 6: find File -name Pattern -printf Pattern | xargs -I {} rm {} (-0.409092903137)
Prediction 7: find File -name Pattern -delete (-0.412627875805)
Prediction 8: find File -name Pattern -printf Pattern | xargs -0 -I {} rm {} (-0.414651334286)
Prediction 9: find File -name Pattern | xargs -I {} rm -r -f {} (-0.441039443016)
Prediction 10: find File -name Pattern | xargs -I {} rm -f {} (-0.524563372135)

Example 85 (1)
Original English: copy all java files from current folder to another folder
English: copi all java file from current folder to anoth folder
GT Command 1: find . -name "*.java" -print0 | xargs -0 -J % cp % destinationFolder
Prediction 1: find File -type f -name Pattern -exec cp {} File \; (-0.156517207623)
Prediction 2: find File -name Pattern -type f -exec cp {} File \; (-0.219935983419)
Prediction 3: find File -name Pattern -type f -print0 | xargs -0 -n -1 -I {} cp File {} (-0.233234465122)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} cp -t File {} (-0.242281004786)
Prediction 5: find File -name Pattern -type f | xargs -n -1 -I {} cp File {} (-0.249782174826)
Prediction 6: find File -name Pattern -type f -exec cp File {} \; (-0.254575699568)
Prediction 7: find File -name Pattern -type f | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.269654929638)
Prediction 8: find File -name Pattern -type f -exec cp --parents {} File \; (-0.271936446428)
Prediction 9: find File -type f -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.300684154034)
Prediction 10: find File -name Pattern -type f -exec cp -t File {} \; (-0.303353667259)

Example 86 (1)
Original English: find files which full path name is /tmp/foo/bar under /tmp/foo directory and print
English: find file full path name _REGEX under _REGEX directori and print
GT Command 1: find /tmp/foo -path /tmp/foo/bar -print
Prediction 1: find File -path File -print (-0.241715103388)
Prediction 2: find File -path File -print File (-0.272995948792)
Prediction 3: find File -path File (-0.466259688139)
Prediction 4: find File \( -path File -prune -or -print \) (-0.493102490902)
Prediction 5: find File \( -path File -prune -or -name Pattern \) -print (-0.533531248569)
Prediction 6: find File -print File | grep -E Pattern (-0.72147834301)
Prediction 7: find File -print File | grep Pattern (-0.740137755871)
Prediction 8: find File \( -path File -prune -or -name Pattern \) (-0.744905948639)
Prediction 9: find File -print | grep Pattern (-0.75541806221)
Prediction 10: find File -name Pattern -print (-0.764630615711)

Example 87 (1)
Original English: Find all or single file called FindCommandExamples.txt under / directory of owner root
English: find all or singl file call _REGEX under "/" directori of owner root
GT Command 1: find / -user root -name FindCommandExamples.txt
Prediction 1: find File -user Pattern -name Pattern (-0.0197765808553)
Prediction 2: find File -user Pattern \( -name Pattern -or -name Pattern \) (-0.612773895264)
Prediction 3: find File -user Pattern \( -name Pattern -or -name Pattern \) -print (-0.643110573292)
Prediction 4: find File \( -name Pattern -or -user Pattern \) -print (-0.649885237217)
Prediction 5: find File -user Pattern -iname Pattern (-0.666022598743)
Prediction 6: find File -name Pattern -user Pattern (-0.676418960094)
Prediction 7: find File -user Pattern -name Pattern -print (-0.695048213005)
Prediction 8: find File -user Pattern -type f -name Pattern (-0.727154552937)
Prediction 9: find File \( -name Pattern -or -user Pattern \) (-0.76044267416)
Prediction 10: find File -name Pattern -user Pattern -print (-0.792798936367)

Example 88 (1)
Original English: Find all *stat files/directories under /usr
English: find all _REGEX "files/directories" under _REGEX
GT Command 1: find /usr -name *stat
Prediction 1: find File -name Pattern (-0.00226498721167)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.807625770569)
Prediction 3: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.863633036613)
Prediction 4: find File -name Pattern | xargs -I {} grep Pattern {} (-0.869838774204)
Prediction 5: find File -name Pattern | xargs -I {} tar -c -v -z -f Unknown {} (-0.907589495182)
Prediction 6: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.957277834415)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.958841979504)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.983395338058)
Prediction 9: find File -type f -name Pattern (-1.00867414474)
Prediction 10: find File -name Pattern | xargs -I {} tar -c -v -f Unknown - {} (-1.01663613319)

Example 89 (1)
Original English: Search for directory foo ignoring case
English: search for directori foo ignor case
GT Command 1: find . -iname foo -type d
Prediction 1: find File -iname Pattern -type d (-0.144998967648)
Prediction 2: find File -iname Pattern (-0.193091675639)
Prediction 3: find File -iname Pattern \( -type d -prune -or -name Pattern \) (-0.567571341991)
Prediction 4: find File -iname Pattern \( -type d -prune -or -name Pattern \) -print (-0.65268778801)
Prediction 5: find File -iname Pattern \( -type d -or -type d \) (-0.662575662136)
Prediction 6: find File -iname Pattern \( -type d -and ! -name Pattern \) (-0.663922965527)
Prediction 7: find File -type d -iname Pattern (-0.68305927515)
Prediction 8: find File -iname Pattern ! -type d (-0.755120933056)
Prediction 9: find File -iname Pattern -iname Pattern (-0.763128459454)
Prediction 10: find File -iname Pattern \( -type d -or -iname Pattern \) -print (-0.76428604126)

Example 90 (1)
Original English: Find all files under /home that belong to user tecmint
English: find all file under _REGEX belong to user tecmint
GT Command 1: find /home -user tecmint
Prediction 1: find File -user Pattern (-0.0874001979828)
Prediction 2: find File -user Pattern -print (-0.443862527609)
Prediction 3: find File -user Pattern -type f (-0.507610499859)
Prediction 4: find File -type f -user Pattern (-0.522052228451)
Prediction 5: find File -type f -user Pattern -exec ls -s {} \; (-0.570236802101)
Prediction 6: find File -user Pattern -exec ls -l {} \; (-0.593100786209)
Prediction 7: find File -type f -user Pattern -print (-0.594570457935)
Prediction 8: find File -type f -user Pattern -exec ls -l {} \; (-0.607011258602)
Prediction 9: find File -type f -user Pattern -exec chown Pattern {} \; (-0.681543409824)
Prediction 10: find File -user Pattern -type f -print (-0.738721191883)

Example 91 (1)
Original English: display all the files in the current directory excluding the paths "targert", "tools", "git"
English: display all file in current directori exclud path _REGEX _REGEX _REGEX
GT Command 1: find . \( ! -path "*target*" -a ! -path "*tools*" -a ! -path "*.git*" -print \)
Prediction 1: find File \( -path File -prune -or -print \) (-0.167347729206)
Prediction 2: find File \( ! -path File -and ! -path File \) (-0.225302919745)
Prediction 3: find File \( ! -path File -prune -or -print \) (-0.264160811901)
Prediction 4: find File ! \( -path File -prune -or -print \) (-0.323997050524)
Prediction 5: find File ! -path File (-0.389224141836)
Prediction 6: find File \( ! -path File ! -path File -prune -or -print \) (-0.432387053967)
Prediction 7: find File \( ! -path File -and ! -name Pattern \) (-0.435609549284)
normalized_command AssertionError - find File \( \( -path File -prune -or -print \)
Prediction 8: find File \( \( -path File -prune -or -print \) (-0.444134622812)
Prediction 9: find File ! -path File ! -path File (-0.463978081942)
Prediction 10: find File ! -path File -type f (-0.49174234271)

Example 92 (1)
Original English: Find all 400 permission files under /data directory with null character as the delimiter
English: find all _NUM permiss file under _REGEX directori with null charact as delimit
GT Command 1: find /data -type f -perm 400 -print0
Prediction 1: find File -type f -perm Permission -print0 | xargs -0 -I {} chmod Permission {} (-0.166446626186)
Prediction 2: find File -type f -perm Permission -print0 (-0.167978852987)
Prediction 3: find File -type f -perm Permission -print (-0.225456655025)
Prediction 4: find File -type f -perm Permission -exec chmod Permission {} \; (-0.23646530509)
Prediction 5: find File -type f -perm Permission -print0 | xargs -0 -I {} chmod Unknown {} (-0.28216189146)
Prediction 6: find File -type f -perm Permission -print -exec chmod Permission {} \; (-0.290620774031)
Prediction 7: find File -type f -print0 | xargs -0 -I {} chmod Unknown {} (-0.338779270649)
Prediction 8: find File -type f -perm Permission -print0 | xargs -0 -I {} ls -l {} (-0.350137323141)
Prediction 9: find File -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.374116301537)
Prediction 10: find File -type f -perm Permission -exec ls -l {} \; (-0.416132956743)

Example 93 (1)
Original English: Find files with the setuid or setgid bit set
English: find file with setuid or setgid bit set
GT Command 1: find . -perm -4000 -o -perm -2000
Prediction 1: find File -perm Permission (-0.00626649102196)
Prediction 2: find File \( -perm Permission -or -perm Permission \) ! -perm Permission (-0.862119734287)
Prediction 3: find File \( -perm Permission -or -perm Permission -or -perm Permission \) -ls (-0.871318697929)
Prediction 4: find File -perm Permission -print (-0.88645619154)
Prediction 5: find File \( -perm Permission -or -perm Permission \) (-0.887521624565)
Prediction 6: find File \( -perm Permission -or -perm Permission \) -ls (-0.8901668787)
Prediction 7: find File \( -perm Permission -or -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.951510906219)
Prediction 8: find File \( -perm Permission -or -perm Permission -or -perm Permission \) ! -perm Permission (-0.954210698605)
Prediction 9: find File \( -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.978285491467)
Prediction 10: find File \( -perm Permission -or -perm Permission -or -perm Permission \) (-1.01695120335)

Example 94 (1)
Original English: Find all *.txt and *.json files in current directory
English: find all _REGEX and _REGEX file in current directori
GT Command 1: find . -type f \( -name "*.txt" -o -name "*.json" \)
Prediction 1: find File \( -path File -prune -or -name Pattern \) -print (-0.191680476069)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.200717538595)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.211439296603)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.323955088854)
Prediction 5: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.343634039164)
Prediction 6: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.345143467188)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) (-0.362518668175)
Prediction 8: find File -type f \( -iname Pattern -or -iname Pattern \) -print (-0.363099485636)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.363331347704)
Prediction 10: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.373228758574)

Example 95 (1)
Original English: find all the files ending with "~" in current folder and move them to temp folder
English: find all file end with _PARAMET in current folder and move to temp folder
GT Command 1: find -name '*~' -print0 | xargs -0 -I _ mv _ /tmp/
Prediction 1: find File -name Pattern -exec mv {} File \; (-0.134814888239)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.162260353565)
Prediction 3: find File -type f -name Pattern -exec mv {} File \; (-0.20685519278)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.270549535751)
Prediction 5: find File -type f -name Pattern -exec rm {} \; (-0.299928039312)
Prediction 6: find File -name Pattern -type f -print0 | xargs -0 -I {} mv {} File (-0.302620351315)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.328964084387)
Prediction 8: find File -type f -name Pattern -exec rm -f {} \; (-0.329827576876)
Prediction 9: find File -name Pattern -type f -exec mv {} File \; (-0.349011033773)
Prediction 10: find File -name Pattern | xargs -I {} mv {} File (-0.354872256517)

Example 96 (1)
Original English: Search *.x files from the current directory tree for string "fred"
English: search _REGEX file from current directori tree for string _REGEX
GT Command 1: find . -name ‘*.x’ -print0 | xargs -0 grep fred
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.163657873869)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.167123183608)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; -print (-0.182071939111)
Prediction 4: find File -name Pattern -exec grep Pattern {} \; (-0.227164328098)
Prediction 5: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.244018390775)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.290700227022)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.305878579617)
Prediction 8: find File -name Pattern -exec grep -H Pattern {} \; (-0.306535661221)
Prediction 9: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.333625584841)
Prediction 10: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.353910773993)

Example 97 (1)
Original English: Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size
English: find all file in entir file system with extens txt or doc as well as ani file larger than _NUMMB in size
GT Command 1: find / \( -name '*.txt' -o -name '*.doc' -o -size +5M \)
Prediction 1: find File \( -name Pattern -or -size Size \) (-0.340971380472)
Prediction 2: find File -type f -name Pattern -size Size -print (-0.351129293442)
Prediction 3: find File -name Pattern -size Size -print (-0.36140191555)
Prediction 4: find File \( -name Pattern -and -size Size \) (-0.399049192667)
Prediction 5: find File \( -name Pattern -or -size Size \) -print (-0.417761325836)
Prediction 6: find File -type f -name Pattern -size Size (-0.43604850769)
Prediction 7: find File -name Pattern -size Size (-0.441169589758)
Prediction 8: find File -type f \( -name Pattern -and -size Size \) (-0.466358929873)
Prediction 9: find File -type f \( -name Pattern -or -size Size \) (-0.481112390757)
Prediction 10: find File -type f \( -name Pattern -and -size Size \) -print (-0.489474445581)

Example 98 (1)
Original English: find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.
English: find all file in current directori access in last _NUM day and move to _REGEX folder
GT Command 1: find . -atime +1 -type f -exec mv {} TMP \;
Prediction 1: find File -atime Time -exec mv {} File \; (-0.150791883469)
Prediction 2: find File -type f -atime Time -exec mv {} File \; (-0.228908911347)
Prediction 3: find File -atime Time -exec ls -l {} \; (-0.282220780849)
Prediction 4: find File -atime Time -exec ls \; | wc -l (-0.343154847622)
Prediction 5: find File -type f -atime Time -exec ls \; | wc -l (-0.344015091658)
Prediction 6: find File -type f -atime Time -exec ls -l {} \; (-0.368594288826)
Prediction 7: find File -type f -atime Time -exec rm {} \; (-0.388142645359)
Prediction 8: find File -atime Time -exec rm {} \; (-0.388516575098)
Prediction 9: find File -atime Time -print0 | xargs -0 -I {} mv {} File (-0.406503230333)
Prediction 10: find File -atime Time -print | xargs -I {} rm {} (-0.409586399794)

Example 99 (1)
Original English: search for a specific word in all the hidden files in the entire file system and display the file name along with the matched line
English: search for specif word in all hidden file in entir file system and display file name along with match line
GT Command 1: find / -name ‘*.*’ -exec grep -il “foobar” {} \;
Prediction 1: find File -name Pattern -exec grep -H -n Pattern {} \; (-0.182802379131)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.210663616657)
Prediction 3: find File -name Pattern -exec grep -H -n Pattern {} + (-0.244450479746)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.266245990992)
Prediction 5: find File -name Pattern -print0 | xargs -0 -n -1 -I {} grep -H -n Pattern {} (-0.270845174789)
Prediction 6: find File -type f -name Pattern -exec grep -H -n Pattern {} \; (-0.298536598682)
Prediction 7: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.302013844252)
Prediction 8: find File -name Pattern | xargs -I {} grep -H -n Pattern {} (-0.330284148455)
Prediction 9: find File -name Pattern -type f -exec grep -H -n Pattern {} \; (-0.342731207609)
Prediction 10: find File -name Pattern -exec grep -H Pattern {} \; (-0.343849301338)

Example 100 (1)
Original English: Delete all files in the "${S}/bundled-libs" folder except "libbass.so"
English: delet all file in _PARAMET folder except _REGEX
GT Command 1: find "${S}/bundled-libs" \! -name 'libbass.so' -delete
Prediction 1: find File -type f -name Pattern -exec rm {} \; (-0.174659669399)
Prediction 2: find File -type f -name Pattern | xargs -I {} rm {} (-0.186830759048)
Prediction 3: find File -type f ! -name Pattern -exec rm {} \; (-0.251206845045)
Prediction 4: find File -type f -name Pattern -exec rm -f {} \; (-0.279240012169)
Prediction 5: find File -type f -name Pattern ! -name Pattern -exec rm {} \; (-0.331424504519)
Prediction 6: find File -type f ! -name Pattern | xargs -I {} rm {} (-0.338783144951)
Prediction 7: find File -type f ! -name Pattern -delete (-0.34659153223)
Prediction 8: find File -type f -not -name Pattern -exec rm {} \; (-0.406804829836)
Prediction 9: find File -type f -name Pattern -delete (-0.420635968447)
Prediction 10: find File -type f -name Pattern ! -name Pattern -delete (-0.461888700724)

Example 101 (1)
Original English: find foo, Foo, FOo, FOO, etc.
English: find foo _REGEX _REGEX _REGEX etc
GT Command 1: find . -iname foo
Prediction 1: find File -name Pattern -type f (-0.331434160471)
Prediction 2: find File -iname Pattern -type f (-0.354991525412)
Prediction 3: find File \( -path File -prune -or -name Pattern \) -type f -print (-0.361329853535)
Prediction 4: find File File File -name Pattern -type f (-0.448209434748)
Prediction 5: find File \( -path File -prune -or -name Pattern \) -type f (-0.449572086334)
Prediction 6: find File \( -path File -prune -or -type f \) -perm Permission -ls (-0.48292401433)
Prediction 7: find File \( -path File -prune -or -type f \) -name Pattern -print (-0.524583041668)
Prediction 8: find File \( -path File -prune -or -type f \) -name Pattern \) (-0.535399973392)
Prediction 9: find File File -name Pattern -type f (-0.562383532524)
Prediction 10: find File \( -path File -prune -or -type f \) -name Pattern (-0.564963817596)

Example 102 (1)
Original English: find all the files that have not been modifid in the last 31 days in a folder and delete them.print0 is used to preserve files that have new line character in their name
English: find all file not modifi in last _NUM day in folder and delet _REGEX use to preserv file new line charact in name
GT Command 1: find . -type f -mtime +31 -print0 | xargs -0 -r rm -f
Prediction 1: find File -name Pattern -mtime Time -print0 | xargs -0 -I {} rm {} (-0.191240176558)
Prediction 2: find File -name Pattern -mtime Time -exec rm {} \; (-0.209619432688)
Prediction 3: find File -type f -name Pattern -mtime Time -print0 | xargs -0 -I {} rm {} (-0.239864975214)
Prediction 4: find File -type f -mtime Time -name Pattern -print0 | xargs -0 -I {} rm {} (-0.242454692721)
Prediction 5: find File -type f -mtime Time -name Pattern -exec rm -f {} \; (-0.245867267251)
Prediction 6: find File -type f -name Pattern -mtime Time -exec rm -f {} \; (-0.249232217669)
Prediction 7: find File -type f -mtime Time -name Pattern -exec rm {} \; (-0.257723778486)
Prediction 8: find File -type f -name Pattern -mtime Time -exec rm {} \; (-0.291016787291)
Prediction 9: find File -type f -mtime Time -exec rm -f {} \; (-0.346289038658)
Prediction 10: find File -name Pattern -mtime Time -exec rm -f {} \; (-0.374601066113)

Example 103 (1)
Original English: List all regular file owned by root with permissions 4000
English: list all regular file own by root with permiss _NUM
GT Command 1: find / -type f -user root -perm -4000 -exec ls -l {} \;
Prediction 1: find File -type f -perm Permission -print (-0.209107115865)
Prediction 2: find File -type f -user Pattern -exec ls -l {} \; (-0.26947119832)
Prediction 3: find File -type f -user Pattern -perm Permission -print (-0.298757821321)
Prediction 4: find File -type f ! -perm Permission -print (-0.323769330978)
Prediction 5: find File -type f ! -perm Permission -exec ls -l {} \; (-0.358661144972)
Prediction 6: find File -type f -perm Permission -exec ls -l {} \; (-0.392866402864)
Prediction 7: find File -user Pattern -type f -perm Permission -print (-0.409283995628)
Prediction 8: find File -type f ! -perm Permission (-0.431744337082)
Prediction 9: find File -type f ! -perm Permission -ls (-0.468483477831)
Prediction 10: find File -type f ! -perm Permission | head (-0.485612273216)

Example 104 (1)
Original English: display the 5 largest file in the current directory and its subdirectory.
English: display _NUM largest file in current directori and subdirectori
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -5
Prediction 1: find File -printf Pattern | sort -r -n | head -n Number (-0.119888834655)
Prediction 2: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.19247213006)
Prediction 3: find File -printf Pattern | sort -r -n | head File (-0.237440481782)
Prediction 4: find File -printf Pattern | sort -n -r | head File (-0.275011748075)
Prediction 5: find File -printf Pattern | sort -n -r | head -n Number (-0.291295826435)
Prediction 6: find File -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -L Pattern {} (-0.321058541536)
Prediction 7: find File -printf Pattern -printf Pattern | sort -r -n | head -n Number (-0.32965490222)
Prediction 8: find File -type f -printf Pattern | sort -n -r | head -n Number (-0.339745908976)
Prediction 9: find File -printf Pattern | sort -r | head -n Number (-0.341472387314)
Prediction 10: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -L (-0.37735325098)

Example 105 (1)
Original English: display all files ending with "ini" in current folder
English: display all file end with _REGEX in current folder
GT Command 1: find . -type f -name '*.ini'
Prediction 1: find File -name Pattern -print0 (-0.109624966979)
Prediction 2: find File -name Pattern (-0.276714265347)
Prediction 3: find File -name Pattern | xargs -I {} ls -l {} (-0.64120388031)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.673445165157)
Prediction 5: find File -name Pattern -print (-0.696485459805)
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-0.701577067375)
Prediction 7: find File -name Pattern | xargs -I {} ls {} (-0.715500414371)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.743541479111)
Prediction 9: find File -name Pattern -exec ls {} \; (-0.821655154228)
Prediction 10: find File -name Pattern -printf Pattern (-0.832800865173)

Example 106 (1)
Original English: show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories
English: show count of number of filenam end in _REGEX in current directori without descend into sub-directori
GT Command 1: find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
Prediction 1: find File -maxdepth Number | wc -l (-0.247875928879)
Prediction 2: find File -maxdepth Number -type f -printf Pattern | wc -c (-0.275683432817)
Prediction 3: find File -maxdepth Number -print0 | xargs -0 -I {} wc -l {} (-0.321972519159)
Prediction 4: find File -maxdepth Number -exec wc -l {} \; (-0.332065701485)
Prediction 5: find File -maxdepth Number -type f -printf Pattern | wc -l (-0.366495907307)
Prediction 6: find File -maxdepth Number -printf Pattern | wc -c (-0.369122624397)
Prediction 7: find File -maxdepth Number -type f | wc -l (-0.370264679193)
Prediction 8: find File -maxdepth Number -name Pattern -printf Pattern | wc -c (-0.410460591316)
Prediction 9: find File -maxdepth Number -print0 | xargs -0 -I {} wc -w {} (-0.463170528412)
Prediction 10: find File -maxdepth Number -print0 | wc -l (-0.481661379337)

Example 107 (1)
Original English: Find .gif and .png image files in ~/Desktop and move them to the ~/Pictures directory.
English: find _REGEX and _REGEX imag file in _PARAMET and move to _PARAMET directori
GT Command 1: find ~/Desktop -name “*.jpg” -o -name “*.gif” -o -name “*.png” -print0 | xargs -0 mv –target-directory ~/Pictures
Prediction 1: find File -name Pattern -exec mv {} File \; (-0.12656365335)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -exec mv {} File \; (-0.183215975761)
Prediction 3: find File -type f -name Pattern -exec mv {} File \; (-0.18981204927)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -exec mv {} File \; (-0.214452937245)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} mv {} File (-0.280210733414)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) -exec mv {} File \; (-0.284307599068)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} mv {} File (-0.289549767971)
Prediction 8: find File -iname Pattern -exec mv {} File \; (-0.310871809721)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.324094980955)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} mv {} File {} (-0.370109260082)

Example 108 (1)
Original English: List empty directories in the current directory tree
English: list empti directori in current directori tree
GT Command 1: find . -depth -empty -type d
Prediction 1: find File -type d -empty (-0.147941529751)
Prediction 2: find File -empty -type d (-0.403407514095)
Prediction 3: find File -depth -empty -type d | xargs -I {} ls -l -d {} (-0.421319276094)
Prediction 4: find File -empty -type d | xargs -I {} ls -l -d {} (-0.428213894367)
Prediction 5: find File -depth -empty -type d (-0.475260257721)
Prediction 6: find File -depth -empty -type d | xargs -I {} ls -l -t -r {} | tail -n Number (-0.510542690754)
Prediction 7: find File -empty -type d | xargs -I {} ls -l -t -r {} | tail -n Number (-0.513013064861)
Prediction 8: find File -empty -type d | xargs -I {} ls -l -t -r {} | head -n Number (-0.571020364761)
Prediction 9: find File -depth -empty -type d | xargs -I {} ls -l -t -r {} | head -n Number (-0.571574509144)
Prediction 10: find File -depth -empty -type d | xargs -I {} ls -l {} (-0.612744688988)

Example 109 (1)
Original English: search for a word in all the normal/regular files in the current folder
English: search for word in all "normal/regular" file in current folder
GT Command 1: find . -type f | xargs grep "text"
Prediction 1: find File -type f -print0 | xargs -0 -I {} grep Pattern {} (-0.0980134382844)
Prediction 2: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.21790446341)
Prediction 3: find File -type f -print0 | xargs -0 -I {} grep -H Pattern {} (-0.254349410534)
Prediction 4: find File -type f -print0 | xargs -0 -I {} grep -L Pattern {} (-0.265984237194)
Prediction 5: find File -type f -print | xargs -I {} grep Pattern {} (-0.272586911917)
Prediction 6: find File -type f | xargs -I {} grep Pattern {} (-0.28051134944)
Prediction 7: find File -type f -exec grep -H Pattern {} + (-0.28082510829)
Prediction 8: find File -type f -exec grep Pattern {} \; (-0.281010895967)
Prediction 9: find File -type f -exec grep -H Pattern {} \; (-0.283560782671)
Prediction 10: find File -type f -print0 | xargs -0 -I {} grep -i Pattern {} (-0.312586784363)

Example 110 (1)
Original English: find all the configuration files in a folder and do not search in the sub folder and display the last ten files.
English: find all configur file in folder and not search in sub folder and display last _NUM file
GT Command 1: find /etc -maxdepth 1 -name "*.conf" | tail
Prediction 1: find File -maxdepth Number -name Pattern (-0.236170455813)
Prediction 2: find File -name Pattern -prune (-0.341613799334)
Prediction 3: find File -maxdepth Number -name Pattern -printf Pattern (-0.346195757389)
Prediction 4: find File -name Pattern -printf Pattern | sort -r -n | head -n Number (-0.359180271626)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.480706483126)
Prediction 6: find File -name Pattern -printf Pattern (-0.484214693308)
Prediction 7: find File -name Pattern -printf Pattern | sort -r -z (-0.493795722723)
Prediction 8: find File -name Pattern -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -L Pattern {} (-0.526004493237)
Prediction 9: find File -name Pattern -printf Pattern | sort -r -n | tail -n Number (-0.545090556145)
Prediction 10: find File -name Pattern -maxdepth Number (-0.552291512489)

Example 111 (1)
Original English: Find *.c files under $HOME and search for the string 'sprintf' in those files
English: find _REGEX file under _PARAMET and search for string _REGEX in file
GT Command 1: find $HOME -name '*.c' -print | xargs    grep -l sprintf
Prediction 1: find File -name Pattern -exec grep -H Pattern {} \; (-0.197057455778)
Prediction 2: find File -name Pattern -exec grep Pattern {} \; -print (-0.197999611497)
Prediction 3: find File -name Pattern -exec grep -H -n Pattern {} \; (-0.236347869039)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.254862606525)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.300138443708)
Prediction 6: find File -name Pattern -exec grep Pattern {} \; (-0.305459499359)
Prediction 7: find File -name Pattern | xargs -I {} grep Pattern {} (-0.30912950635)
Prediction 8: find File -name Pattern -exec grep -r Pattern {} \; (-0.310031503439)
Prediction 9: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.318070620298)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.34125444293)

Warning: -exec missing ending ';'
Example 112 (1)
Original English: find all the files with a specific name in the current folder and delete them
English: find all file with specif name in current folder and delet
GT Command 1: find . -name “find name” -exec rm {}\ ;
Prediction 1: find File -name Pattern -exec rm {} \; (-0.148305118084)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.228711128235)
Prediction 3: find File -name Pattern | xargs -I {} rm {} (-0.234555572271)
Prediction 4: find File -type f -name Pattern -exec rm {} \; (-0.265546798706)
Prediction 5: find File -name Pattern -print | xargs -I {} rm {} (-0.269023954868)
Prediction 6: find File -name Pattern -delete (-0.317246943712)
Prediction 7: find File -type f -name Pattern -print | xargs -I {} rm {} (-0.349139988422)
Prediction 8: find File -type f -name Pattern | xargs -I {} rm {} (-0.376969248056)
Prediction 9: find File -name Pattern -type f -print | xargs -I {} rm {} (-0.382930934429)
Prediction 10: find File -name Pattern -type f -print | xargs -I {} rm -f {} (-0.439810037613)

Example 113 (1)
Original English: Show the last 10 .conf files found by `find' in the /etc directory
English: show last _NUM _REGEX file found by _REGEX in _REGEX directori
GT Command 1: find /etc -maxdepth 1 -name "*.conf" | tail
Prediction 1: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} grep -l Pattern {} (-0.371623516083)
Prediction 2: find File -type f \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} grep -l Pattern {} (-0.385370671749)
Prediction 3: find File \( -path File -prune -or -name Pattern \) -print (-0.406778633595)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} ls -l {} (-0.411301255226)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} grep -L Pattern {} (-0.424939244986)
Prediction 6: find File \( -regex Pattern -and -not -regex Pattern \) (-0.426598489285)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} grep Pattern {} (-0.439952433109)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} grep Pattern {} (-0.445446640253)
Prediction 9: find File \( -name Pattern -or -name Pattern \) -print (-0.46399012208)
Prediction 10: find File \( -path File -prune -or -user Pattern \) -print (-0.464458078146)

Example 114 (1)
Original English: change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)
English: chang ownership of all "regular/normal" file in current directori
GT Command 1: find . -type f -print0 | xargs -0 chown username
Prediction 1: find File -type f | xargs -I {} chown Pattern {} (-0.120090179145)
Prediction 2: find File -type f -exec chown Pattern {} \; (-0.126293316483)
Prediction 3: find File -type f -print0 | xargs -0 -I {} chown Pattern {} (-0.160572618246)
Prediction 4: find File -type f | xargs -I {} tar -c -v -f Unknown {} (-0.306410759687)
Prediction 5: find File -type f -print | xargs -I {} chown Pattern {} (-0.334350943565)
Prediction 6: find File -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.363653153181)
Prediction 7: find File -type f -print0 | xargs -0 -I {} wc -l {} (-0.39293295145)
Prediction 8: find File -type f | xargs -I {} wc -l {} (-0.401361912489)
Prediction 9: find File -type f | xargs -I {} chmod Permission {} (-0.434514045715)
Prediction 10: find File -type f -exec chmod Permission {} \; (-0.455041080713)

Example 115 (1)
Original English: find all '*.c' files under $HOME directory which context contains sprintf
English: find all _REGEX file under _PARAMET directori context contain sprintf
GT Command 1: find $HOME -name '*.c' -print | xargs grep -l sprintf
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.229814767838)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.235090523958)
Prediction 3: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.25880587101)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.277763545513)
Prediction 5: find File -name Pattern -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.283978402615)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.284650117159)
Prediction 7: find File -iname Pattern -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.307579606771)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep -c Pattern {} (-0.307976692915)
Prediction 9: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.314404308796)
Prediction 10: find File -type f -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.317046672106)

Example 116 (1)
Original English: Remove all files last modified more than 10 days ago from the current directory tree
English: remov all file last modifi more than _NUM day ago from current directori tree
GT Command 1: find . -mtime +10 | xargs rm
Prediction 1: find File -mtime Time -exec rm {} \; (-0.0653454437852)
Prediction 2: find File -mtime Time -exec rm -f {} \; (-0.18322069943)
Prediction 3: find File -mtime Time -print0 | xargs -0 -I {} rm {} (-0.315825015306)
Prediction 4: find File -type f -mtime Time -exec rm -f {} \; (-0.366583257914)
Prediction 5: find File -mtime Time -print0 | xargs -0 -I {} rm -f {} (-0.472193598747)
Prediction 6: find File -mtime Time -exec rm -r -f {} \; (-0.473782390356)
Prediction 7: find File -mtime Time | xargs -I {} rm {} (-0.476408481598)
Prediction 8: find File -mindepth Number -mtime Time -exec rm -f {} \; (-0.480481535196)
Prediction 9: find File -type f -mtime Time -exec rm {} \; (-0.522491931915)
Prediction 10: find File -mtime Time -exec rm {} + (-0.523602247238)

Example 117 (1)
Original English: find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes
English: find all file under _REGEX directori access in last _NUM minut
GT Command 1: find /etc/sysconfig -amin -30
Prediction 1: find File -amin Number (-0.00324116111733)
Prediction 2: find File -amin Number -amin Number (-0.877065479755)
Prediction 3: find File -amin Number -type f (-1.05390489101)
Prediction 4: find File -amin Number -name Pattern (-1.19280958176)
Prediction 5: find File -type f -amin Number (-1.21031236649)
Prediction 6: find File -user Pattern -type f -amin Number (-1.24776613712)
Prediction 7: find File -amin -amin Number (-1.38381791115)
Prediction 8: find File -user Pattern -amin Number (-1.38913190365)
Prediction 9: find File -user Pattern -type f -amin Number -name Pattern (-1.43636500835)
Prediction 10: find File -amin Number -print (-1.60967409611)

Example 118 (1)
Original English: display all files in the current folder after pruning those in the current folder ( dot is the output of this command )
English: display all file in current folder after prune in current folder
GT Command 1: find . -prune -print
Prediction 1: find File -newer File (-0.400064498186)
Prediction 2: find File \( -name Pattern -prune -or -print \) (-0.425962746143)
Prediction 3: find File \( -path File -prune -or -print \) (-0.531006455421)
Prediction 4: find File \( -print -or -type d -prune \) (-0.625150442123)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.652122557163)
Prediction 6: find File -regex Pattern (-0.714278459549)
Prediction 7: find File -name Pattern (-0.754700422287)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.791751801968)
Prediction 9: find File -print (-0.795791208744)
Prediction 10: find File \( -name Pattern -or -name Pattern \) (-0.836320102215)

Example 119 (2)
Original English: Move all regular files under current directory to ./newdir
English: move all regular file under current directori to _REGEX
GT Command 1: find ./ -type f -print | xargs    -l56 -i mv -f {} ./newdir
GT Command 2: find ./ -type f -print | xargs    -i mv -f {} ./newdir
Prediction 1: find File -type f -exec mv {} File \; (-0.193816244602)
Prediction 2: find File -type f | xargs -I {} mv {} File (-0.228279814124)
Prediction 3: find File -type f | xargs -I {} tar -c -v -f Unknown {} (-0.249220982194)
Prediction 4: find File -type f -print0 | xargs -0 -I {} mv {} File (-0.252623260021)
Prediction 5: find File -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.313276469707)
Prediction 6: find File -type f -print0 | xargs -0 -I {} chmod Unknown {} (-0.319372117519)
Prediction 7: find File -type f | xargs -I {} chmod Permission {} (-0.333758682013)
Prediction 8: find File -maxdepth Number -type f -exec mv {} File \; (-0.343409091234)
Prediction 9: find File -type f | xargs -I {} chmod Unknown {} (-0.344663262367)
Prediction 10: find File -type f -exec mv -v {} File \; (-0.345840871334)

Example 120 (1)
Original English: returns a list of  files modification newer than poop
English: return list of file modif newer than poop
GT Command 1: find . -mnewer poop
Prediction 1: find File -newer File (-0.0704079642892)
Prediction 2: find File -newer File -print (-0.388132959604)
Prediction 3: find File -newermt Time ! -newermt Time -ls (-0.780255973339)
Prediction 4: find File -mtime Time -printf Pattern (-0.849212825298)
Prediction 5: find File -newermt Time ! -newermt Time (-0.868087649345)
Prediction 6: find File -mtime Time (-0.988011360168)
Prediction 7: find File ! -newer File (-1.02080595493)
Prediction 8: find File -not -newer File (-1.03714466095)
Prediction 9: find File -newermt Time ! -newermt Time -print (-1.05720674992)
Prediction 10: find File -size Size -print (-1.08506417274)

Example 121 (1)
Original English: find any files in the current directory that begin with a number
English: find ani file in current directori begin with number
GT Command 1: find . -regex './[0-9].*' -print
Prediction 1: find File -name Pattern (-0.0384026356041)
Prediction 2: find File -name Pattern -print (-0.582443118095)
Prediction 3: find File -maxdepth Number -name Pattern (-0.633129239082)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.763843417168)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.76511567831)
Prediction 6: find File -name Pattern -prune (-0.77083081007)
Prediction 7: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.825729608536)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.853541612625)
Prediction 9: find File \( -name Pattern -prune -or -print \) (-0.859385371208)
Prediction 10: find File -type f -name Pattern (-0.88116645813)

Example 122 (2)
Original English: Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end
English: find _REGEX "files/directories" onli upto _NUM level down under _REGEX directori and show few line of output from end
GT Command 1: find /etc -maxdepth 2 -name "*.conf" | tail
GT Command 2: find /etc -maxdepth 1 -name "*.conf" | tail
Prediction 1: find File -maxdepth Number -name Pattern | head (-0.271847456694)
Prediction 2: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.278143137693)
Prediction 3: find File -maxdepth Number -name Pattern | grep -v Pattern (-0.356443226337)
Prediction 4: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.365642100573)
Prediction 5: find File -maxdepth Number -name Pattern | xargs -I {} mv {} File (-0.373689174652)
Prediction 6: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.382533282042)
Prediction 7: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.385341405869)
Prediction 8: find File -maxdepth Number -name Pattern -print0 | xargs -0 -n -1 -I {} grep -H -n Pattern {} (-0.385649085045)
Prediction 9: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.409512221813)
Prediction 10: find File -maxdepth Number -name Pattern -printf Pattern | head (-0.431673616171)

Example 123 (4)
Original English: Search the current directory tree for files whose name is ".note", case insensitive
English: search current directori tree for file whose name _REGEX case insensit
GT Command 1: find . -iname '.note' | sort
GT Command 2: find . -iname '.note'
GT Command 3: find -type d -exec find {} -maxdepth 1 \! -type d -iname '.note' \;
GT Command 4: find . -iname '.note' | sort -r
Prediction 1: find File -iname Pattern (-0.00380386412144)
Prediction 2: find File \( -iname Pattern -or -iname Pattern \) (-1.02939748764)
Prediction 3: find File \( -iname Pattern -and ! -iname Pattern \) (-1.17720508575)
Prediction 4: find File \( -iname Pattern -or -iname Pattern \) -print (-1.18485808372)
Prediction 5: find File \( -iname Pattern -or -iname Pattern \) -ls (-1.20018482208)
Prediction 6: find File \( -iname Pattern -and -iname Pattern \) (-1.22270727158)
Prediction 7: find File -type f -iname Pattern (-1.22657477856)
Prediction 8: find File -name Pattern (-1.22887909412)
Prediction 9: find File \( -iname Pattern -and -mtime Time \) (-1.25516986847)
Prediction 10: find File -iname Pattern -print (-1.34971570969)

Example 124 (1)
Original English: Search for file names with "bad" characters in the current directory and delete the files.
English: search for file name with _REGEX charact in current directori and delet file
GT Command 1: find . -name '*[+{;"\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;
Prediction 1: find File -name Pattern -exec rm {} \; (-0.10033685714)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.201765045524)
Prediction 3: find File -name Pattern | xargs -I {} rm {} (-0.252677261829)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.297830432653)
Prediction 5: find File -name Pattern -type f -exec rm {} \; (-0.32972484827)
Prediction 6: find File -name Pattern -exec rm -r -f {} \; (-0.354336380959)
Prediction 7: find File -name Pattern -printf Pattern | xargs -I {} rm {} (-0.369281768799)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.391902923584)
Prediction 9: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -r -f {} (-0.393065035343)
Prediction 10: find File -name Pattern -type f | xargs -I {} rm {} (-0.436258912086)

Example 125 (1)
Original English: Search the current directory tree for the files with extension "trc" and list them if they are more than three days old
English: search current directori tree for file with extens _REGEX and list if more than _NUM day old
GT Command 1: find . -name "*.trc" -ctime +3 -exec ls -l {} \;
Prediction 1: find File -type f -ctime Time -name Pattern (-0.271474629641)
Prediction 2: find File -type f -name Pattern -mtime Time -mtime Time (-0.427621930838)
Prediction 3: find File \( -name Pattern -and -mtime Time -and -mtime Time \) -printf Pattern (-0.445302724838)
Prediction 4: find File -type f -name Pattern -mtime Time (-0.491612970829)
Prediction 5: find File -type f -ctime Time -name Pattern -mtime Time (-0.492747247219)
Prediction 6: find File -type f -regex Pattern -mtime Time (-0.503311574459)
Prediction 7: find File \( -name Pattern -and -mtime Time -and -mtime Time \) (-0.505032241344)
Prediction 8: find File -type f -ctime Time -name Pattern -print (-0.516153752804)
Prediction 9: find File -type f -mtime Time -name Pattern (-0.540491938591)
Prediction 10: find File -type f -name Pattern -mtime Time -print0 (-0.549209058285)

Example 126 (1)
Original English: find files in current directory that names are game
English: find file in current directori name game
GT Command 1: find . -name game
Prediction 1: find File -name Pattern (-0.0180537514389)
Prediction 2: find File -name Pattern -type f (-0.568841993809)
Prediction 3: find File -type f -name Pattern (-0.716870367527)
Prediction 4: find File -name Pattern -type f -print (-1.08282780647)
Prediction 5: find File -name Pattern -print (-1.12486684322)
Prediction 6: find File -name Pattern -printf Pattern (-1.16444933414)
Prediction 7: find File -maxdepth Number -name Pattern (-1.17918026447)
Prediction 8: find File -name Pattern -prune (-1.19772052765)
Prediction 9: find File -name Pattern -name Pattern (-1.23843121529)
Prediction 10: find File -iname Pattern (-1.25950360298)

Example 127 (1)
Original English: find all the files in current folder ending with "ini" and search for a word in all these files
English: find all file in current folder end with _REGEX and search for word in all file
GT Command 1: find . -name *.ini -exec grep -w PROJECT_A {} \; -print | grep ini
Prediction 1: find File -type f -name Pattern -exec grep -H Pattern {} \; (-0.247084572911)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.273979514837)
Prediction 3: find File -type f -name Pattern -exec grep -r Pattern {} \; (-0.284427374601)
Prediction 4: find File -type f -name Pattern -exec grep Pattern {} \; (-0.289471298456)
Prediction 5: find File -name Pattern -exec grep Pattern {} \; (-0.292855262756)
Prediction 6: find File -name Pattern | xargs -I {} grep Pattern {} (-0.29574033618)
Prediction 7: find File -type f -name Pattern -exec grep Pattern {} \; -print (-0.313519835472)
Prediction 8: find File -name Pattern -exec grep Pattern {} \; -print (-0.32657378912)
Prediction 9: find File -name Pattern -exec grep -H Pattern {} \; (-0.329158961773)
Prediction 10: find File -name Pattern -exec grep -r Pattern {} \; (-0.329498440027)

Example 128 (1)
Original English: Search /usr, /home, /tmp for *.jar files
English: search _REGEX _REGEX _REGEX for _REGEX file
GT Command 1: find /usr /home  /tmp -name "*.jar"
Prediction 1: find File -type f -name Pattern (-0.327293008566)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.348942816257)
Prediction 3: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.381102204323)
Prediction 4: find File \( -iname Pattern -or -iname Pattern \) (-0.448704838753)
Prediction 5: find File \( -iname Pattern -or -iname Pattern \) -print (-0.449276298285)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.459642022848)
Prediction 7: find File -type f -iname Pattern -print (-0.460909873247)
Prediction 8: find File -iname Pattern (-0.468452304602)
Prediction 9: find File -name Pattern (-0.50065022707)
Prediction 10: find File -type f -iname Pattern (-0.502963542938)

Example 129 (1)
Original English: find all the empty directories in the current folder and all its sub directories too
English: find all empti directori in current folder and all sub directori too
GT Command 1: find . -depth -empty -type d
Prediction 1: find File -type d -empty (-0.0787026509643)
Prediction 2: find File -mindepth Number -maxdepth Number -type d -empty (-0.415141373873)
Prediction 3: find File -maxdepth Number -type d -empty (-0.485566556454)
Prediction 4: find File -depth -empty -type d (-0.493584960699)
Prediction 5: find File -depth -type d -empty (-0.539313077927)
Prediction 6: find File -mindepth Number -empty -type d (-0.564358472824)
Prediction 7: find File -mindepth Number -type d -empty (-0.600299596786)
Prediction 8: find File -empty -type d (-0.617308974266)
Prediction 9: find File -maxdepth Number -empty -type d (-0.689043104649)
Prediction 10: find File -type d -depth -empty (-0.732961475849)

Example 130 (1)
Original English: Remove all files whose names begin with "no-such-thing" in the /home/peter directory tree
English: remov all file whose name begin with _REGEX in _REGEX directori tree
GT Command 1: find /home/peter -name no-such-thing* |xargs rm
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.077503696084)
Prediction 2: find File -name Pattern -exec rm {} \; (-0.137152925134)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.266381025314)
Prediction 4: find File -name Pattern -print | xargs -I {} rm {} (-0.320933550596)
Prediction 5: find File -name Pattern | xargs -0 -I {} rm {} (-0.361043661833)
Prediction 6: find File -name Pattern -exec rm -f {} \; (-0.383587777615)
Prediction 7: find File -name Pattern | xargs -n -1 -I {} rm {} (-0.450220942497)
Prediction 8: find File -name Pattern | xargs -I {} rm -f {} (-0.476916015148)
Prediction 9: find File -name Pattern | xargs -r -I {} rm {} (-0.508717477322)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.524656116962)

Example 131 (1)
Original English: Find files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
English: find "files/directories" under current directori match posix-egrep type regex _PARAMET in name
GT Command 1: find . -regextype posix-egrep -regex ".+\.(c|cpp|h)$"
Prediction 1: find File -regextype Pattern -regex Pattern (-0.223467752337)
Prediction 2: find File \( -regex Pattern -and -not -regex Pattern \) (-0.303083598614)
Prediction 3: find File -regextype Pattern \( -regex Pattern -and -not -regex Pattern \) (-0.388373494148)
Prediction 4: find File \( -path File -prune -or -print \) (-0.409141898155)
Prediction 5: find File \( -regex Pattern -or -not -regex Pattern \) (-0.535114526749)
Prediction 6: find File \( -path File -prune -or \( -type f -and -print0 \) \) (-0.570552766323)
Prediction 7: find File \( -iregex Pattern -or -regex Pattern \) (-0.584710657597)
Prediction 8: find File -regextype Pattern \( -regex Pattern -or -regex Pattern \) (-0.585026562214)
Prediction 9: find File -iregex Pattern (-0.652342796326)
Prediction 10: find File \( -iregex Pattern -or -nogroup \) (-0.653886318207)

Example 132 (1)
Original English: search for a directory in the current folder and delete it
English: search for directori in current folder and delet
GT Command 1: find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
Prediction 1: find File -type d -delete (-0.128190904856)
Prediction 2: find File -type d -exec rm -r -f {} \; (-0.23735332489)
Prediction 3: find File -type d -print0 | xargs -0 -I {} rm -r -f {} (-0.287359386683)
Prediction 4: find File -type d -exec rm {} \; (-0.309879302979)
Prediction 5: find File -type d -exec rm -f {} \; (-0.354744911194)
Prediction 6: find File -type d | xargs -I {} rm -r -f {} (-0.376806467772)
Prediction 7: find File -type d -print0 | xargs -0 -I {} rm {} (-0.380286812782)
Prediction 8: find File -type d -name Pattern -exec rm -r -f {} \; (-0.395347833633)
Prediction 9: find File -type d -print0 | xargs -0 -I {} rm -f {} (-0.432705581188)
Prediction 10: find File -type d -name Pattern -exec rm {} \; (-0.435731649399)

Example 133 (2)
Original English: create a tar ball of all pdf files in current folder
English: creat tar ball of all pdf file in current folder
GT Command 1: find . -name *.pdf | xargs tar czvf /root/Desktop/evidence/pdf.tar
GT Command 2: find . -name '*.pdf' -print0 | tar czvf pdf.tar --null -T -
Prediction 1: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.139714449644)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.157719358802)
Prediction 3: find File -name Pattern -print0 | tar -T File --null --create -f File (-0.201326370239)
Prediction 4: find File -name Pattern | xargs -I {} tar -c -v -z -f Unknown {} (-0.223119407892)
Prediction 5: find File -name Pattern -print0 | tar -T File --null -T File --create -f File (-0.238477662206)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -z -f Unknown {} (-0.244775488973)
Prediction 7: find File -name Pattern -exec tar -c -v -f Unknown {} \; (-0.250879019499)
Prediction 8: find File -name Pattern -print | xargs -I {} tar -c -v -f Unknown {} (-0.260095566511)
Prediction 9: find File -name Pattern -print0 | tar -T File --null -T File (-0.27050948143)
Prediction 10: find File -name Pattern -exec tar -u -v -f Unknown {} \; (-0.323899716139)

Example 134 (1)
Original English: change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html
English: chang permiss of all "regular/normal" file to _NUM in folder _REGEX
GT Command 1: find /home/nobody/public_html -type f -exec chmod 644 {} \;
Prediction 1: find File -type f -exec chmod Permission {} \; (-0.0777612626553)
Prediction 2: find File -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.129290193319)
Prediction 3: find File -type f -perm Permission -print -exec chmod Permission {} \; (-0.229617163539)
Prediction 4: find File -type f -perm Permission -exec chmod Permission {} \; (-0.257972806692)
Prediction 5: find File -type f -name Pattern -exec chmod Permission {} \; (-0.260924905539)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} chmod Permission {} (-0.354436457157)
Prediction 7: find File -type f -print | xargs -I {} chmod Permission {} (-0.386767834425)
Prediction 8: find File -type f -print0 | xargs -0 -I {} chmod -v Permission {} (-0.388976067305)
Prediction 9: find File -type f | xargs -I {} chmod Permission {} (-0.392388164997)
Prediction 10: find File -type f -print0 | xargs -0 -I {} chmod -R Permission {} (-0.460505783558)

Example 135 (1)
Original English: Search the current directory tree for TXT files skipping hidden ones
English: search current directori tree for _REGEX file skip hidden one
GT Command 1: find . -type f \( -iname "*.txt" ! -iname ".*" \)
Prediction 1: find File \( -path File -prune -or -name Pattern \) -print (-0.172579467297)
Prediction 2: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.173687934875)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -prune -or -print \) (-0.382055580616)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -prune -or -name Pattern \) -print (-0.384771436453)
Prediction 5: find File \( -name Pattern -prune -and -name Pattern \) -prune -or -print \) (-0.40713223815)
Prediction 6: find File \( -name Pattern -prune -or -regex Pattern \) (-0.432516723871)
Prediction 7: find File \( -name Pattern -prune -or -name Pattern \) (-0.43271780014)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) -prune (-0.46101167798)
Prediction 9: find File \( -path File -prune -or -print \) (-0.465666025877)
Prediction 10: find File \( -name Pattern -prune -or \( -type f -and -name Pattern \) -and ! -name Pattern \) -print (-0.479512274265)

Example 136 (1)
Original English: Find image files and move them to the pictures directory
English: find imag file and move to pictur directori
GT Command 1: find ~/Desktop -name “*.jpg” -o -name “*.gif” -o -name “*.png” -print0 | xargs -0 mv –target-directory ~/Pictures
Prediction 1: find File -name Pattern -exec mv {} File \; (-0.0741657167673)
Prediction 2: find File -name Pattern | xargs -I {} mv {} File (-0.257568508387)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.266051828861)
Prediction 4: find File -iname Pattern -exec mv {} File \; (-0.281967312098)
Prediction 5: find File -name Pattern | xargs -I {} mv {} {} (-0.344960570335)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} mv {} File {} (-0.418988794088)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} mv {} {} (-0.427341461182)
Prediction 8: find File -name Pattern -print | xargs -I {} mv {} File (-0.430449992418)
Prediction 9: find File -maxdepth Number -name Pattern -exec mv {} File \; (-0.441191375256)
Prediction 10: find File -user Pattern -exec mv {} File \; (-0.441300362349)

Example 137 (5)
Original English: find  files which full path name is foo/bar under foo directory and print
English: find file full path name _REGEX under foo directori and print
GT Command 1: find foo -path foo/bar -print
GT Command 2: find foo -path /tmp/foo/bar -print
GT Command 3: find /tmp/foo -path /tmp/foo/bar -print
GT Command 4: find foo -path /tmp/foo/bar -print
GT Command 5: find foo -path /tmp/foo/bar -print
Prediction 1: find File -path File -print File (-0.344058126211)
Prediction 2: find File \( -path File -prune -or -print \) (-0.349988758564)
Prediction 3: find File \( -path File -prune -or -name Pattern \) -print (-0.393077284098)
Prediction 4: find File -path File -print (-0.398230731487)
Prediction 5: find File -path File (-0.40602517128)
Prediction 6: find File \( -path File -prune -or -path File -prune -or -name Pattern \) -print (-0.514362096786)
Prediction 7: find File \( -path File -prune -or -name Pattern \) (-0.514372944832)
Prediction 8: find File \( -path File -prune -or -iname Pattern \) -print (-0.514748334885)
Prediction 9: find File \( -path File -prune -or -path File -prune -or -print \) (-0.565329611301)
Prediction 10: find File \( -path File -prune -or -user Pattern \) -print (-0.587745010853)

Example 138 (1)
Original English: Display the files which are accessed after the modification of a give file.
English: display file access after modif of give file
GT Command 1: find -anewer "sum.java"
Prediction 1: find File -cnewer File (-0.48783108592)
Prediction 2: find File -amin Number (-0.503148853779)
Prediction 3: find File \( -perm Permission -or -perm Permission \) -ls (-0.538018345833)
Prediction 4: find File -anewer File (-0.561314046383)
Prediction 5: find File \( -path File -prune -or -type f \) -perm Permission -print (-0.574691057205)
Prediction 6: find File \( -path File -prune -or -print \) (-0.584029316902)
Prediction 7: find File \( -path File -prune -or -type f \) -perm Permission -ls (-0.606165289879)
Prediction 8: find File \( -path File -prune -or -type f \) -print (-0.611389696598)
Prediction 9: find File \( -path File -prune -or -type f \) -ls (-0.638149678707)
Prediction 10: find File -size Size (-0.672318994999)

Example 139 (1)
Original English: Search for files whose names match "*test*", a directory bing evaluated before its contents
English: search for file whose name match _REGEX directori bing evalu befor content
GT Command 1: find -name "*test*" -depth
Prediction 1: find File -name Pattern (-0.14834164083)
Prediction 2: find File -iname Pattern (-0.353660434484)
Prediction 3: find File -iname Pattern | xargs -I {} grep -L Pattern {} (-0.512491881847)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.534788548946)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.569549381733)
Prediction 6: find File -name Pattern | xargs -I {} grep -P -L Pattern {} (-0.572683990002)
Prediction 7: find File -iname Pattern | xargs -I {} grep -P -L Pattern {} (-0.592127323151)
Prediction 8: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.598346471786)
Prediction 9: find File -name Pattern | xargs -I {} grep Pattern {} (-0.627596795559)
Prediction 10: find File \( -name Pattern -and -not -name Pattern \) (-0.707679212093)

Example 140 (1)
Original English: find  file which case-insensitive name is too in currect directory
English: find file case-insensit name too in current directori
GT Command 1: find . -iname foo
Prediction 1: find File -iname Pattern (-0.243593811989)
Prediction 2: find File -type f -iname Pattern (-0.318949252367)
Prediction 3: find File -maxdepth Number -name Pattern (-0.42148861289)
Prediction 4: find File -type f -name Pattern (-0.463169246912)
Prediction 5: find File -name Pattern (-0.544017136097)
Prediction 6: find File -maxdepth Number -type f -name Pattern (-0.655366241932)
Prediction 7: find File -type f -iname Pattern -ls (-0.679188013077)
Prediction 8: find File -type f -iname Pattern -printf Pattern (-0.682953119278)
Prediction 9: find File -maxdepth Number -iname Pattern (-0.719021260738)
Prediction 10: find File -type f -iname Pattern -print (-0.756526947021)

Example 141 (1)
Original English: find all the files starting with "config" in the folder Symfony ( case insensitive search)
English: find all file start with _REGEX in folder _REGEX
GT Command 1: find Symfony -iname '*config*';
Prediction 1: find File -name Pattern (-0.0443929806352)
Prediction 2: find File -type f -name Pattern (-0.488832861185)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.495054751635)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.556606769562)
Prediction 5: find File \( -name Pattern -prune -or -print \) (-0.606528162956)
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-0.652049183846)
Prediction 7: find File -name Pattern -print (-0.714189887047)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) (-0.751053452492)
Prediction 9: find File -type f -iname Pattern -print (-0.80860710144)
Prediction 10: find File -type f -name Pattern -print (-0.859770774841)

Example 142 (1)
Original English: Search for the string 'foo' in *.html files under /usr/src/linux directory
English: search for string _REGEX in _REGEX file under _REGEX directori
GT Command 1: grep foo `find /usr/src/linux -name "*.html"`
Prediction 1: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.151745453477)
Prediction 2: find File -name Pattern | xargs -I {} grep Pattern {} (-0.166140556335)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.22474963963)
Prediction 4: find File -name Pattern -exec grep Pattern {} \; -print (-0.237019613385)
Prediction 5: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.238019794226)
Prediction 6: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.239398300648)
Prediction 7: find File -name Pattern -type f -print | xargs -I {} grep Pattern {} (-0.309135049582)
Prediction 8: find File -name Pattern -exec grep Pattern {} \; (-0.322307676077)
Prediction 9: find File -name Pattern -print | xargs -I {} grep -E Pattern {} (-0.358712255955)
Prediction 10: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.360904216766)

Example 143 (1)
Original English: Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username
English: find directori under maximum _NUM level down directori _PARAMET with _NUM permiss own by user _PARAMET
GT Command 1: find $dir -maxdepth 1 -type d -user $username -perm -100
Prediction 1: find File -maxdepth Number -type d -perm Permission (-0.141194730997)
Prediction 2: find File -maxdepth Number -type d -perm Permission -print (-0.223365858197)
Prediction 3: find File -maxdepth Number -type d ! -perm Permission (-0.282703071833)
Prediction 4: find File -maxdepth Number -type d -exec chmod -R Permission {} \; (-0.320984363556)
Prediction 5: find File -maxdepth Number -type d -perm Permission -exec ls -l {} \; (-0.36216494441)
Prediction 6: find File -maxdepth Number -mindepth Number -type d -exec chmod -R Permission {} \; (-0.409673243761)
Prediction 7: find File -maxdepth Number -mindepth Number -type d -exec ls -l -d {} \; (-0.431343615055)
Prediction 8: find File -maxdepth Number -type d -exec chmod Unknown {} \; (-0.46382188797)
Prediction 9: find File -maxdepth Number -maxdepth Number -type d -perm Permission (-0.518723607063)
Prediction 10: find File -maxdepth Number -perm Permission -type f (-0.520197629929)

Example 144 (1)
Original English: display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )
English: display all "regular/normal" file in folder _REGEX not modifi today
GT Command 1: find /path/ -type f -daystart -mtime +0
Prediction 1: find File -type f -mtime Time -printf Pattern (-0.182286933064)
Prediction 2: find File -type f -daystart -mtime Time (-0.261672049761)
Prediction 3: find File -type f -mtime Time (-0.357644289732)
Prediction 4: find File -type f -mtime Time -daystart (-0.359913289547)
Prediction 5: find File -type f -daystart -mtime Time -printf Pattern (-0.419152021408)
Prediction 6: find File -type f ! -mtime Time -printf Pattern (-0.424515366554)
Prediction 7: find File -type f -mtime Time ! -name Pattern (-0.445782393217)
Prediction 8: find File -type f -daystart -mtime Time -mtime Time (-0.458563685417)
Prediction 9: find File -type f -mtime Time ! -type f (-0.528214693069)
Prediction 10: find File -type f -daystart -mtime Time ! -type d (-0.588632464409)

Example 145 (1)
Original English: Find text in whole directory tree
English: find text in whole directori tree
GT Command 1: find . -type f | xargs grep "text"
Prediction 1: find File -name Pattern (-0.187685668468)
Prediction 2: find File -name Pattern -type f (-0.35585924983)
Prediction 3: find File -type f -name Pattern (-0.388505071402)
Prediction 4: find File -name Pattern -type f | xargs -I {} tar -c -v -f Unknown {} (-0.416184812784)
Prediction 5: find File -name Pattern -type f -print | xargs -I {} tar -c -v -f Unknown {} (-0.42491337657)
Prediction 6: find File -name Pattern -type f -print (-0.46253246069)
Prediction 7: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.499789059162)
Prediction 8: find File -name Pattern | xargs -I {} ls -l {} (-0.514961242676)
Prediction 9: find File -name Pattern | xargs -I {} ls -l -d {} (-0.52382928133)
Prediction 10: find File -name Pattern -type f | xargs -I {} ls -l {} (-0.547942578793)

Example 146 (1)
Original English: list all CSS files (and directories ending with “.css”) under the current directory
English: list all _REGEX file under current directori
GT Command 1: find . -name "*.css"
Prediction 1: find File -name Pattern (-0.222513467073)
Prediction 2: find File -type f -name Pattern (-0.231544092298)
Prediction 3: find File -type f -name Pattern -exec ls -l {} \; (-0.371817946434)
Prediction 4: find File -name Pattern | xargs -I {} ls -l {} (-0.410556703806)
Prediction 5: find File -name Pattern -exec ls -l {} \; (-0.42004776001)
Prediction 6: find File -type f -name Pattern | xargs -I {} ls -l {} (-0.421732068062)
Prediction 7: find File -name Pattern | xargs -I {} ls -l -d {} (-0.451456785202)
Prediction 8: find File -type f -name Pattern -exec ls {} \; (-0.451778888702)
Prediction 9: find File -type f -name Pattern | xargs -I {} ls -l -d {} (-0.455491125584)
Prediction 10: find File -name Pattern -exec ls {} \; (-0.544490635395)

Example 147 (1)
Original English: find all sqlite files in the current directory.
English: find all sqlite file in current directori
GT Command 1: find ./ -name "*.sqlite"
Prediction 1: find File -type f -name Pattern (-0.166649922729)
Prediction 2: find File -name Pattern (-0.307787299156)
Prediction 3: find File -type f -iname Pattern -print (-0.403054624796)
Prediction 4: find File -type f -iname Pattern (-0.490503698587)
Prediction 5: find File -type f -name Pattern -print (-0.605937004089)
Prediction 6: find File -iname Pattern (-0.673932015896)
Prediction 7: find File -type f -iname Pattern -print0 (-0.756082594395)
Prediction 8: find File -type f -iname Pattern -printf Pattern (-0.76383382082)
Prediction 9: find File -name Pattern -type f (-0.853009164333)
Prediction 10: find File -type f -iname Pattern -ls (-0.853677809238)

Example 148 (1)
Original English: list all *.txt files in the user's home directory.
English: list all _REGEX file in user 's home directori
GT Command 1: find ~/ -name '*.txt'
Prediction 1: find File ! -name Pattern -prune (-0.168451532722)
Prediction 2: find File -type f -name Pattern ! -name Pattern -prune (-0.384075284004)
Prediction 3: find File -type f -name Pattern ! -name Pattern -print (-0.447610557079)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.499764829874)
Prediction 5: find File -type f -name Pattern -exec ls -l {} \; (-0.500669598579)
Prediction 6: find File -type f -name Pattern ! -name Pattern (-0.503809034824)
Prediction 7: find File -type f -name Pattern (-0.548771083355)
Prediction 8: find File ! -name Pattern -prune -name Pattern -print (-0.61285930872)
Prediction 9: find File ! -name Pattern -prune -name Pattern (-0.615524530411)
Prediction 10: find File \( -name Pattern -prune -or -name Pattern \) (-0.633567035198)

Example 149 (1)
Original English: find files in a folder using name patterns
English: find file in folder use name pattern
GT Command 1: find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
Prediction 1: find File -name Pattern (-0.101862207055)
Prediction 2: find File -iname Pattern (-0.349782079458)
Prediction 3: find File -type f -name Pattern (-0.583782970905)
Prediction 4: find File -type f -iname Pattern (-0.748989403248)
Prediction 5: find File -iregex Pattern (-0.940265595913)
Prediction 6: find File -type f -iname Pattern -print (-1.10303235054)
Prediction 7: find File -name Pattern -type f (-1.19278895855)
Prediction 8: find File -type f -iregex Pattern (-1.21074616909)
Prediction 9: find File -name Pattern -print (-1.21498310566)
Prediction 10: find File -regex Pattern (-1.28703176975)

Example 150 (1)
Original English: Find all *.tex files/directories in maximum 2 levels down the current directory
English: find all _REGEX "files/directories" in maximum _NUM level down current directori
GT Command 1: find . -maxdepth 2 -name '*.tex'
Prediction 1: find File -maxdepth Number -name Pattern (-0.0610718838871)
Prediction 2: find File -maxdepth Number -name Pattern -print0 (-0.376028269529)
Prediction 3: find File -maxdepth Number -mindepth Number -name Pattern (-0.471056014299)
Prediction 4: find File -mindepth Number -maxdepth Number -name Pattern (-0.477539151907)
Prediction 5: find File -maxdepth Number -name Pattern -type f (-0.486821383238)
Prediction 6: find File -maxdepth Number -maxdepth Number -name Pattern (-0.541705787182)
Prediction 7: find -L File -maxdepth Number -name Pattern (-0.565636396408)
Prediction 8: find File -maxdepth Number \( -name Pattern -prune -or -name Pattern \) -print (-0.569141805172)
Prediction 9: find File -maxdepth Number -type f -name Pattern (-0.598536133766)
Prediction 10: find File -maxdepth Number \( -name Pattern -prune -or -name Pattern \) (-0.606577336788)

Example 151 (1)
Original English: Move all Emacs backup files from the current directory tree to ~/backups/
English: move all _REGEX backup file from current directori tree to _PARAMET
GT Command 1: find . -name '*~' -print 0 | xargs -0 -I % cp % ~/backups
Prediction 1: find File -name Pattern -exec mv {} File \; (-0.100699350238)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.105339966714)
Prediction 3: find File -name Pattern | xargs -I {} mv {} File (-0.178953424096)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.332119852304)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} mv {} File {} (-0.33308917284)
Prediction 6: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.338399112225)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} mv {} {} (-0.361610084772)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} mv -t File {} (-0.374490767717)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} chown Pattern {} (-0.425987064838)
Prediction 10: find File -name Pattern -print0 | xargs -I {} -0 mv {} File (-0.432084679604)

Example 152 (1)
Original English: find foo, Foo, FOo, FOO, etc., but only dirs
English: find foo _REGEX _REGEX _REGEX etc but onli dir
GT Command 1: find . -iname foo -type d
Prediction 1: find File -iname Pattern -type f (-0.072564214468)
Prediction 2: find File -iname Pattern -type f -ls (-0.450029611588)
Prediction 3: find File -iname Pattern -type f -newer File (-0.457025229931)
Prediction 4: find File -iname Pattern -type f -printf Pattern (-0.531284332275)
Prediction 5: find File -iname Pattern -type f -print (-0.548561513424)
Prediction 6: find File -iname Pattern \( -type d -or -type d \) (-0.568807125092)
Prediction 7: find File -iname Pattern \( -type d -or -type d \) -ls (-0.644226372242)
Prediction 8: find File -iname Pattern -type f -iname Pattern (-0.649592041969)
Prediction 9: find File -name Pattern -type f (-0.649806976318)
Prediction 10: find File -iname Pattern -type f -empty (-0.657335460186)

Example 153 (1)
Original English: Print the name of "file1" if this file is newer than "file2"
English: print name of _REGEX if file newer than _REGEX
GT Command 1: find file1 -prune -newer file2
Prediction 1: find File -newer File (-0.199333995581)
Prediction 2: find File -newer File -print (-0.413067400455)
Prediction 3: find File -name Pattern -newer File (-0.435617357492)
Prediction 4: find File -newer File -name Pattern (-0.518672883511)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.551820635796)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.566107451916)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.611481368542)
Prediction 8: find File File -name Pattern -newer File (-0.636853992939)
Prediction 9: find File -newer File -name Pattern -print (-0.64509665966)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.646803498268)

Example 154 (1)
Original English: find all the pdf files in current folder and create a tar ball of all these files
English: find all pdf file in current folder and creat tar ball of all file
GT Command 1: find . -iname "*.pdf" -exec tar --append --file=somefile.tar {} \;
Prediction 1: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.140787780285)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.150600761175)
Prediction 3: find File -name Pattern | xargs -I {} tar -c -v -z -f Unknown {} (-0.236960023642)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -z -f Unknown {} (-0.239405766129)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.24756526947)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.267488449812)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.28209617734)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.297526478767)
Prediction 9: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.300123184919)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} grep -c Pattern {} (-0.304241806269)

Example 155 (1)
Original English: Remove all "work" directories residing in /usr/ports and below
English: remov all _REGEX directori resid in _REGEX and below
GT Command 1: find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.120997987688)
Prediction 2: find File -name Pattern | xargs -I {} rm {} (-0.204557940364)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.222022905946)
Prediction 4: find File -name Pattern -exec rm {} \; (-0.284771233797)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.290306270123)
Prediction 6: find File -type d -name Pattern | xargs -I {} rm {} (-0.30617621541)
Prediction 7: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -f {} (-0.324510663748)
Prediction 8: find File -type d -name Pattern -exec rm -f {} \; (-0.338612645864)
Prediction 9: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.348942697048)
Prediction 10: find File -name Pattern -exec rm -f {} \; (-0.352648764849)

Example 156 (1)
Original English: search the entire file system for a specific file
English: search entir file system for specif file
GT Command 1: find / -name document -print
Prediction 1: find File -name Pattern (-0.0276458766311)
Prediction 2: find File -type f -name Pattern (-0.557174384594)
Prediction 3: find File -name Pattern -print (-0.674431860447)
Prediction 4: find File -type f -iname Pattern -print (-0.831118047237)
Prediction 5: find File -type f -name Pattern -print (-0.880683720112)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.895999610424)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.919890344143)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.934883773327)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) {} \; -print (-0.948656737804)
Prediction 10: find File \( -name Pattern -or -name Pattern \) (-0.949952244759)

Example 157 (1)
Original English: Find files that are 0 bytes in size in the current directory and remove them
English: find file _NUM byte in size in current directori and remov
GT Command 1: find . -maxdepth 1 -size 0c -exec rm {} \;
Prediction 1: find File -size Size -exec rm {} \; (-0.146133169532)
Prediction 2: find File -type f -size Size -exec rm {} \; (-0.197190701962)
Prediction 3: find File -size Size -print | xargs -I {} rm {} (-0.294569671154)
Prediction 4: find File -size Size -ok rm {} \; (-0.304728984833)
Prediction 5: find File -type f -size Size -print | xargs -I {} rm {} (-0.339259147644)
Prediction 6: find File -size Size -exec rm -r -f {} \; (-0.373568862677)
Prediction 7: find File -type f -size Size | xargs -I {} rm {} (-0.406129568815)
Prediction 8: find File -size Size -print | xargs -I {} rm -r -f {} (-0.430883616209)
Prediction 9: find File -size Size | xargs -I {} rm {} (-0.446534693241)
Prediction 10: find File -type f -size Size -exec rm -f {} \; (-0.454667121172)

Example 158 (1)
Original English: Find all *.texi files in /usr/local/doc
English: find all _REGEX file in _REGEX
GT Command 1: find /usr/local/doc -name '*.texi'
Prediction 1: find File -type f -name Pattern (-0.217222437263)
Prediction 2: find File -type f -iname Pattern (-0.355861753225)
Prediction 3: find File -perm Permission (-0.359256446362)
Prediction 4: find File -name Pattern (-0.374124586582)
Prediction 5: find File -type f -iname Pattern -print (-0.416760087013)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.691718041897)
Prediction 7: find File \( -name Pattern -or -name Pattern \) (-0.712876558304)
Prediction 8: find File -type f -perm Permission (-0.792768895626)
Prediction 9: find File -iname Pattern (-0.827007174492)
Prediction 10: find File -type f -name Pattern -print (-0.86475110054)

Example 159 (1)
Original English: Find a 400 permission file under /data directory
English: find _NUM permiss file under _REGEX directori
GT Command 1: find /data -type f -perm 400 -print -quit
Prediction 1: find File -type f -perm Permission -print (-0.0976543202996)
Prediction 2: find File -type f -perm Permission (-0.172359392047)
Prediction 3: find File -type f -perm Permission -exec ls -l {} \; (-0.377054095268)
Prediction 4: find File -type f -perm Permission | xargs -I {} ls -l -d {} (-0.481639295816)
Prediction 5: find File -perm Permission -type f -exec ls -l {} \; (-0.494170218706)
Prediction 6: find File -type f -perm Permission -exec chmod Permission {} \; (-0.528806567192)
Prediction 7: find File -type f -perm Permission | xargs -I {} ls -l {} (-0.582582831383)
Prediction 8: find File -type f -perm Permission | xargs -I {} chmod Permission {} (-0.595757246017)
Prediction 9: find File -type f -perm Permission | xargs -I {} chmod Unknown {} (-0.628245472908)
Prediction 10: find File -perm Permission -type f (-0.646281778812)

Example 160 (1)
Original English: Search the current directory recursively for files containing "string"
English: search current directori recurs for file contain _REGEX
GT Command 1: find . -type f -exec grep -l 'string' {} \;
Prediction 1: find File -type f -print | xargs -I {} grep Pattern {} (-0.253375887871)
Prediction 2: find File -type f -print0 | xargs -0 -I {} grep -I Pattern {} (-0.264735132456)
Prediction 3: find File -type f -print | xargs -I {} grep -L Pattern {} (-0.270150154829)
Prediction 4: find File -type f -print0 | xargs -0 -I {} grep Pattern {} (-0.282630652189)
Prediction 5: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.283789128065)
Prediction 6: find File -type f -print0 | xargs -0 -I {} grep -L Pattern {} (-0.300280809402)
Prediction 7: find File -type f -print0 | xargs -0 -I {} grep -H Pattern {} (-0.334976375103)
Prediction 8: find File -type f -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.337155252695)
Prediction 9: find File -type f -print0 | xargs -0 -I {} grep -E Pattern {} (-0.356322199106)
Prediction 10: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.372952461243)

Example 161 (1)
Original English: show the list of all the files in the current folder which have been modified within the 24 hours
English: show list of all file in current folder modifi within _NUM hour
GT Command 1: find . -mtime 0 -print
Prediction 1: find File -mtime Time | xargs -I {} ls -l -d {} (-0.280835002661)
Prediction 2: find File -mtime Time -print (-0.294847846031)
Prediction 3: find File -mtime Time -print0 | xargs -0 -I {} ls -l -S -h {} (-0.300921112299)
Prediction 4: find File -mtime Time -exec ls -l {} \; (-0.30109167099)
Prediction 5: find File -mtime Time -print0 | xargs -0 -I {} ls -l -d {} (-0.322533130646)
Prediction 6: find File -mtime Time -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n Number (-0.329333394766)
Prediction 7: find File -mtime Time | xargs -I {} ls -l -S -h {} (-0.335309505463)
Prediction 8: find File -mtime Time | xargs -I {} ls -l -t -r {} | tail -n Number (-0.356318771839)
Prediction 9: find File -mtime Time -print0 | xargs -0 -I {} ls -l -t -r {} | head -n Number (-0.357389807701)
Prediction 10: find File -mtime Time | xargs -0 -I {} ls -l -d {} (-0.371446430683)

Example 162 (1)
Original English: get all the files that are exactly 30 days old
English: get all file exact _NUM day old
GT Command 1: find . -mtime 30 -print
Prediction 1: find File -mtime Time (-0.167959943414)
Prediction 2: find File -type f -atime Time (-0.448324084282)
Prediction 3: find File -type f -ctime Time (-0.480638414621)
Prediction 4: find File -type f -mtime Time (-0.496327668428)
Prediction 5: find File -mtime Time -exec ls -l {} \; (-0.555951833725)
Prediction 6: find File -mtime Time | xargs -I {} ls -l -d {} (-0.580238044262)
Prediction 7: find File -mtime Time -print (-0.599589288235)
Prediction 8: find File -mtime Time -type f (-0.631295621395)
Prediction 9: find File -mtime Time | xargs -I {} ls -l -S -h {} (-0.663284897804)
Prediction 10: find File -mtime Time | xargs -I {} ls -l {} (-0.784358739853)

Example 163 (1)
Original English: Locate files that reside in the home directory and have not been accessed in the past 30 days
English: locat file resid in home directori and not access in past _NUM day
GT Command 1: find $HOME -atime +30
Prediction 1: find File -atime Time (-0.229294762015)
Prediction 2: find File -iname Pattern -atime Time (-0.330684006214)
Prediction 3: find File -name Pattern -atime Time (-0.375714570284)
Prediction 4: find File -atime Time -name Pattern (-0.405109316111)
Prediction 5: find File -mtime Time -iname Pattern (-0.572232604027)
Prediction 6: find File -mtime Time -name Pattern (-0.722827017307)
Prediction 7: find File -atime Time -iname Pattern (-0.761216640472)
Prediction 8: find File -atime Time -print (-0.768664717674)
Prediction 9: find File -iname Pattern (-0.909994482994)
Prediction 10: find File -mtime Time (-0.91729593277)

Example 164 (1)
Original English: Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??'
English: count number of line in all file in _REGEX directori tree match pattern _REGEX
GT Command 1: find xargstest/ -name 'file??' | sort | xargs wc -l
Prediction 1: find File -name Pattern -exec wc -l {} \; (-0.0851085633039)
Prediction 2: find File -name Pattern | wc -l (-0.186447367072)
Prediction 3: find File -name Pattern | xargs -I {} wc -l {} (-0.249420508742)
Prediction 4: find File -name Pattern | xargs -I {} wc -c {} (-0.359048873186)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} wc -l {} (-0.381962746382)
Prediction 6: find File -name Pattern -exec grep Pattern {} \; | wc -l (-0.438347429037)
Prediction 7: find File -type f -name Pattern -exec wc -l {} \; (-0.451847076416)
Prediction 8: find File -name Pattern | wc -c (-0.489998906851)
Prediction 9: find File -name Pattern -exec wc -c {} \; (-0.516121149063)
Prediction 10: find File -name Pattern -exec wc -c {} \; | wc --bytes (-0.532965421677)

Example 165 (3)
Original English: Find all *.cgi files/directories under current directory and change their permission to 755
English: find all _REGEX "files/directories" under current directori and chang permiss to _NUM
GT Command 1: find . -name '*.cgi' -print0 | xargs -0 chmod 755
GT Command 2: find . -name '*.cgi' -print0 | xargs -0 chmod 775
GT Command 3: find . -iname '*.cgi' | xargs chmod 755
Prediction 1: find File -name Pattern -exec chmod Permission {} \; (-0.0445348881185)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} chmod Permission {} (-0.201071634889)
Prediction 3: find File -name Pattern | xargs -I {} chmod Permission {} (-0.273357778788)
Cannot parse: chmod Permission $( find File -name Pattern \) - MatchedPairError
Prediction 4: chmod Permission $( find File -name Pattern \)  (-0.351232200861)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} chown Pattern {} (-0.391791492701)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} chmod Unknown {} (-0.443518787622)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.44878590107)
Prediction 8: find File -type f -name Pattern -exec chmod Permission {} \; (-0.453013926744)
Prediction 9: find File -name Pattern -exec mv {} File \; (-0.468949198723)
Prediction 10: find File -iname Pattern -exec chmod Permission {} \; (-0.469177991152)

Example 166 (2)
Original English: search for a file in current folder excluding the search in the folder ./ignored_directory
English: search for file in current folder exclud search in folder _REGEX
GT Command 1: find . -path ./ignored_directory -prune -o -name fileName.txt -print
GT Command 2: find /path/to/folder -path "*/ignored_directory" -prune -o -name fileName.txt -print
Prediction 1: find File \( -path File -prune -or -print \) (-0.182236075401)
Prediction 2: find File \( -path File -prune -or -name Pattern \) -print (-0.188312008977)
Prediction 3: find File -type f \( -name Pattern -prune -or -name Pattern \) -print (-0.294614344835)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.298216670752)
Prediction 5: find File \( -path File -prune -or -name Pattern \) (-0.308634161949)
Prediction 6: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -print (-0.390865474939)
Prediction 7: find File \( -path File -prune -or -type f \) -print (-0.440104365349)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) (-0.450114637613)
Prediction 9: find File -type f \( -name Pattern -and ! -name Pattern \) (-0.455856084824)
Prediction 10: find File -type f \( -name Pattern -prune -or -name Pattern \) (-0.458082526922)

Example 167 (1)
Original English: Find every file under the directory /usr ending in ".stat".
English: find everi file under directori _REGEX end in _REGEX
GT Command 1: find /usr -name *stat
Prediction 1: find File -name Pattern (-0.0455235764384)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.445611834526)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.54475748539)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.547741830349)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.596946775913)
Prediction 6: find File \( -name Pattern -or -name Pattern \) {} \;  (-0.616755545139)
Prediction 7: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.631685912609)
Prediction 8: find File \( -path File -prune -or -name Pattern \) -print (-0.636047065258)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.646195828915)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.655424237251)

Example 168 (1)
Original English: Search the current directory tree for all image files
English: search current directori tree for all imag file
GT Command 1: find . -type f -regex ".*\.\(jpg\|jpeg\|gif\|png\|JPG\|JPEG\|GIF\|PNG\)"
Prediction 1: find File -name Pattern (-0.147542402148)
Prediction 2: find File -type f -name Pattern (-0.212701663375)
Prediction 3: find File -type f -iname Pattern (-0.634328424931)
Prediction 4: find File -type f -iname Pattern -print (-0.788367807865)
Prediction 5: find File -type f (-0.89182472229)
Prediction 6: find File -type f -name Pattern -print (-0.965831816196)
Prediction 7: find File -type f -print | grep -E Pattern (-0.970964550972)
Prediction 8: find File -type f -iname Pattern -print0 (-1.0713955164)
Prediction 9: find File -iname Pattern (-1.09152591228)
Prediction 10: find File -print | grep Pattern (-1.1214774847)

Example 169 (1)
Original English: Remove all CVS directories in the current directory tree
English: remov all _REGEX directori in current directori tree
GT Command 1: find . -type d -name CVS -exec rm -r {} \;
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.158581003547)
Prediction 2: find File -name Pattern -type d | xargs -I {} rm {} (-0.223431304097)
Prediction 3: find File -type d -name Pattern | xargs -I {} rm {} (-0.223926439881)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -f {} (-0.28519564867)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.290638059378)
Prediction 6: find File -name Pattern -type f | xargs -I {} rm -f {} (-0.295344561338)
Prediction 7: find File -type d -name Pattern | xargs -I {} rm -f {} (-0.300279468298)
Prediction 8: find File -name Pattern -type f | xargs -I {} rm {} (-0.310837060213)
Prediction 9: find File -name Pattern -type d | xargs -I {} rm -f {} (-0.32834354043)
Prediction 10: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.328690797091)

Example 170 (1)
Original English: Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
English: search for all file and directori name foo _REGEX or ani other combin of uppercas and lowercas charact beneath current directori
GT Command 1: find . -iname foo
Prediction 1: find File -iname Pattern (-0.269192636013)
Prediction 2: find File -iname Pattern -printf Pattern (-0.386228233576)
Prediction 3: find File -iname Pattern -print0 (-0.38945838809)
Prediction 4: find File \( -iname Pattern -or -iname Pattern \) (-0.460049748421)
Prediction 5: find File -iname Pattern \( -print -or -type d -prune \) (-0.5557051301)
Prediction 6: find File -iname Pattern -exec ls -l {} \; (-0.571243286133)
Prediction 7: find File -iname Pattern \( -print -or -type d \) (-0.577041268349)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) -print (-0.624209225178)
Prediction 9: find File -iname Pattern \( -print -or -type d \) -printf Pattern (-0.6433609128)
Prediction 10: find File \( -iname Pattern -or -iname Pattern \) -ls (-0.648978054523)

Example 171 (1)
Original English: List all files matching regular expression '*foo*' in a human-readable form
English: list all file match regular express _REGEX in human-read form
GT Command 1: find . -name '*foo*' -exec ls -lah {} \;
Prediction 1: find File -regex Pattern (-0.190179660916)
Prediction 2: find File \( -regex Pattern -and -not -regex Pattern \) (-0.299683898687)
Prediction 3: find File \( -path File -prune -or -print \) (-0.442513793707)
Prediction 4: find File -regextype Pattern -regex Pattern (-0.462140798569)
Prediction 5: find File -regex Pattern | xargs -I {} ls -l {} (-0.535365641117)
Prediction 6: find File | grep -E -v Pattern (-0.547955930233)
Prediction 7: find File -not -regex Pattern (-0.576294779778)
Prediction 8: find File -regex Pattern -exec ls -l {} \; (-0.617867588997)
Prediction 9: find File -regex Pattern | xargs -I {} ls {} (-0.622853338718)
Prediction 10: find File -regex Pattern -exec ls {} \; (-0.64630651474)

Example 172 (1)
Original English: Find regular files under and below /path that match pattern "???-???_[a-zA-Z]*_[0-9]*_*.???"
English: find regular file under and below _REGEX match pattern _REGEX
GT Command 1: find /path -type f -name "???-???_[a-zA-Z]*_[0-9]*_*.???"
Prediction 1: find File -type f -name Pattern (-0.354061722755)
Prediction 2: find File -type f -print | xargs -I {} grep -L Pattern {} (-0.377499699593)
Prediction 3: find File -maxdepth Number -type f -name Pattern (-0.386293649673)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.421190857887)
Prediction 5: find File -type f -print (-0.443347036839)
Prediction 6: find File -type f -print | xargs -I {} grep Pattern {} (-0.460050791502)
Prediction 7: find File File -type f -print (-0.484159469604)
Prediction 8: find File -type f -print | xargs -I {} grep -c Pattern {} (-0.486376345158)
Prediction 9: find File -type f -name Pattern -print (-0.506926476955)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) -or -print \) (-0.522134363651)

Example 173 (1)
Original English: find all the files with the name september ( case insensitive )
English: find all file with name septemb
GT Command 1: find -iname september
Prediction 1: find File -name Pattern (-0.0327398739755)
Prediction 2: find File -type f -name Pattern (-0.534443020821)
Prediction 3: find File -iname Pattern (-0.77107745409)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.860281705856)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.888627707958)
Prediction 6: find File -print | grep Pattern (-0.906632721424)
Prediction 7: find File -type f -iname Pattern -print (-0.916442513466)
Prediction 8: find File -name Pattern -print (-0.959216475487)
Prediction 9: find File -type f -iname Pattern (-0.997643232346)
Prediction 10: find File -type f -name Pattern -print (-1.00244724751)

Example 174 (1)
Original English: Search for regular expression 'expr' in all .c and .h files from the current directory tree
English: search for regular express _REGEX in all _REGEX and _REGEX file from current directori tree
GT Command 1: find -name '*.[ch]' | xargs grep -E 'expr'
Prediction 1: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} grep Pattern {} (-0.202040269971)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} grep -L Pattern {} (-0.25197404623)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -type f -print | xargs -I {} grep Pattern {} (-0.267803549767)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print | xargs -I {} grep Pattern {} (-0.281729519367)
Prediction 5: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.305915504694)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.313273072243)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print | xargs -I {} grep Pattern {} (-0.313505768776)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} grep -E Pattern {} (-0.326883107424)
Prediction 9: find File \( -name Pattern -or -name Pattern \) -print -exec grep -q Pattern {} \; (-0.333356648684)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print | xargs -I {} grep -L Pattern {} (-0.333790540695)

Example 175 (1)
Original English: Find all regular files in and below the home directory that have been modified in the last 90 minutes
English: find all regular file in and below home directori modifi in last _NUM minut
GT Command 1: find ~ -type f -mmin -90
Prediction 1: find File -type f -mmin Number (-0.143825352192)
Prediction 2: find File -mmin Number -type f (-0.291795581579)
Prediction 3: find File -maxdepth Number -type f -mmin Number (-0.472457528114)
Prediction 4: find File -amin Number -type f (-0.542290508747)
Prediction 5: find File \( -type f -and -mmin Number \) (-0.560076773167)
Prediction 6: find File -type f -newer File (-0.563288390636)
Prediction 7: find File -type f -amin Number (-0.599191844463)
Prediction 8: find File -mmin Number (-0.627611756325)
Prediction 9: find File -type f -mtime Time (-0.662975907326)
Prediction 10: find File -maxdepth Number -type f (-0.671288907528)

Example 176 (1)
Original English: find all the files in the current directory that have the word "bash" in their name
English: find all file in current directori word _REGEX in name
GT Command 1: find . -name "*bash*"
Prediction 1: find File -name Pattern (-0.155616119504)
Prediction 2: find File -type f -name Pattern (-0.188170865178)
Prediction 3: find File -type f -iname Pattern (-0.643929719925)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.651509463787)
Prediction 5: find File \( -name Pattern -prune -or -print \) (-0.667266070843)
Prediction 6: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.671903371811)
Prediction 7: find File \( -name Pattern -or -name Pattern \) (-0.677745461464)
Prediction 8: find File -type f -iname Pattern -print (-0.796722114086)
Prediction 9: find File -type f -name Pattern -print (-0.824293494225)
Prediction 10: find File -name Pattern -type f (-0.835314035416)

Example 177 (1)
Original English: display all regular files in the folder image-folder
English: display all regular file in folder image-fold
GT Command 1: find image-folder/ -type f
Prediction 1: find File -type f (-0.0469038002193)
Prediction 2: find File -type f -print (-0.508437633514)
Prediction 3: find File -type f | xargs -I {} ls -l -d {} (-0.660645782948)
Prediction 4: find File -maxdepth Number -type f (-0.685319840908)
Prediction 5: find File -type f -name Pattern (-0.720092952251)
Prediction 6: find File -type f | xargs -I {} ls -1 -S -s -h {} (-0.756976127625)
Prediction 7: find File -type f | xargs -I {} ls -l -S -h {} (-0.767607331276)
Prediction 8: find File -type f | sort (-0.797576248646)
Prediction 9: find File -type f | xargs -I {} ls -1 -S -h {} (-0.852516829967)
Prediction 10: find File -type f | xargs -I {} ls -d {} (-0.86996114254)

Example 178 (1)
Original English: count the lines of java code for all the java files in the current directory
English: count line of java code for all java file in current directori
GT Command 1: find . -name "*.java" -print0 | xargs -0 wc
Prediction 1: find File -name Pattern -exec wc -l {} \; (-0.11269017309)
Prediction 2: find File -name Pattern | xargs -I {} wc -l {} (-0.215190783143)
Prediction 3: find File -name Pattern -type f -exec wc -l {} \; (-0.222138643265)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} wc -l {} (-0.250912666321)
Prediction 5: find File -name Pattern -type f -print0 | xargs -0 -I {} wc -l {} (-0.286504924297)
Prediction 6: find File -name Pattern -type f | xargs -I {} wc -l {} (-0.328175097704)
Prediction 7: find File -type f -name Pattern -exec wc -l {} \; (-0.337830752134)
Prediction 8: find File -name Pattern | wc -l (-0.368368774652)
Prediction 9: find File -name Pattern | xargs -I {} wc -c {} (-0.3910163939)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} wc -w {} (-0.425956279039)

Example 179 (1)
Original English: Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files
English: find file under _REGEX match _REGEX in name without descend into directori match _REGEX and _REGEX in file
GT Command 1: find [directory] -name "pattern_to_exclude" -prune -o -name "another_pattern_to_exclude" -prune -o -name "pattern_to_INCLUDE" -print0 | xargs -0 -I FILENAME grep -IR "pattern" FILENAME
Prediction 1: find File \( -path File -prune -or -name Pattern \) -print (-0.223570361733)
Prediction 2: find File \( -regex Pattern -and -not -regex Pattern \) (-0.280258476734)
Prediction 3: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -print (-0.285922944546)
Prediction 4: find File \( -path File -prune -or \( -regex Pattern -and -not -regex Pattern \) (-0.344575792551)
Prediction 5: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.350139290094)
Prediction 6: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -name Pattern \) -print (-0.366450369358)
Prediction 7: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.371154546738)
Prediction 8: find File \( -path File -prune -or \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.374287635088)
Prediction 9: find File \( -path File -prune -or -regex Pattern \) (-0.38764372468)
Prediction 10: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -name Pattern \) (-0.421895503998)

Example 180 (1)
Original English: Find files ending with .mp3 and .jpg
English: find file end with _REGEX and _REGEX
GT Command 1: find . \( -name '*.mp3' -o -name '*.jpg' \) -print
Prediction 1: find File -name Pattern -name Pattern (-0.253419369459)
Prediction 2: find File -name Pattern -name Pattern -print (-0.378780394793)
Prediction 3: find File -name Pattern -type f -print (-0.396316081285)
Prediction 4: find File -name Pattern -not -name Pattern (-0.412021070719)
Prediction 5: find File -name Pattern -type f (-0.424387603998)
Prediction 6: find File -name Pattern (-0.437740892172)
Prediction 7: find File -name Pattern -print (-0.516696274281)
Prediction 8: find File -name Pattern -type f -name Pattern (-0.527081906796)
Prediction 9: find File -name Pattern -fprint File (-0.596497535706)
Prediction 10: find File -name Pattern -type f -print | grep -E Pattern (-0.649929761887)

Example 181 (1)
Original English: search for a file in current folder excluding those that are present in a specific path
English: search for file in current folder exclud present in specif path
GT Command 1: find /path/to/folder -name fileName.txt -not -path "*/ignored_directory/*"
Prediction 1: find File \( -path File -prune -or -name Pattern \) -print (-0.230445086956)
Prediction 2: find File \( -path File -prune -or -name Pattern \) (-0.335206180811)
Prediction 3: find File \( -path File -prune -or -print \) (-0.352328598499)
Prediction 4: find File ! -path File (-0.388962835073)
Prediction 5: find File \( -path File -prune -or -path File -prune -or -name Pattern \) -print (-0.414929866791)
Prediction 6: find File -not -path File (-0.465312540531)
Prediction 7: find File -name Pattern -not -path File (-0.470233529806)
Prediction 8: find File \( -path File -prune -or -path File -prune -or -name Pattern \) (-0.475615084171)
Prediction 9: find File \( -path File -prune -or -path File -prune \) (-0.490638703108)
Prediction 10: find File ! -path File -iname Pattern (-0.502825856209)

Example 182 (1)
Original English: change the ownership of all directories in the current folder
English: chang ownership of all directori in current folder
GT Command 1: find . -type d -exec chown username {} \;
Prediction 1: find File -type d -exec chown Pattern {} \; (-0.0832810029387)
Prediction 2: find File -type d | xargs -I {} chown Pattern {} (-0.157100439072)
Prediction 3: find File -type d | xargs -I {} tar -c -v -f Unknown {} (-0.259048342705)
Prediction 4: find File -type d -print0 | xargs -0 -I {} chown Pattern {} (-0.281094759703)
Prediction 5: find File -type d | xargs -I {} chmod Permission {} (-0.28807118535)
Prediction 6: find File -type d -print0 | xargs -0 -I {} chmod Permission {} (-0.312612056732)
Prediction 7: find File -type d -print | xargs -I {} chown Pattern {} (-0.355262875557)
Prediction 8: find File -type d | xargs -I {} tar -r -v -f Unknown {} (-0.363350838423)
Prediction 9: find File -type d -exec chmod Permission {} \; (-0.392205715179)
Prediction 10: find File -type d -exec chown Pattern {} + (-0.459211200476)

Example 183 (1)
Original English: Find all files in your home directory and below that are exactly 100M.
English: find all file in home directori and below exact _NUMM
GT Command 1: find ~ -size 100M
Prediction 1: find File -size Size (-0.0985584184527)
Prediction 2: find File -size (-0.857028961182)
Prediction 3: find File (-0.92910528183)
Prediction 4: find File -mindepth Number (-1.01616001129)
Prediction 5: find File -type f -size Size (-1.02784848213)
Prediction 6: find File -type f (-1.07245182991)
Prediction 7: find File -size Size -print (-1.19550657272)
Prediction 8: find File -user Pattern (-1.24625730515)
Prediction 9: find File -name Pattern (-1.33104121685)
Prediction 10: find File -print (-1.41113138199)

Example 184 (1)
Original English: display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems
English: display list of all file in file system not belong to ani user and search onli in jfs and _REGEX file system
GT Command 1: find / -nouser \( -fstype jfs -o -fstype jfs2 \) -ls
Prediction 1: find File -nogroup \( -fstype Unknown -or -fstype Unknown \) -ls (-0.419786483049)
Prediction 2: find File -nogroup \( ! -path File -and ! -perm Permission \) -ls (-0.550412595272)
Prediction 3: find File -newer File -user Pattern -print (-0.56253361702)
Prediction 4: find File -nogroup \( ! -path File -and ! -path File \) (-0.586201369762)
Prediction 5: find File -nogroup \( -fstype Unknown -or -nogroup \) -ls (-0.591352403164)
Prediction 6: find File ! -user Pattern -perm Permission -ls (-0.600397527218)
Prediction 7: find File ! -user Pattern -iname Pattern -ls (-0.624143004417)
Prediction 8: find File -nogroup \( ! -path File -and ! -perm Permission \) (-0.626145422459)
Prediction 9: find File -nogroup \( -nouser -or -nogroup \) -ls (-0.63411796093)
Prediction 10: find File -nogroup \( -nouser -or -nogroup \) (-0.647886872292)

Example 185 (1)
Original English: Search the /usr/local/doc directory tree for .texi files
English: search _REGEX directori tree for _REGEX file
GT Command 1: find /usr/local/doc -name '*.texi'
Prediction 1: find File -name Pattern (-0.0397586375475)
Prediction 2: find File -type f -name Pattern (-0.445115566254)
Prediction 3: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.553138196468)
Prediction 4: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.635373055935)
Prediction 5: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.669990837574)
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-0.686480402946)
Prediction 7: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -i Pattern {} (-0.696644723415)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.769497871399)
Prediction 9: find File -type f -name Pattern -exec grep Pattern {} \; (-0.782119393349)
Prediction 10: find File -type f -iname Pattern -exec grep Pattern {} \; (-0.78486675024)

Example 186 (1)
Original English: find all the directories in the folder /raid with the extension local_sd_customize.
English: find all directori in folder _REGEX with extens _REGEX
GT Command 1: find /raid -type d -name ".local_sd_customize" -print
Prediction 1: find File -type d -name Pattern (-0.0265983287245)
Prediction 2: find File -type d \( -name Pattern -or -name Pattern \) (-0.443793267012)
Prediction 3: find File -type d \( -name Pattern -prune -or -name Pattern \) -print (-0.477787852287)
Prediction 4: find File -type d \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.501513004303)
Prediction 5: find File -type d \( -name Pattern -prune -or -name Pattern \) (-0.513394415379)
Prediction 6: find File -type d \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.515949487686)
Prediction 7: find File -type d \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.517508029938)
Prediction 8: find File -type d \( -name Pattern -prune -or -type d \) (-0.534257948399)
Prediction 9: find File -type d \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.56151586771)
Prediction 10: find File -type d \( -name Pattern -or -name Pattern \) -print (-0.574537813663)

Example 187 (1)
Original English: Find all HTML files starting with letter 'a' in the current directory and below ignoring the case
English: find all _REGEX file start with letter _REGEX in current directori and below ignor case
GT Command 1: find . -iname a\*.html
Prediction 1: find File -iname Pattern (-0.273201495409)
Prediction 2: find File -iname Pattern -print (-0.415499985218)
Prediction 3: find File -iname Pattern -iname Pattern (-0.428499191999)
Prediction 4: find File -iname Pattern \( -iname Pattern -or -iname Pattern \) -print (-0.433071345091)
Prediction 5: find File -iname Pattern \( -print -or -iname Pattern \) (-0.438018709421)
Prediction 6: find File -iname Pattern \( -print -or -type d \) (-0.441661655903)
Prediction 7: find File -iname Pattern \( -print -or -iname Pattern \) -print (-0.445886313915)
Prediction 8: find File -iname Pattern \( -print -or -name Pattern \) (-0.461191803217)
Prediction 9: find File -iname Pattern \( -print -or -type d -prune \) (-0.466624557972)
Prediction 10: find File -iname Pattern -print0 (-0.528157711029)

Example 188 (1)
Original English: display all the files in the current folder excluding search in the paths containing the folder having the word "mmm"
English: display all file in current folder exclud search in path contain folder have word _REGEX
GT Command 1: find . ! -path *mmm*
Prediction 1: find File \( ! -path File -and ! -path File \) (-0.261590152979)
Prediction 2: find File \( ! -path File -and ! -name Pattern \) (-0.323802113533)
Prediction 3: find File \( -path File -prune -or -print \) (-0.334867209196)
Prediction 4: find File ! -path File ! -path File (-0.335237056017)
Prediction 5: find File ! -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.339155107737)
Prediction 6: find File \( ! -path File -and ! -path File -and ! -path File \) (-0.411391913891)
Prediction 7: find File ! -path File ! -name Pattern (-0.445987582207)
Prediction 8: find File ! \( -path File -prune -or -print \) (-0.45990896225)
Prediction 9: find File ! -path File ! -iname Pattern (-0.464004784822)
Prediction 10: find File \( ! -path File -and ! -name Pattern \) -print (-0.466062217951)

Example 189 (1)
Original English: search for the file in the entire file system which has the words "filename" in its name
English: search for file in entir file system word _REGEX in name
GT Command 1: find / -name ”*filename*”
Prediction 1: find File -name Pattern (-0.113417342305)
Prediction 2: find File -name Pattern -print (-0.406544148922)
Prediction 3: find File -iname Pattern -print (-0.44562792778)
Prediction 4: find File -iname Pattern (-0.679421901703)
Prediction 5: find File -name Pattern -type f -print (-0.737490177155)
Prediction 6: find File -name Pattern -type f (-0.748064696789)
Prediction 7: find File -iname Pattern -type f -print (-0.92250007391)
Prediction 8: find File -name Pattern -name Pattern (-0.982882916927)
Prediction 9: find File -type f -name Pattern (-0.993998587132)
Prediction 10: find File -name Pattern -newer File (-1.00768482685)

Example 190 (1)
Original English: Find all files and directories in the current directory tree with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
English: find all file and directori in current directori tree with _REGEX in name and copi to _REGEX
GT Command 1: find . -iname "*linkin park*" -exec cp -r {} /Users/tommye/Desktop/LP \;
Prediction 1: find File -name Pattern -exec cp {} File \; (-0.276415497065)
Prediction 2: find File -name Pattern | xargs -I {} cp -t File {} (-0.28941193223)
Prediction 3: find File -name Pattern | xargs -I {} cp {} File (-0.290250569582)
Prediction 4: find File -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.294647932053)
Prediction 5: find File -name Pattern | xargs -I {} cp -a -v --target-directory=/home/backup/ --parents {} (-0.36189994216)
Prediction 6: find File -name Pattern | xargs -I {} cp File {} (-0.381511002779)
Prediction 7: find File -name Pattern | xargs -n -1 -I {} cp File {} (-0.402011215687)
Prediction 8: find File -name Pattern -exec grep -l Pattern {} \; (-0.405619680882)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.414128303528)
Prediction 10: find File -iname Pattern -exec cp {} File \; (-0.429168581963)

Example 191 (1)
Original English: Find all *.py files under and below the current directory and search them for "xrange"
English: find all _REGEX file under and below current directori and search for _REGEX
GT Command 1: find . -name '*.py' -exec grep --color 'xrange' {} +
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.139540463686)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.158333703876)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; (-0.195815697312)
Prediction 4: find File -name Pattern -exec grep Pattern {} \; -print (-0.236483246088)
Prediction 5: find File -name Pattern | xargs -I {} grep -r Pattern {} (-0.309069693089)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.325552612543)
Prediction 7: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.328834533691)
Prediction 8: find File -name Pattern -exec grep -r Pattern {} \; (-0.371436148882)
Prediction 9: find File -name Pattern -exec grep -H Pattern {} \; (-0.389213979244)
Prediction 10: find File -name Pattern | xargs -n -2 -I {} grep Pattern {} (-0.394471853971)

Example 192 (2)
Original English: Find all *.csv files under /foo/bar and move them to some_dir
English: find all _REGEX file under _REGEX and move to _REGEX
GT Command 1: find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
GT Command 2: find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.0627154260874)
Prediction 2: find File -name Pattern -exec mv {} File \; (-0.212005913258)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.255315184593)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} mv {} File (-0.287983953953)
Prediction 5: find File -name Pattern | xargs -I {} mv {} File (-0.317773997784)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} mv -t File {} (-0.345162242651)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} chown Pattern {} (-0.351822167635)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.359598278999)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} mv {} File {} (-0.359802484512)
Prediction 10: find File -type f -name Pattern -exec mv {} File \; (-0.371378600597)

Example 193 (1)
Original English: Find all *.tex regular files under current directory
English: find all _REGEX regular file under current directori
GT Command 1: find . -type f -name "*.tex"
Prediction 1: find File -type f -name Pattern (-0.0181672964245)
Prediction 2: find File -maxdepth Number -type f -name Pattern (-0.491859853268)
Prediction 3: find File -name Pattern -type f (-0.601352393627)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern \) -or -type f \) -print (-0.609707415104)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.614727795124)
Prediction 6: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.622714400291)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.626320183277)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.630347967148)
Prediction 9: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.632880926132)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) (-0.63891607523)

Example 194 (1)
Original English: move files accessed more than one day ago to directory TMP
English: move file access more than _NUM day ago to directori _REGEX
GT Command 1: find . -atime +1 -type f -exec mv {} TMP \; # mv files older then 1 day to dir TMP
Prediction 1: find File -atime Time -exec ls -l {} \; (-0.146743953228)
Prediction 2: find File -atime Time -name Pattern -exec ls -l {} \; (-0.169186279178)
Prediction 3: find File -atime Time -exec mv {} File \; (-0.33015871048)
Prediction 4: find File -atime Time -name Pattern -print | xargs -I {} ls -l {} (-0.333666235209)
Prediction 5: find File -atime Time -name Pattern -print | xargs -I {} ls -l -d {} (-0.391327738762)
Prediction 6: find File -atime Time -name Pattern -print | xargs -I {} mv {} File (-0.400054901838)
Prediction 7: find File -atime Time -name Pattern -exec mv {} File \; (-0.401818245649)
Prediction 8: find File -atime Time -name Pattern -print | xargs -r -I {} ls -l -d {} (-0.414865404367)
Prediction 9: find File -atime Time -ok mv {} File \; (-0.42194929719)
Prediction 10: find File -atime Time -name Pattern -print | xargs -r -I {} ls -l {} (-0.429029285908)

Example 195 (1)
Original English: display all the directories in the folder /path/to/dest except tmp and cache directories
English: display all directori in folder _REGEX except tmp and cach directori
GT Command 1: find /path/to/dest -type d \( ! -name tmp \) -o \( ! -name cache \) -print
Prediction 1: find File -type d ! -name Pattern (-0.194197013974)
Prediction 2: find File -type d ! -name Pattern -prune (-0.251979202032)
Prediction 3: find File -type d ! -name Pattern -print (-0.342171370983)
Prediction 4: find File -type d ! \( -name Pattern -prune -or -name Pattern \) -print (-0.429251819849)
Prediction 5: find File -type d ! -wholename Pattern (-0.437318444252)
Prediction 6: find File -type d ! \( -name Pattern -prune -or -print \) (-0.464572042227)
Prediction 7: find File -type d ! -name Pattern ! -name Pattern (-0.497067302465)
Prediction 8: find File -type d ! -empty (-0.507512450218)
Prediction 9: find File -type d ! -perm Permission (-0.509675085545)
Prediction 10: find File -type d ! \( -name Pattern -prune -or -type d \) -print (-0.53751629591)

Example 196 (1)
Original English: find all occurences of a file in the file system which belong to the user root
English: find all occur of file in file system belong to user root
GT Command 1: find / -user root -name FindCommandExamples.txt
Prediction 1: find File -user Pattern -perm Permission (-0.232260778546)
Prediction 2: find File -user Pattern -perm Permission -print (-0.232678234577)
Prediction 3: find File -user Pattern -iname Pattern (-0.286308556795)
Prediction 4: find File -user Pattern -iname Pattern -print (-0.406486779451)
Prediction 5: find File -user Pattern -name Pattern (-0.453388184309)
Prediction 6: find File -user Pattern -name Pattern -print (-0.505925416946)
Prediction 7: find File -user Pattern -user Pattern -print (-0.540605068207)
Prediction 8: find File -user Pattern -print (-0.689576327801)
Prediction 9: find File -user Pattern -user Pattern (-0.71167165041)
Prediction 10: find File -user Pattern -mtime Time (-0.74746465683)

Example 197 (1)
Original English: Find all *.c files under and below the current directory that contain "hogehoge"
English: find all _REGEX file under and below current directori contain _REGEX
GT Command 1: find . -name \*.c | xargs grep hogehoge
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.14730617404)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.153401970863)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.192945659161)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.250785857439)
Prediction 5: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.311892747879)
Prediction 6: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.321686595678)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.3251927495)
Prediction 8: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.335462540388)
Prediction 9: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.346381932497)
Prediction 10: find File -name Pattern -exec grep Pattern {} \; (-0.366857171059)

Example 198 (1)
Original English: search for the word "redeem reward" in all the regular/normal files in the current folder
English: search for word _REGEX in all "regular/normal" file in current folder
GT Command 1: find . -type f -exec grep -i “redeem reward” {} \; -print
Prediction 1: find File -type f -print0 | xargs -0 -I {} grep Pattern {} (-0.174839287996)
Prediction 2: find File -type f -exec grep -H Pattern {} \; (-0.193111360073)
Prediction 3: find File -type f -exec grep Pattern {} \; -print (-0.203752800822)
Prediction 4: find File -type f -exec grep Pattern {} \; (-0.255732089281)
Prediction 5: find File -type f -exec grep -H Pattern {} + (-0.258714646101)
Prediction 6: find File -type f | xargs -I {} grep Pattern {} (-0.260471224785)
Prediction 7: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.292676836252)
Prediction 8: find File -type f -exec grep -q Pattern {} \; -print (-0.322455108166)
Prediction 9: find File -type f -print | xargs -I {} grep Pattern {} (-0.322599738836)
Prediction 10: find File -type f -print0 | xargs -0 -I {} grep -H Pattern {} (-0.324977070093)

Example 199 (1)
Original English: Search the current directory for files whose names start with my
English: search current directori for file whose name start with
GT Command 1: find . -name 'my*'
Prediction 1: find File -name Pattern (-0.0235647093505)
Prediction 2: find File -type f -name Pattern (-0.570678532124)
Prediction 3: find File -maxdepth Number -name Pattern (-0.645996212959)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.746024131775)
Prediction 5: find File -name Pattern -type f (-0.812009096146)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.947550296783)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -name Pattern (-1.07822847366)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -name Pattern -print (-1.09664177895)
Prediction 9: find File -name Pattern -print (-1.11961102486)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -prune (-1.13701653481)

Example 200 (1)
Original English: find all the files in the current directory and print them excluding those that have the name SCCS.
English: find all file in current directori and print exclud name _REGEX
GT Command 1: find . -print -o -name SCCS -prune
Prediction 1: find File \( -name Pattern -prune -or -print \) (-0.268552184105)
Prediction 2: find File \( -path File -prune -or -print \) (-0.30846786499)
Prediction 3: find File -type f \( -name Pattern -prune -or -print \) (-0.36534100771)
Prediction 4: find File -type f \( -name Pattern -prune -or -name Pattern \) -print (-0.375273346901)
Prediction 5: find File -depth \( -name Pattern -prune -or -print \) (-0.381698310375)
Prediction 6: find File -type f -name Pattern ! -name Pattern -print (-0.408608287573)
Prediction 7: find File -type f -name Pattern -not -name Pattern (-0.437995940447)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.440589338541)
Prediction 9: find File -type f -name Pattern ! -name Pattern (-0.444122761488)
Prediction 10: find File -type f -not -name Pattern (-0.447136580944)

Example 201 (1)
Original English: Find files in the current directory tree which have permissions rwx for user and rw for group and others
English: find file in current directori tree permiss rwx for user and rw for group and other
GT Command 1: find . -perm 766
Prediction 1: find File -perm Permission (-0.113093942404)
Prediction 2: find File -perm Permission -exec ls -l {} \; (-0.33670270443)
Prediction 3: find File -perm Permission -print (-0.374134480953)
Prediction 4: find File -perm Permission -type f -exec ls -l {} \; (-0.419719576836)
Prediction 5: find File -type f -perm Permission -exec ls -l {} \; (-0.511128306389)
Prediction 6: find File -type f -perm Permission (-0.555005967617)
Prediction 7: find File -perm Permission | xargs -I {} ls -l -d {} (-0.578453063965)
Prediction 8: find File -type f -perm Permission -print (-0.582490444183)
Prediction 9: find File -perm Permission | xargs -I {} ls -l {} (-0.630079984665)
Prediction 10: find File -perm Permission | head (-0.673531293869)

Example 202 (1)
Original English: Search the current directory tree for regular files whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
English: search current directori tree for regular file whose name match regular express _REGEX
GT Command 1: find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg"
Prediction 1: find File -type f -regex Pattern (-0.220855221152)
Prediction 2: find File -type f \( -name Pattern -or -name Pattern \) (-0.243203058839)
Prediction 3: find File -type f | grep -E Pattern (-0.248578667641)
Prediction 4: find File -type f \( -regex Pattern -and -not -regex Pattern \) (-0.289669960737)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.321797072887)
Prediction 6: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.400400578976)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.437174499035)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.456361502409)
Prediction 9: find File -type f -print | grep -E Pattern (-0.465756058693)
Prediction 10: find File -type f | grep -E -v Pattern (-0.478750914335)

Example 203 (1)
Original English: find all files in the file system whose size is bigger than 3GB
English: find all file in file system whose size bigger than _NUMGB
GT Command 1: find / -size +3G
Prediction 1: find File -size Size (-0.0535548888147)
Prediction 2: find File -size Size -print (-0.385878115892)
Prediction 3: find File -type f -size Size (-0.562870085239)
Prediction 4: find File -size Size -exec ls -l {} \; (-0.740888416767)
Prediction 5: find File -size Size -exec ls -l -h {} \; (-0.75425195694)
Prediction 6: find File -type f -size Size -print (-0.755891621113)
Prediction 7: find File -size Size -exec ls -s -h {} \; (-0.897322356701)
Prediction 8: find File -size Size -exec ls -l -s {} \; (-0.898965060711)
Prediction 9: find File -size Size -exec ls -s -h {} + (-0.934823811054)
Prediction 10: find File -size Size -exec ls -l -h {} + (-0.937807381153)

Example 204 (1)
Original English: display all the files in the current folder which have been modified between two dates
English: display all file in current folder modifi between _NUM date
GT Command 1: find . -newermt “Sep 1 2006” -and \! -newermt “Sep 10 2006”
Prediction 1: find File -newermt Time ! -newermt Time -print (-0.136208191514)
Prediction 2: find File -newermt Time ! -newermt Time -ls (-0.185889497399)
Prediction 3: find File -newermt Time ! -newermt Time ! -newermt Time -print (-0.343442797661)
Prediction 4: find File -newermt Time ! -newermt Time ! -newermt Time -ls (-0.35086274147)
Prediction 5: find File -newermt Time ! -newermt Time ! -newermt Time (-0.467921555042)
Prediction 6: find File -newermt Time -newermt Time ! -newermt Time -ls (-0.469629049301)
Prediction 7: find File -newermt Time -newermt Time ! -newermt Time -print (-0.476951032877)
Prediction 8: find File -newermt Time ! -newermt Time (-0.490174204111)
Prediction 9: find File -newermt Time ! -newermt Time -delete (-0.503067493439)
Prediction 10: find File -mtime Time -newermt Time ! -newermt Time -ls (-0.573674321175)

Example 205 (1)
Original English: dispaly all the empty regular/normal files in the current folder
English: display all empti "regular/normal" file in current folder
GT Command 1: find . -type f -empty
Prediction 1: find File -type f -empty (-0.00881091691554)
Prediction 2: find File -type f -size Size (-0.587452471256)
Prediction 3: find File -type f -size Size -print (-0.874102890491)
Prediction 4: find File -type f -links Number (-1.14365410805)
Prediction 5: find File -type f -printf Pattern (-1.25670146942)
Prediction 6: find File -empty -type f (-1.27626442909)
Prediction 7: find File -type f -newer File (-1.29981815815)
Prediction 8: find File -type f ! -empty (-1.30170857906)
Prediction 9: find File -depth -type f -empty (-1.32773387432)
Prediction 10: find File -type f -empty -print (-1.33093380928)

Example 206 (1)
Original English: Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents
English: find all file under current directori exclud _REGEX file and print file path match case insensit regex _REGEX in content
GT Command 1: find . -not -name '*.png' -o -type f -print | xargs grep -icl "foo="
Prediction 1: find File \( ! -path File -and ! -name Pattern \) (-0.373517423868)
Prediction 2: find File -type f -not -iname Pattern | grep -v Pattern (-0.405693560839)
Prediction 3: find File \( -path File -prune -or -not -regex Pattern \) (-0.417624950409)
Prediction 4: find File -type f ! -iname Pattern ! -iname Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.42259439826)
Prediction 5: find File -type f ! -iname Pattern ! -iname Pattern -print0 | xargs -0 -I {} grep -i -l Pattern {} (-0.425194054842)
Prediction 6: find File \( -path File -prune -or -print \) (-0.425373405218)
Prediction 7: find File \( ! -path File -and ! -path File \) (-0.436113744974)
Prediction 8: find File -type f -not -regex Pattern | grep -v Pattern (-0.447611361742)
Prediction 9: find File -type f -not -path File -not -name Pattern (-0.451951265335)
Prediction 10: find File -type f -not -path File -not -iname Pattern (-0.461645931005)

Example 207 (1)
Original English: delete all the regular files in the temp folder which have not been changed in the last 15*24 hours
English: delet all regular file in temp folder not chang in last _REGEX hour
GT Command 1: find /tmp/ -ctime +15 -type f -exec rm {} \;
Prediction 1: find File -type f -mtime Time -exec rm {} \; (-0.144250899553)
Prediction 2: find File -type f -ctime Time -exec rm {} \; (-0.237924650311)
Prediction 3: find File -type f -ctime Time | xargs -0 -I {} rm {} (-0.289270251989)
Prediction 4: find File -type f -ctime Time | xargs -I {} rm {} (-0.318431079388)
Prediction 5: find File -type f -mtime Time | xargs -I {} rm {} (-0.328090578318)
Prediction 6: find File -type f -ctime Time -exec rm -f {} \; (-0.344358474016)
Prediction 7: find File -type f -mtime Time -delete (-0.386565864086)
Prediction 8: find File -type f -atime Time -exec rm {} \; (-0.40472060442)
Prediction 9: find File -type f -daystart -mtime Time -exec rm {} \; (-0.408738315105)
Prediction 10: find File -type f -ctime Time -delete (-0.43505436182)

Example 208 (1)
Original English: Only find files ending with .jpg
English: onli find file end with _REGEX
GT Command 1: find . -name '*.jpg' -print
Prediction 1: find File -name Pattern (-0.135001987219)
Prediction 2: find File -name Pattern -name Pattern (-0.393161147833)
Prediction 3: find File -name Pattern -type f (-0.396806955338)
Prediction 4: find File -name Pattern -type f -print (-0.566615343094)
Prediction 5: find File -name Pattern -type f -name Pattern (-0.602367281914)
Prediction 6: find File -name Pattern -name Pattern -print (-0.636289834976)
Prediction 7: find File -name Pattern -print (-0.643530488014)
Prediction 8: find File -name Pattern -printf Pattern (-0.740960776806)
Prediction 9: find File -name Pattern -type f -name Pattern -print (-0.775527000427)
Prediction 10: find File -name Pattern -prune (-0.78544485569)

Example 209 (1)
Original English: find all the files in the current folder which have a specific word in their name
English: find all file in current folder specif word in name
GT Command 1: find . -name '*foo*'
Prediction 1: find File -name Pattern (-0.0480012781918)
Prediction 2: find File -iname Pattern (-0.544313013554)
Prediction 3: find File -type f -name Pattern (-0.621341526508)
Prediction 4: find File -type f -iname Pattern (-0.8757584095)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.889568090439)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.900376677513)
Prediction 7: find File -name Pattern -print (-0.905227005482)
Prediction 8: find File -type f -iname Pattern -print (-0.944122314453)
Prediction 9: find File -print | grep Pattern (-1.03320837021)
Prediction 10: find File -iname Pattern -print (-1.06905436516)

Example 210 (1)
Original English: Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE.*CPAN'
English: find all file name _REGEX in _REGEX directori tree and count number of line in match regular express _REGEX
GT Command 1: find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE.*CPAN' '{}' '+' | wc -l
Prediction 1: find File -name Pattern -exec grep Pattern {} + | wc -l (-0.270434528589)
Prediction 2: find File -name Pattern | xargs -I {} wc -l {} (-0.27659869194)
Prediction 3: find File -name Pattern | wc -l (-0.289255619049)
Prediction 4: find File -name Pattern -exec grep Pattern {} \; | wc -l (-0.308938533068)
Prediction 5: find File -name Pattern -exec grep Pattern {} \; -print | wc -l (-0.311976373196)
Prediction 6: find File -name Pattern -exec grep -l Pattern {} \; | wc -l (-0.330046802759)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} wc -l {} (-0.331010341644)
Prediction 8: find File -name Pattern -exec wc -l {} \; (-0.336582452059)
Prediction 9: find File -name Pattern -exec grep Pattern {} \; -print (-0.348493248224)
Prediction 10: find File -name Pattern | xargs -I {} grep Pattern {} (-0.368617922068)

Example 211 (1)
Original English: To list the number of directories in the `/usr/share' directory tree
English: list number of directori in _REGEX directori tree
GT Command 1: find /usr/share \! -type f | wc -l
Prediction 1: find File -type d | wc -l (-0.0841377750039)
Prediction 2: find File -type d -exec ls -l -d {} \; (-0.239578649402)
Prediction 3: find File -type d | xargs -I {} ls -l -d {} (-0.282482534647)
Prediction 4: find File -type d -exec ls -l {} \; (-0.34399998188)
Prediction 5: find File -type d -exec ls -d -l -r -t {} \; (-0.382296293974)
Prediction 6: find File -type d -print0 | xargs -0 -I {} ls -l -d {} (-0.383760929108)
Prediction 7: find File -type d | wc -c (-0.434539347887)
Prediction 8: find File -type d | xargs -I {} wc -l {} (-0.445202857256)
Prediction 9: find File -type d -exec ls -d -l -r -t {} \; | wc --lines (-0.457366347313)
Prediction 10: find File -type d -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.538269281387)

Example 212 (1)
Original English: Find all files/directories named file1 in maximum 2 levels down the current directory
English: find all "files/directories" name _REGEX in maximum _NUM level down current directori
GT Command 1: find -maxdepth 2 -name file1
Prediction 1: find File -maxdepth Number -name Pattern (-0.0311926249415)
Prediction 2: find File -mindepth Number -maxdepth Number -name Pattern (-0.467924177647)
Prediction 3: find File -maxdepth Number -name Pattern -print0 (-0.539425730705)
Prediction 4: find File -maxdepth Number -mindepth Number -name Pattern (-0.578630745411)
Prediction 5: find File -maxdepth Number \( -name Pattern -prune -or -name Pattern \) (-0.592812657356)
Prediction 6: find -L File -maxdepth Number -name Pattern (-0.597671747208)
Prediction 7: find File -maxdepth Number \( -name Pattern -prune -or -name Pattern \) -print (-0.597805738449)
Prediction 8: find File -maxdepth Number \( -name Pattern -or -name Pattern \) (-0.606204748154)
Prediction 9: find File -maxdepth Number -maxdepth Number -name Pattern (-0.609991371632)
Prediction 10: find File -maxdepth Number -iname Pattern (-0.733411073685)

Example 213 (1)
Original English: Find recursively all files changed within the last 5 minutes starting from directory b
English: find recurs all file chang within last _NUM minut start from directori b
GT Command 1: find b -cmin -5
Prediction 1: find File -cmin Number -print (-0.195462673903)
Prediction 2: find File -cmin Number (-0.359771490097)
Prediction 3: find File -cmin Number | xargs -I {} ls -l -d {} (-0.370817691088)
Prediction 4: find File -cmin Number | xargs -I {} ls -l -t -r {} | tail -n Number (-0.4540797472)
Prediction 5: find File -cmin Number | xargs -I {} ls -l -S -h {} (-0.46583122015)
Prediction 6: find File -cmin Number | xargs -I {} ls -l {} (-0.466153234243)
Prediction 7: find File -cmin Number | xargs -I {} (-0.48336482048)
Prediction 8: find File -cmin Number | xargs -I {} ls -l -t -r {} | head -n Number (-0.51256942749)
Prediction 9: find File -cmin Number -print | xargs -I {} ls -l -d {} (-0.519736409187)
Prediction 10: find File -cmin Number | xargs -I {} ls -l -t -r {} (-0.555158555508)

Example 214 (1)
Original English: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the files that contain 'generated' or 'deploy' in their paths
English: list all "files/directories" under current directori match posix-egrep type regex _PARAMET in name exclud file contain _REGEX or _REGEX in path
GT Command 1: find . -regextype posix-egrep -regex '.+\.(c|cpp|h)$' -print0 | grep -vzZ generated | grep -vzZ deploy | xargs -0 ls -1Ld
Prediction 1: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -print0 | xargs -0 -I {} grep -l Pattern {} (-0.36850887537)
Prediction 2: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.370983988047)
Prediction 3: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) \) -exec ls -l {} \; (-0.372128814459)
Prediction 4: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -exec ls -l {} \; (-0.376844197512)
Prediction 5: find File \( -path File -prune -or \( -type f -and -mtime Time -and -print0 \) \) | xargs -0 -I {} grep -l Pattern {} (-0.387074798346)
Prediction 6: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) -or -mtime Time \) -exec ls -l {} \; (-0.388319790363)
Prediction 7: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -printf Pattern | xargs -I {} ls -l {} (-0.388885855675)
Prediction 8: find File \( -path File -prune -or \( -type f -and -print0 \) \) | xargs -0 -I {} grep -l Pattern {} (-0.390900671482)
Prediction 9: find File \( -path File -prune -or \( -type f -and \( -name Pattern -or -name Pattern \) -or -mtime Time \) -printf Pattern | xargs -I {} ls -l {} (-0.397283762693)
Prediction 10: find File \( -path File -prune -or \( -type f -and -name Pattern \) -or -mtime Time \) -printf Pattern | xargs -I {} rm {} (-0.405535191298)

Example 215 (2)
Original English: List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
English: list all "files/directories" under current directori match posix-egrep type regex _PARAMET in name
GT Command 1: find . -regextype posix-egrep -regex ".+\.(c|cpp|h)$" -print0 | xargs -0 -n 1 ls
GT Command 2: find . -regextype posix-egrep -regex ".+\.(c|cpp|h)$" | xargs -n 1 ls
Prediction 1: find File \( -regex Pattern -and -not -regex Pattern \) (-0.280983328819)
Prediction 2: find File \( -path File -prune -or -print \) (-0.336841911077)
Prediction 3: find File -regextype Pattern -regex Pattern (-0.342223495245)
Prediction 4: find File \( -path File -prune -or \( -type f -and -print0 \) \) (-0.469730108976)
Prediction 5: find File \( -regex Pattern -or -not -regex Pattern \) (-0.478931039572)
Prediction 6: find File \( -path File -prune -or -nouser -or -nogroup \) (-0.495544701815)
Prediction 7: find File \( -path File -prune -or \( -type f -or -name Pattern \) -or -type d \) -printf Pattern (-0.537459254265)
Prediction 8: find File \( -path File -prune -or \( -type f -or -name Pattern \) -or -type f \) -ls (-0.537959337234)
Prediction 9: find File \( -path File -prune -or \( -type f -or -type l \) -maxdepth Number ! -perm Permission \) (-0.541094601154)
Prediction 10: find File \( -path File -prune -or \( -type f -or -name Pattern \) -or -type l \) -maxdepth Number ! -perm Permission (-0.558238267899)

Example 216 (1)
Original English: find all the files ending with .mp3 or .jpg
English: find all file end with _REGEX or _REGEX
GT Command 1: find . \( -name '*.mp3' -o -name '*.jpg' \) -print
Prediction 1: find File -name Pattern | grep -v Pattern (-0.255289256573)
Prediction 2: find File -name Pattern | grep -E Pattern (-0.284436732531)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.316073447466)
Prediction 4: find File -name Pattern | grep Pattern (-0.326035141945)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.358157366514)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.383036345243)
Prediction 7: find File -name Pattern | grep -P Pattern (-0.411632150412)
Prediction 8: find File -name Pattern -print0 | xargs -r -0 -I {} grep -L Pattern {} (-0.412015885115)
Prediction 9: find File -name Pattern -print0 | xargs -r -0 -I {} grep Pattern {} (-0.417248338461)
Prediction 10: find File \( -name Pattern -or -name Pattern \) (-0.43396872282)

Example 217 (1)
Original English: Search the current directory tree for *bash* files
English: search current directori tree for _REGEX file
GT Command 1: find . -name "*bash*"
Prediction 1: find File -name Pattern (-0.041108764708)
Prediction 2: find File -type f -name Pattern (-0.522234499454)
Prediction 3: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.607399940491)
Prediction 4: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.653384804726)
Prediction 5: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.656598746777)
Prediction 6: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.716891765594)
Prediction 7: find File -iname Pattern (-0.719055116177)
Prediction 8: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -i Pattern {} (-0.72486114502)
Prediction 9: find File \( -name Pattern -or -name Pattern \) (-0.796034872532)
Prediction 10: find File -type f -iname Pattern -exec grep -H Pattern {} \; (-0.803292572498)

Example 218 (1)
Original English: display all the files in the current folder that are at least one week old (7 days) but less then 30 days old
English: display all file in current folder at least _NUM week old but less _NUM day old
GT Command 1: find . -mtime +30 -a -mtime -7 -print0
Prediction 1: find File \( -mtime Time -and -mtime Time -and -mtime Time \) (-0.366128593683)
Prediction 2: find File \( -mtime Time -and -mtime Time -and ! -name Pattern \) (-0.408259123564)
Prediction 3: find File \( -mtime Time -and -mtime Time -and ! -path File \) (-0.472388744354)
Prediction 4: find File \( -mtime Time -and -mtime Time -and -print0 \) \) (-0.486935526133)
Prediction 5: find File \( -mtime Time -and -mtime Time -and -mtime Time \) -printf Pattern (-0.487009853125)
Prediction 6: find File \( -mtime Time -and -atime Time -and -mtime Time \) (-0.499639600515)
Prediction 7: find File \( -mtime Time -and -mtime Time \) (-0.515273928642)
Prediction 8: find File \( -mtime Time -and -mtime Time -and -print0 \) (-0.517561495304)
Prediction 9: find File \( -mtime Time -and -mtime Time -and ! -name Pattern \) -print (-0.523851454258)
Prediction 10: find File \( -mtime Time -and -mtime Time -and -mtime Time \) -print0 (-0.548783183098)

Example 219 (1)
Original English: find all the directories in the entire file system whose size is greater than 50KB
English: find all directori in entir file system whose size greater than _NUMKB
GT Command 1: find / -type d -size +50k
Prediction 1: find File -type d -size Size (-0.0194966401905)
Prediction 2: find File -type d -name Pattern (-0.647271215916)
Prediction 3: find File -type d -size Size -print (-0.723579645157)
Prediction 4: find File -type f -size Size (-0.798664748669)
Prediction 5: find File -type d -type f -size Size (-0.816544413567)
Prediction 6: find File -type d -empty (-0.846934497356)
Prediction 7: find File -type d -printf Pattern (-0.873747348785)
Prediction 8: find File -type d -name Pattern -size Size (-0.883135676384)
Prediction 9: find File -type d -iname Pattern (-1.0029374361)
Prediction 10: find File -type d -mtime Time (-1.03382587433)

Example 220 (1)
Original English: Find *test* files/directories under current directory ensuring  that a directory is evaluated before its contents
English: find _REGEX "files/directories" under current directori ensur directori evalu befor content
GT Command 1: find -name "*test*" -depth
Prediction 1: find File -name Pattern -print0 (-0.230517357588)
Prediction 2: find File -name Pattern (-0.367650300264)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.415297091007)
Prediction 4: find File -name Pattern -printf Pattern (-0.415893435478)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} cp File {} (-0.42463350296)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.433462351561)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} chown Pattern {} (-0.469559520483)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.473056674004)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.487111240625)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} cp {} File {} (-0.553325355053)

Example 221 (1)
Original English: search for *.log files starting from /
English: search for _REGEX file start from "/"
GT Command 1: find / -name "*.log"
Prediction 1: find File -name Pattern (-0.0120232608169)
Prediction 2: find File -iname Pattern (-0.908661067486)
Prediction 3: find File -type f -name Pattern (-0.937037289143)
Prediction 4: find File -name Pattern -print (-0.951025664806)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.97048407793)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-1.01523005962)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -print (-1.0603312254)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-1.06705844402)
Cannot parse: grep Pattern $( find File -name Pattern \) - MatchedPairError
Prediction 9: grep Pattern $( find File -name Pattern \)  (-1.10266232491)
Prediction 10: find File \( -name Pattern -or -name Pattern \) {} \; -print (-1.15268051624)

Example 222 (1)
Original English: force delete all the directories in a folder which  have a specific name
English: forc delet all directori in folder specif name
GT Command 1: find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
Prediction 1: find File -type d -name Pattern | xargs -I {} rm -r -f {} (-0.0847872495651)
Prediction 2: find File -name Pattern -type d | xargs -I {} rm -r -f {} (-0.180636838078)
Prediction 3: find File -type d -name Pattern | xargs -I {} rm -f {} (-0.206785187125)
Prediction 4: find File -type d -name Pattern | xargs -I {} rm -r -v -f {} (-0.223838552833)
Prediction 5: find File -type d -name Pattern | xargs -I {} rm {} (-0.241940200329)
Prediction 6: find File -type d -name Pattern -exec rm -r -f {} \; (-0.258616954088)
Prediction 7: find File -type d -name Pattern -exec rm -f {} \; (-0.259916990995)
Prediction 8: find File -type d -name Pattern | xargs -0 -I {} rm -r -f {} (-0.274140059948)
Prediction 9: find File -name Pattern -type d | xargs -I {} rm -f {} (-0.320371329784)
Prediction 10: find File -name Pattern -type d | xargs -I {} rm {} (-0.320573836565)

Example 223 (1)
Original English: Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'
English: count number of file in _REGEX directori tree whose name begin with _REGEX and contain _REGEX
GT Command 1: find /usr/ports/ -name pkg-plist\* -exec grep 'unexec.rmdir %D' '{}' '+' | wc -l
Prediction 1: find File -name Pattern | wc -l (-0.172866985202)
Prediction 2: find File -name Pattern -exec wc -l {} \; (-0.218267068267)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; | wc -l (-0.231383502483)
Prediction 4: find File -name Pattern -exec grep -l Pattern {} \; | wc -l (-0.25800678134)
Prediction 5: find File -name Pattern | xargs -I {} wc -l {} (-0.282937020063)
Prediction 6: find File -name Pattern -exec grep -H Pattern {} \; | wc -l (-0.307287156582)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} wc -l {} (-0.332792967558)
Prediction 8: find File -name Pattern -exec grep Pattern {} + | wc -l (-0.340132504702)
Prediction 9: find File -name Pattern -exec grep Pattern {} \; -print | wc -l (-0.344076007605)
Prediction 10: find File -name Pattern | xargs -I {} grep Pattern {} | wc -l (-0.367766112089)

Example 224 (1)
Original English: To match only hidden dot directories
English: match onli hidden dot directori
GT Command 1: find /nas01/backups/home/user/ -type d -name ".*" -print0 -exec ls -lrt {} \;
Prediction 1: find File -maxdepth Number -type d (-0.242953762412)
Prediction 2: find File -maxdepth Number -type f (-0.411610633135)
Prediction 3: find File -maxdepth Number -type d -printf Pattern (-0.424735099077)
Prediction 4: find File -type f -not -name Pattern (-0.468030512333)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.53685104847)
Prediction 6: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.543942511082)
Prediction 7: find File -maxdepth Number -type f -printf Pattern (-0.546282589436)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.572911381721)
Prediction 9: find File -maxdepth Number -type f -name Pattern (-0.573980271816)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) (-0.591268062592)

Example 225 (1)
Original English: Find files that are 0 bytes in size in the current directory tree and remove them
English: find file _NUM byte in size in current directori tree and remov
GT Command 1: find . -size 0 -exec rm {} \;
Prediction 1: find File -type f -size Size -exec rm {} \; (-0.159499853849)
Prediction 2: find File -size Size -exec rm {} \; (-0.198040649295)
Prediction 3: find File -type f -name Pattern -size Size -exec rm {} \; (-0.285298138857)
Prediction 4: find File -size Size -ok rm {} \; (-0.337186217308)
Prediction 5: find File -type f -size Size -exec rm -f {} \; (-0.350419729948)
Prediction 6: find File -type f -size Size -printf Pattern | xargs -0 -I {} rm {} (-0.36771890521)
Prediction 7: find File -name Pattern -size Size -exec rm {} \; (-0.36926522851)
Prediction 8: find File -type f -size Size -printf Pattern | xargs -I {} rm {} (-0.392108410597)
Prediction 9: find File -size Size -exec rm -r -f {} \; (-0.413944870234)
Prediction 10: find File -depth -size Size -exec rm {} \; (-0.455575197935)

Example 226 (1)
Original English: display all pdf files in the current folder
English: display all pdf file in current folder
GT Command 1: find . -name *.pdf
Prediction 1: find File -name Pattern (-0.0335840210319)
Prediction 2: find File -type f -name Pattern (-0.547459363937)
Prediction 3: find File -name Pattern -print (-0.714549958706)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.740112006664)
Prediction 5: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.746936619282)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.776758790016)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.780122756958)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.790216803551)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) (-0.794965803623)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.796100080013)

Example 227 (1)
Original English: find all the files which are of size 0 bytes.
English: find all file of size _NUM byte
GT Command 1: find . -type f -empty
Prediction 1: find File -size Size (-0.0138972448185)
Prediction 2: find File -size Size -print (-0.659992814064)
Prediction 3: find File -type f -size Size (-0.786884248257)
Prediction 4: find File -size Size -size Size (-1.01310610771)
Prediction 5: find File -size Size -exec ls -l {} \; (-1.01835668087)
Prediction 6: find File -size Size -exec ls -l -h {} \; (-1.05136084557)
Prediction 7: find File -size Size -printf Pattern (-1.1474750042)
Prediction 8: find File -size Size -size Size -print (-1.17856693268)
Prediction 9: find File -type f -size Size -print (-1.20046186447)
Prediction 10: find File -size Size -exec ls -s {} \; (-1.23828530312)

Example 228 (1)
Original English: find all the perl files in /var/www
English: find all perl file in _REGEX
GT Command 1: find /var/www/ -type f -name "*.pl" -print
Prediction 1: find File -type f -name Pattern (-0.109209306538)
Prediction 2: find File -type f -iname Pattern -print (-0.228065475821)
Prediction 3: find File -type f -iname Pattern (-0.428156226873)
Prediction 4: find File -type f -name Pattern -print (-0.562945723534)
Prediction 5: find File -type f -iname Pattern -ls (-0.586717903614)
Prediction 6: find File -name Pattern -type f (-0.666904985905)
Prediction 7: find File -type f -regex Pattern (-0.702040731907)
Prediction 8: find File -type f -perm Permission -print (-0.769216418266)
Prediction 9: find File -name Pattern (-0.782285690308)
Prediction 10: find File -type f -perm Permission (-0.809861004353)

Example 229 (1)
Original English: find regular files in the current directory, without descending into sub-directories and display as a null separated list.
English: find regular file in current directori without descend into sub-directori and display as null separ list
GT Command 1: find -maxdepth 1 -type f -printf '%f\000'
Prediction 1: find File -maxdepth Number -type f -printf Pattern (-0.291515171528)
Prediction 2: find File -maxdepth Number -type f -print0 (-0.356843739748)
Prediction 3: find File -maxdepth Number -type f ! -newer File (-0.363038957119)
Prediction 4: find File -maxdepth Number -type f -newer File (-0.383848190308)
Prediction 5: find File -maxdepth Number -type f ! -perm Permission (-0.4094170928)
Prediction 6: find File -maxdepth Number -type f ! -newermt Time (-0.450820326805)
Prediction 7: find -x File -maxdepth Number -type f -printf Pattern (-0.484500408173)
Prediction 8: find File -maxdepth Number -type f (-0.509517788887)
Prediction 9: find -x File -maxdepth Number -type f -print0 (-0.520150184631)
Prediction 10: find -L File -maxdepth Number -type f (-0.532363712788)

Example 230 (1)
Original English: find the count of text files that are present in the current working directory.
English: find count of text file present in current work directori
GT Command 1: find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
Prediction 1: find File -name Pattern -printf Pattern | wc -c (-0.169955208898)
Prediction 2: find File -name Pattern -type f | wc -l (-0.262944668531)
Prediction 3: find File -type f -name Pattern | wc -l (-0.276364415884)
Prediction 4: find File -name Pattern | wc -l (-0.29400241375)
Prediction 5: find File -name Pattern -printf Pattern | xargs -I {} wc -c {} (-0.321168273687)
Prediction 6: find File -type f -name Pattern -printf Pattern | wc -c (-0.330503493547)
Prediction 7: find File -name Pattern -type f -printf Pattern | wc -c (-0.350810289383)
Prediction 8: find File -name Pattern -printf Pattern | sort -n -r | head -n Number (-0.391986101866)
Prediction 9: find File -name Pattern | wc -c (-0.425143867731)
Prediction 10: find File -name Pattern -printf Pattern | xargs -I {} wc -l {} (-0.446428269148)

Example 231 (1)
Original English: Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path
English: find file with _NUM permiss in entir file system and print with string _REGEX append after everi path
GT Command 1: find / -type f -perm -002 -printf '%p has world write permissions\n'
Prediction 1: find File -perm Permission -type f -exec ls -l {} \; (-0.205350741744)
Prediction 2: find File -type f -perm Permission -print (-0.264242559671)
Prediction 3: find File -type f -perm Permission -exec ls -l {} \; (-0.340525180101)
Prediction 4: find File -perm Permission -type f | xargs -I {} ls -l {} (-0.342988371849)
Prediction 5: find File -perm Permission -type f -perm Permission -print (-0.345379143953)
Prediction 6: find File -perm Permission -type f | xargs -I {} ls -l -S -h {} (-0.347333550453)
Prediction 7: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l -S -h {} (-0.368132352829)
Prediction 8: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l {} (-0.382377415895)
Prediction 9: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.399810940027)
Prediction 10: find File -type f -perm Permission -perm Permission -print (-0.426335692406)

Example 232 (2)
Original English: Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
English: remov _REGEX file from current directori whose name match regular express _REGEX
GT Command 1: find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg" -exec rm -rf {} \;
GT Command 2: find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg" | xargs rm
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.136225521564)
Prediction 2: find File -name Pattern -exec rm -f {} \; (-0.22046007216)
Prediction 3: find File -regex Pattern -exec rm {} \; (-0.241157189012)
Prediction 4: find File -name Pattern | xargs -n -1 -I {} rm {} (-0.315618604422)
Prediction 5: find File -name Pattern | xargs -I {} rm -f {} (-0.318976849318)
Prediction 6: find File -type f -name Pattern -exec rm -f {} \; (-0.326647847891)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -exec rm {} \; (-0.329186111689)
Prediction 8: find File -regex Pattern | xargs -I {} rm {} (-0.3486777246)
Prediction 9: find File -name Pattern -exec rm {} \; (-0.366062492132)
Prediction 10: find File -regex Pattern -exec rm -f {} \; (-0.395818293095)

Example 233 (1)
Original English: Find mysong.ogg anywhere under the home directory
English: find _REGEX anywher under home directori
GT Command 1: find $HOME -name 'mysong.ogg'
Prediction 1: find File -name Pattern (-0.0329086743295)
Prediction 2: find File -iname Pattern (-0.695780515671)
Prediction 3: find File -name Pattern -type f (-0.699261963367)
Prediction 4: find File -type f -name Pattern (-0.849289238453)
Prediction 5: find File -name Pattern -printf Pattern (-0.989668548107)
Prediction 6: find File File -name Pattern (-1.00444948673)
Prediction 7: find File -type d -name Pattern (-1.02742958069)
Prediction 8: find File -type c -name Pattern (-1.0519772768)
Prediction 9: find File -type s -name Pattern (-1.09186828136)
Prediction 10: find File -name Pattern -type d (-1.11491000652)

Example 234 (1)
Original English: Print the list of all directories under the current directory and below
English: print list of all directori under current directori and below
GT Command 1: find ./ -type d -print
Prediction 1: find File -type d (-0.018611330539)
Prediction 2: find File -type d -exec ls -d -l -r -t {} \; (-0.539406478405)
Prediction 3: find File -type d | xargs -I {} ls -l -d {} (-0.586019814014)
Prediction 4: find File -type d -exec ls -l -d {} \; (-0.592665076256)
Prediction 5: find File -type d | xargs -I {} ls -d -l -r -t {} | tail -n Number (-0.609219491482)
Prediction 6: find File -type d | xargs -I {} ls -d -l -r -t -c {} | tail -n Number (-0.650806605816)
Prediction 7: find File -type d | xargs -I {} ls -d -l -r -t {} | head -n Number (-0.667044818401)
Prediction 8: find File -type d | xargs -I {} ls -d -l -r -c {} | tail -n Number (-0.677334547043)
Prediction 9: find File -type d | xargs -I {} ls -d -l -r -t {} (-0.716986954212)
Prediction 10: find File -type d | xargs -I {} ls -d -l -d {} (-0.722817420959)

Example 235 (1)
Original English: find all regular/normal files in a folder whose size is less than 50 bytes
English: find all "regular/normal" file in folder whose size less than _NUM byte
GT Command 1: find /usr/bin -type f -size -50c
Prediction 1: find File -type f -size Size (-0.00771732116118)
Prediction 2: find File -size Size -type f (-0.78906661272)
Prediction 3: find File -type f -size Size -print (-0.799165546894)
Prediction 4: find File -type f -empty (-0.99398291111)
Prediction 5: find File -type f -newer File (-1.04137051105)
Prediction 6: find File -type f -uid Pattern (-1.07459628582)
Prediction 7: find File -type f -links Number (-1.08133089542)
Prediction 8: find File -type f -printf Pattern (-1.13963353634)
Prediction 9: find File -type type_descriptor -size Size (-1.14951992035)
Prediction 10: find File -size Size -type f -print (-1.25091683865)

Example 236 (1)
Original English: find all regular/normal files in a folder which have specific permission
English: find all "regular/normal" file in folder specif permiss
GT Command 1: find /data -type f -perm 400 -print
Prediction 1: find File -type f -perm Permission (-0.102859474719)
Prediction 2: find File -perm Permission -type f (-0.255834639072)
Prediction 3: find File -type f -perm Permission -print (-0.344629198313)
Prediction 4: find File -perm Permission -type f -print (-0.507149577141)
Prediction 5: find File -perm Permission (-0.607205033302)
Prediction 6: find File -perm Permission -type f -exec ls -l {} \; (-0.707838118076)
Prediction 7: find File -perm Permission -print (-0.732904493809)
Prediction 8: find File -perm Permission -type f -perm Permission -print (-0.938508033752)
Prediction 9: find File -perm Permission -type f -perm Permission (-0.968208253384)
Prediction 10: find File -type f ! -perm Permission (-1.00859951973)

Example 237 (1)
Original English: search for mp3 files in the folder /mp3collection which are smaller than 5MB
English: search for _REGEX file in folder _REGEX smaller than _NUMMB
GT Command 1: find /mp3collection -name '*.mp3' -size -5000k
Prediction 1: find File -size Size -iname Pattern (-0.135426014662)
Prediction 2: find File -name Pattern -size Size (-0.277384608984)
Prediction 3: find File -iname Pattern -size Size (-0.331865757704)
Prediction 4: find File -name Pattern -size Size -print (-0.454315871)
Prediction 5: find File -size Size -name Pattern (-0.523126661777)
Prediction 6: find File \( -name Pattern -and -size Size \) (-0.56296145916)
Prediction 7: find File -type f -size Size -iname Pattern (-0.595835626125)
Prediction 8: find File -iname Pattern -size Size -print (-0.649525046349)
Prediction 9: find File File -size Size -iname Pattern (-0.660397529602)
Prediction 10: find File -size Size -iname Pattern -print (-0.706402242184)

Example 238 (1)
Original English: Return a list of files newer than file poop
English: return list of file newer than file poop
GT Command 1: find . -mnewer poop
Prediction 1: find File -newer File (-0.0345578342676)
Prediction 2: find File -newer File -print (-0.420707404613)
Prediction 3: find File -newer File -exec ls -l {} \; (-0.838036298752)
Prediction 4: find File -newer File -exec ls -l -d {} \; (-1.05295169353)
Prediction 5: find File -newer File -exec ls -l -h {} \; (-1.12604153156)
Prediction 6: find File -newer File -user Pattern -print (-1.15952730179)
Prediction 7: find File -newer File -user Pattern (-1.33077275753)
Prediction 8: find File -newer File -newer File (-1.38944196701)
Prediction 9: find File -newer File -exec ls -l {} + (-1.40033555031)
Prediction 10: find File -type f -newer File (-1.42428731918)

Example 239 (1)
Original English: find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.
English: find all normal file in home directori access in last _NUM day with size greater than or equal to _NUMK
GT Command 1: find $HOME -type f -atime +30 -size 100k
Prediction 1: find File -type f -atime Time -exec ls -l {} \; (-0.135162770748)
Prediction 2: find File -type f -atime Time -print (-0.245152488351)
Prediction 3: find File -type f -atime Time (-0.281603842974)
Prediction 4: find File -type f -atime Time -size Size -print (-0.390043705702)
Prediction 5: find File -type f -atime Time -amin Number (-0.404792100191)
Prediction 6: find File -type f -atime Time -ok ls -l {} \; (-0.439053833485)
Prediction 7: find File -type f -atime Time | xargs -I {} ls -l -d {} (-0.439373910427)
Prediction 8: find File -type f -atime Time -exec ls \; (-0.475920259953)
Prediction 9: find File -type f -atime Time -print0 (-0.484479576349)
Prediction 10: find File -type f -atime Time | xargs -I {} ls -l {} (-0.488205879927)

Example 240 (1)
Original English: Find all directories on the system whose size is greater than 50k
English: find all directori on system whose size greater than _NUMK
GT Command 1: find / -type d -size +50k
Prediction 1: find File -type d -size Size (-0.0389125943184)
Prediction 2: find File -type d -empty (-0.504678368568)
Prediction 3: find File -type f -size Size (-0.670349776745)
Prediction 4: find File -type d -name Pattern (-0.780689179897)
Prediction 5: find File -type d -size Size -print (-0.804595530033)
Prediction 6: find File -type d -printf Pattern (-0.841002702713)
Prediction 7: find File -type c -size Size (-0.844497621059)
Prediction 8: find File -type s -size Size (-0.884718418121)
Prediction 9: find File -type d -links Number (-0.912185192108)
Prediction 10: find File -type l -size Size (-0.92458075285)

Example 241 (2)
Original English: find all files in a folder that have a specific word in their name
English: find all file in folder specif word in name
GT Command 1: find /etc -iregex '.*xt.*'
GT Command 2: find /usr/local/games -name "*xpilot*"
Prediction 1: find File -name Pattern (-0.0583753697574)
Prediction 2: find File -type f -name Pattern (-0.47901904583)
Prediction 3: find File -iname Pattern (-0.552831411362)
Prediction 4: find File -type f -iname Pattern (-0.753779709339)
Prediction 5: find File -type f -iname Pattern -print (-0.881398439407)
Prediction 6: find File -name Pattern -print (-0.911058723927)
Prediction 7: find File \( -name Pattern -or -name Pattern \) (-0.948348283768)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.965386688709)
Prediction 9: find File -print | grep Pattern (-0.985711872578)
Prediction 10: find File -type f -name Pattern -print (-1.07825255394)

Example 242 (1)
Original English: search for the file, filename.txt in the current folder ( case insensitive search )
English: search for file _REGEX in current folder
GT Command 1: find . -iname filename.txt
Prediction 1: find File -name Pattern (-0.0181535426527)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.760266363621)
Prediction 3: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.770720303059)
Prediction 4: find File -iname Pattern (-0.807084083557)
Prediction 5: find File -name Pattern | xargs -I {} grep Pattern {} (-0.811177015305)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.827098846436)
Prediction 7: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.844155132771)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.871923625469)
Prediction 9: find File \( -name Pattern -prune -or -name Pattern \) (-0.883636593819)
Prediction 10: find File -iname Pattern -print (-0.900439083576)

Example 243 (1)
Original English: Search for *pattern* in and below current directory
English: search for _REGEX in and below current directori
GT Command 1: find -name "*pattern*"
Prediction 1: find File -name Pattern -prune (-0.226991698146)
Prediction 2: find File -name Pattern (-0.251050323248)
Prediction 3: find File -name Pattern \( -type d -prune -or -name Pattern \) -print (-0.429363369942)
Cannot parse: grep Pattern $( find File -name Pattern \) - MatchedPairError
Prediction 4: grep Pattern $( find File -name Pattern \)  (-0.487556070089)
Prediction 5: find File -name Pattern -print (-0.498498976231)
Prediction 6: find File -name Pattern \( -print -or -type d -prune \) (-0.518707156181)
Prediction 7: find File -name Pattern \( -type d -prune -or -name Pattern \) (-0.542183160782)
Prediction 8: find File -name Pattern \( -print -or -type d -prune -name Pattern \) (-0.586985647678)
Prediction 9: find File -name Pattern -type f (-0.622140705585)
Prediction 10: find File -name Pattern \( -print -or -type d -prune -name Pattern \) -print (-0.634718775749)

Example 244 (1)
Original English: List all .svn files/directories under current directory
English: list all _REGEX "files/directories" under current directori
GT Command 1: find . -name .svn -exec ls {} \;
Prediction 1: find File -name Pattern | xargs -I {} ls -l {} (-0.215649649501)
Prediction 2: find File -name Pattern -exec ls -l {} \; (-0.223847463727)
Prediction 3: find File -name Pattern (-0.287343740463)
Prediction 4: find File -name Pattern | xargs -I {} ls -l -d {} (-0.332432001829)
Prediction 5: find File -name Pattern -exec ls {} \; (-0.333550214767)
Prediction 6: find File -name Pattern | xargs -I {} ls {} (-0.356522381306)
Prediction 7: find File -name Pattern -print (-0.370386719704)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.372666239738)
Prediction 9: find File -name Pattern -print | xargs -I {} ls -l {} (-0.39719748497)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.416272848845)

Example 245 (1)
Original English: find all files having certain word in its name in the current folder
English: find all file have certain word in name in current folder
GT Command 1: find . -name "*bsd*" -print
Prediction 1: find File -type f -iname Pattern (-0.115588210523)
Prediction 2: find File -type f -name Pattern (-0.194180250168)
Prediction 3: find File -type f -iname Pattern -print (-0.556437432766)
Prediction 4: find File -type f -iname Pattern -print0 (-0.6345744133)
Prediction 5: find File -name Pattern (-0.659769415855)
Prediction 6: find File -type f -iname Pattern -exec grep -i -l Pattern {} \; (-0.686271250248)
Prediction 7: find File -iname Pattern (-0.717170894146)
Prediction 8: find File -type f -iname Pattern -exec grep -l Pattern {} \; (-0.743067264557)
Prediction 9: find File -type f -iregex Pattern (-0.815915286541)
Prediction 10: find File -type f -iname Pattern -exec grep -i -l Pattern {} + (-0.887241780758)

Example 246 (1)
Original English: copy the file header.shtml to those dirs
English: copi file _REGEX to dir
GT Command 1: find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
Prediction 1: find File -type f -name Pattern -exec cp {} File \; (-0.0892115086317)
Prediction 2: find File -name Pattern -exec cp {} File \; (-0.209432527423)
Prediction 3: find File -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.298925310373)
Prediction 4: find File -name Pattern | xargs -n -1 -I {} cp File {} (-0.310387134552)
Prediction 5: find File -type f -name Pattern | xargs -n -1 -I {} cp File {} (-0.321567684412)
Prediction 6: find File -type f -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.321838051081)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.344825476408)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} cp File {} (-0.36733520031)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.407225549221)
Cannot parse: cp $( find File -type f -name Pattern \) - MatchedPairError
Prediction 10: cp $( find File -type f -name Pattern \)  (-0.408334463835)

Example 247 (1)
Original English: find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .
English: find all tool generat file _REGEX _REGEX and core dump file not requir to us all junk file _REGEX delet from current directori
GT Command 1: find . \( -name a.out -o -name '*.' -o -name  'core' \) -exec rm {} \;
Prediction 1: find File -type f -name Pattern ! -name Pattern -print0 | xargs -0 -I {} rm {} (-0.238385766745)
Prediction 2: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.261762738228)
Prediction 3: find File -type f -name Pattern ! -name Pattern -exec rm -f {} \; (-0.264083564281)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -f {} (-0.274180233479)
Prediction 5: find File -type f -name Pattern ! -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.326269209385)
Prediction 6: find File -type f -name Pattern -printf Pattern | xargs -I {} rm {} (-0.327565610409)
Prediction 7: find File -type f -name Pattern -exec rm -f {} \; (-0.329635113478)
Prediction 8: find File -type f -name Pattern ! -name Pattern -exec rm {} \; (-0.334235042334)
Prediction 9: find File -name Pattern -type f -printf Pattern | xargs -I {} rm {} (-0.345756232738)
Prediction 10: find File -name Pattern -type f -exec rm -f {} \; (-0.353450030088)

Example 248 (1)
Original English: Remove all broken symbolic links in /usr/ports/packages
English: remov all broken symbol link in _REGEX
GT Command 1: find -L /usr/ports/packages -type l -delete
Prediction 1: find File -type l -exec ls -l {} \; (-0.214622437954)
Prediction 2: find File -type l -xtype l | xargs -I {} rm {} (-0.280752927065)
Prediction 3: find File -type l -xtype l | xargs -I {} ls -l -d {} (-0.312721580267)
Prediction 4: find File -type l -print | xargs -I {} rm {} (-0.322648942471)
Prediction 5: find File -type l | xargs -I {} rm {} (-0.328370958567)
Prediction 6: find File -type l | xargs -I {} ls -l -d {} (-0.331286251545)
Prediction 7: find File -type l -xtype l (-0.332426249981)
Prediction 8: find File -type l -xtype l -exec ls -l {} \; (-0.338557332754)
Prediction 9: find File -type l -print0 | xargs -0 -I {} rm {} (-0.36120223999)
Prediction 10: find File -type l | xargs -I {} rm -r -f {} (-0.366619557142)

Example 249 (2)
Original English: Search directory foo for files containing "foo/bar" in their full names
English: search directori foo for file contain _REGEX in full name
GT Command 1: find foo -path foo/bar -print
GT Command 2: find foo -path /tmp/foo/bar -print
Prediction 1: find File -iname Pattern (-0.120628252625)
Prediction 2: find File -name Pattern (-0.289867132902)
Prediction 3: find File -iname Pattern | xargs -I {} grep -L Pattern {} (-0.587232887745)
Prediction 4: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.677790105343)
Prediction 5: find File -iname Pattern | grep Pattern (-0.712902069092)
Prediction 6: find File -iname Pattern | xargs -I {} grep -E Pattern {} (-0.72242051363)
Prediction 7: find File -iname Pattern | grep -i Pattern (-0.735565781593)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.787765741348)
Prediction 9: find File -iname Pattern -print (-0.792452812195)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -print (-0.876134693623)

Example 250 (3)
Original English: Locating large files (> 100 MB) in /home/ for 'cleaning'
English: locat larg file in _REGEX for _REGEX
GT Command 1: find /home -type f -size +100M -delete
GT Command 2: find /home -type f -size +100M -print0 |xargs -0 rm
GT Command 3: find /home -type f -size +100M -delete
Prediction 1: find File -type f -name Pattern | xargs -I {} grep -L Pattern {} (-0.255569159985)
Prediction 2: find File -type f -name Pattern | xargs -I {} grep Pattern {} (-0.269388586283)
Prediction 3: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.315736323595)
Prediction 4: find File -type f -name Pattern -exec grep -H -n Pattern {} \; (-0.33636918664)
Prediction 5: find File -type f -name Pattern -exec grep -H Pattern {} \; (-0.338034659624)
Prediction 6: find File -type f -name Pattern -exec grep -l Pattern {} \; (-0.348669409752)
Prediction 7: find File -type f -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.350847393274)
Prediction 8: find File -type f -name Pattern (-0.351646333933)
Prediction 9: find File -name Pattern | xargs -I {} grep Pattern {} (-0.354263037443)
Prediction 10: find File -type f -exec grep Pattern {} \; (-0.423982471228)

Example 251 (2)
Original English: Change file permissions on all regular files within a directory:
English: chang file permiss on all regular file within directori
GT Command 1: find /path/to/directory -type f -exec chmod 644 {} +
GT Command 2: find /path/to/directory -type f -exec chmod 644 {} +
Prediction 1: find File -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.145518124104)
Prediction 2: find File -type f -exec chmod Permission {} \; (-0.184839069843)
Prediction 3: find File -type f -perm Permission -print -exec chmod Permission {} \; (-0.208414897323)
Prediction 4: find File -type f ! -perm Permission -exec chmod Permission {} \; (-0.236938104033)
Prediction 5: find File -type f ! -perm Permission -print0 | xargs -0 -I {} chmod Permission {} (-0.250866323709)
Prediction 6: find File -type f ! -perm Permission -print -exec chmod Permission {} \; (-0.268898665905)
Prediction 7: find File -type f -print0 | xargs -0 -I {} chmod Unknown {} (-0.269663989544)
Prediction 8: find File -type f -print0 | xargs -0 -I {} chmod -v Permission {} (-0.299228101969)
Prediction 9: find File -type f -perm Permission -exec chmod Permission {} \; (-0.315528422594)
Prediction 10: find File -type f | xargs -I {} chmod Permission {} (-0.341544389725)

Example 252 (1)
Original English: Find files/directories named blah under current directory
English: find "files/directories" name blah under current directori
GT Command 1: find ./ -name blah
Prediction 1: find File -name Pattern (-0.0344380065799)
Prediction 2: find File -iname Pattern (-0.56782579422)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.789586961269)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.862032353878)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.887333869934)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.90618288517)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.926948904991)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -or -print \) (-0.953633964062)
Prediction 9: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.975771725178)
Prediction 10: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.991718351841)

Example 253 (1)
Original English: Find all the files which are changed in last 1 hour
English: find all file chang in last _NUM hour
GT Command 1: find / -cmin -60
Prediction 1: find File -cmin Number (-0.118299514055)
Prediction 2: find File -ctime Time (-0.434303015471)
Prediction 3: find File -type f -ctime Time (-0.617158710957)
Prediction 4: find File -cmin Number -print (-0.624319136143)
Prediction 5: find File -mtime Time (-0.701370298862)
Prediction 6: find File -daystart -ctime Time (-0.832675099373)
Prediction 7: find File -mtime Time -print (-0.862616896629)
Prediction 8: find File -amin Number (-1.1603717804)
Prediction 9: find File -mmin Number (-1.20328402519)
Prediction 10: find File -ctime Time -print (-1.26183652878)

Example 254 (1)
Original English: Find files owned by no group
English: find file own by no group
GT Command 1: find / -nogroup
Prediction 1: find File -nogroup -print (-0.151103273034)
Prediction 2: find File -nouser -print (-0.6111292243)
Prediction 3: find File -nouser -nogroup (-0.661302149296)
Prediction 4: find File -nouser (-0.695845544338)
Prediction 5: find File -nogroup (-0.801244914532)
Prediction 6: find File -nouser -nogroup -print (-1.07019209862)
Prediction 7: find File -nogroup -nogroup -print (-1.24707305431)
Prediction 8: find File -group Pattern (-1.24977421761)
Prediction 9: find File -size Size -print (-1.29561722279)
Prediction 10: find File -nogroup -nogroup (-1.38802683353)

Example 255 (1)
Original English: find all the files which are greater than 50MB and less than 100MB.
English: find all file greater than _NUMMB and less than _NUMMB
GT Command 1: find / -size +50M -size -100M
Prediction 1: find File -size Size -size Size (-0.0191662628204)
Prediction 2: find File -size Size -size Size -print (-0.421902060509)
Warning: -exec missing ending ';'
Prediction 3: find File -size Size -ok mv {} File (-0.65352421999)
Prediction 4: find File -size Size -ok ls -l {} \; (-0.693581104279)
Prediction 5: find File -size Size -ok ls -l -h {} \; (-0.708020806313)
Warning: -exec missing ending ';'
Prediction 6: find File -size Size -ok ls -l -h {} (-0.722503125668)
Warning: -exec missing ending ';'
Prediction 7: find File -size Size -ok ls -s -h {} (-0.739198446274)
Prediction 8: find File -size Size -ok ls -l -S -h {} \; (-0.755211293697)
Prediction 9: find File -size Size -ok ls -s -h {} + (-0.762752175331)
Prediction 10: find File -size Size -exec ls -s -h {} + (-0.772152125835)

Example 256 (1)
Original English: display long list of all the perl files in the current folder
English: display long list of all perl file in current folder
GT Command 1: find . -name "*.pl" -ls
Prediction 1: find File -name Pattern -exec ls -l {} \; (-0.0388919040561)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.265433043242)
Prediction 3: find File -type f -name Pattern -exec ls -l {} \; (-0.329728931189)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n Number (-0.350540101528)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} ls -l -d {} (-0.370963275433)
Prediction 6: find File -name Pattern | xargs -I {} ls -l {} (-0.379339575768)
Prediction 7: find File -name Pattern -print | xargs -I {} ls -l -d {} (-0.400026679039)
Prediction 8: find File -name Pattern -print | xargs -I {} ls -l {} (-0.405475020409)
Prediction 9: find File -name Pattern -type f -exec ls -l {} \; (-0.412293642759)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} ls -l -S -h {} (-0.432170391083)

Example 257 (1)
Original English: Find directories with permissions 777 and change them to 755 recursively
English: find directori with permiss _NUM and chang to _NUM recurs
GT Command 1: find /home -type d -perm 777 -print -exec chmod 755 {} \;
Prediction 1: find File -type d -perm Permission -print -exec chmod Permission {} \; (-0.0555128417909)
Prediction 2: find File -perm Permission -type d -exec chmod Permission {} \; (-0.191931828856)
Prediction 3: find File -type d -perm Permission -exec chmod Permission {} \; (-0.245468437672)
Prediction 4: find File -perm Permission -type f -exec chmod Permission {} \; (-0.259329766035)
Prediction 5: find File -type d -exec chmod Permission {} \; (-0.327047944069)
Prediction 6: find File -type d -perm Permission -print | xargs -I {} chmod Permission {} (-0.373435080051)
Prediction 7: find File -perm Permission -type f -print -exec chmod Permission {} \; (-0.380015283823)
Prediction 8: find File -type d -name Pattern -exec chmod Permission {} \; (-0.423295706511)
Prediction 9: find File -type d -perm Permission -print (-0.517455279827)
Prediction 10: find File -perm Permission -exec chmod Permission {} \; (-0.526892006397)

Example 258 (1)
Original English: find all files that are readable or writable by their owner
English: find all file readabl or writabl by owner
GT Command 1: find . -perm +600 -print
Prediction 1: find File -perm Permission (-0.0132804382592)
Prediction 2: find File \( -perm Permission -or -perm Permission \) ! -perm Permission (-0.728257477283)
Prediction 3: find File -perm Permission -print (-0.772450089455)
Prediction 4: find File \( -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.773744821548)
Prediction 5: find File \( -perm Permission -or -perm Permission \) ! -perm Permission -prune (-0.817799329758)
Prediction 6: find File \( -perm Permission -or -perm Permission \) -ls (-0.821106612682)
Prediction 7: find File \( -perm Permission -or -perm Permission \) ! -perm Permission \) (-0.829786419868)
Prediction 8: find File \( -perm Permission -or -perm Permission -or -perm Permission \) ! -perm Permission -ls (-0.839160680771)
Prediction 9: find File \( -perm Permission -or -perm Permission -or -perm Permission \) -ls (-0.846482694149)
Prediction 10: find File \( -perm Permission -or -perm Permission \) ! -perm Permission -print (-0.861563384533)

Example 259 (1)
Original English: find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and and delete them
English: find all "normal/regular" file in current folder end with _PARAMET or begin and end with _REGEX and and and delet
GT Command 1: find . -maxdepth 1 -type f -name '*~' -delete  -or -name '#*#' -delete
Prediction 1: find File -type f -name Pattern -print0 | xargs -0 -I {} rm {} (-0.129332274199)
Prediction 2: find File -type f -name Pattern -exec rm -f {} \; (-0.191508859396)
Prediction 3: find File -type f -name Pattern -exec rm {} \; (-0.196720898151)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.245144829154)
Prediction 5: find File -type f -name Pattern -printf Pattern | xargs -I {} rm {} (-0.261643826962)
Prediction 6: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -f {} (-0.275324523449)
Prediction 7: find File -type f -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.287043601274)
Prediction 8: find File -type f -name Pattern -printf Pattern | xargs -0 -I {} rm {} (-0.28836914897)
Prediction 9: find File -type f -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.297881513834)
Prediction 10: find File -type f -name Pattern | xargs -I {} rm {} (-0.330014914274)

Example 260 (1)
Original English: Find all files, starting from / but ignoring removable media, whose names end with ".rpm"
English: find all file start from "/" but ignor remov media whose name end with _REGEX
GT Command 1: find / -xdev -name "*.rpm"
Prediction 1: find File -name Pattern (-0.255264103413)
Prediction 2: find File -iname Pattern (-0.390614897013)
Prediction 3: find File -xdev -name Pattern (-0.513420939445)
Prediction 4: find File -type f -name Pattern (-0.690599381924)
Prediction 5: find File -name Pattern -print (-0.7262763381)
Prediction 6: find File -type f -iname Pattern -print (-0.729636251926)
Prediction 7: find File -mount -name Pattern (-0.761038422585)
Prediction 8: find File -depth -name Pattern (-0.768753409386)
Prediction 9: find File -type f -name Pattern -print (-0.780730903149)
Prediction 10: find File -type f -iname Pattern (-0.797611176968)

Example 261 (1)
Original English: Print the list of directories that are present in the /mnt/raid directory tree
English: print list of directori present in _REGEX directori tree
GT Command 1: find /mnt/raid -type d
Prediction 1: find File -type d (-0.0891979187727)
Prediction 2: find File -mindepth Number -maxdepth Number -type d -printf Pattern (-0.413734048605)
Prediction 3: find File -type d -exec ls -d -l -r -t {} \; (-0.444519400597)
Prediction 4: find File -type d | xargs -I {} ls -l -d {} (-0.464958280325)
Prediction 5: find File -type d -exec ls -l -d {} \; (-0.513104379177)
Prediction 6: find File -type d | xargs -I {} ls -d -l -r -t {} | tail -n Number (-0.524753808975)
Prediction 7: find File -mindepth Number -maxdepth Number -type d (-0.53582650423)
Prediction 8: find File -type d | xargs -I {} ls -d -l -r -c {} | tail -n Number (-0.577058076859)
Prediction 9: find File -type d -printf Pattern (-0.581450045109)
Prediction 10: find File -type d | xargs -I {} ls -d -l -r -t {} (-0.613160192966)

Example 262 (1)
Original English: find all files in a folder using name patterns
English: find all file in folder use name pattern
GT Command 1: find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
Prediction 1: find File -name Pattern (-0.292012065649)
Prediction 2: find File -iname Pattern (-0.351134449244)
Prediction 3: find File -iregex Pattern (-0.396219342947)
Prediction 4: find File -type f -name Pattern (-0.436517804861)
Prediction 5: find File -type f -iname Pattern (-0.476490586996)
Prediction 6: find File -type f -iregex Pattern (-0.660726964474)
Prediction 7: find File -type f -iname Pattern -print (-0.916927874088)
Prediction 8: find File -type f -regex Pattern (-1.02934837341)
Prediction 9: find File -type f (-1.08028709888)
Prediction 10: find File -regex Pattern (-1.10018312931)

Example 263 (3)
Original English: Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
English: find all _REGEX file in all directori tree match pattern _REGEX and search file for string _REGEX
GT Command 1: find /srv/www/*/htdocs/system/application/ -name "*.php" -exec grep -H "debug (" {} +
GT Command 2: find /srv/www/*/htdocs/system/application/ -name "*.php" -print0 | xargs -0 grep -H "debug ("
GT Command 3: find /srv/www/*/htdocs/system/application/ -name "*.php" -exec grep "debug (" {} \; -print
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.206123828888)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.209708675742)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; (-0.228102684021)
Prediction 4: find File -name Pattern -exec grep Pattern {} \; -print (-0.250909566879)
Prediction 5: find File -name Pattern | xargs -I {} grep Pattern {} (-0.254099696875)
Prediction 6: find File -name Pattern -exec grep -H Pattern {} \; (-0.264985710382)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.274902909994)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.306228399277)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.337895721197)
Prediction 10: find File -name Pattern -exec grep -r Pattern {} \; (-0.361326009035)

Example 264 (1)
Original English: find all files ending with a specific word in current folder
English: find all file end with specif word in current folder
GT Command 1: find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
Prediction 1: find File -name Pattern (-0.0132226813585)
Prediction 2: find File -type f -name Pattern (-0.663701057434)
Prediction 3: find File -name Pattern | xargs -I {} grep Pattern {} (-0.846554338932)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.872898995876)
Prediction 5: find File -name Pattern | xargs -r -I {} grep -L Pattern {} (-0.878530204296)
Prediction 6: find File -name Pattern | xargs -r -I {} grep Pattern {} (-0.8816806674)
Prediction 7: find File -name Pattern -print (-0.894822478294)
Prediction 8: find File -name Pattern | xargs -I {} ls -l {} (-0.94676053524)
Prediction 9: find File -type f -name Pattern -print (-1.02712094784)
Prediction 10: find File -name Pattern | xargs -r -I {} ls {} (-1.05988025665)

Example 265 (1)
Original English: Find text files modified less than 5 days ago
English: find text file modifi less than _NUM day ago
GT Command 1: find . –name "*.txt" –mtime 5
Prediction 1: find File -name Pattern -mtime Time (-0.165844485164)
Prediction 2: find File -name Pattern -daystart -mtime Time (-0.346201866865)
Prediction 3: find File -iname Pattern -mtime Time (-0.372625559568)
Prediction 4: find File -mtime Time -name Pattern (-0.492363572121)
Prediction 5: find File -name Pattern -mtime Time -daystart (-0.49741718173)
Prediction 6: find File -name Pattern -newer File (-0.547734677792)
Prediction 7: find File -mtime Time -name Pattern -print (-0.561413407326)
Prediction 8: find File -name Pattern -mtime Time -print (-0.595095157623)
Prediction 9: find File -name Pattern -mmin Number (-0.645906329155)
Prediction 10: find File File -name Pattern -mtime Time (-0.656496882439)

Example 266 (1)
Original English: Move all files matching patterns "*.old", ".old", ".*.old" from the current directory to directory "../old/"
English: move all file match pattern _REGEX _REGEX _REGEX from current directori to directori _REGEX
GT Command 1: find . ! -name . -prune -name '*.old' -exec mv {} ../old/ \;
Prediction 1: find File -name Pattern -exec mv {} File \; (-0.0685624629259)
Prediction 2: find File -name Pattern | xargs -I {} mv {} File (-0.172193348408)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.348874121904)
Prediction 4: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.354434072971)
Prediction 5: find File -name Pattern -exec mv -t File {} + (-0.364668548107)
Prediction 6: find File -name Pattern -exec mv -i -v {} File \; (-0.391161739826)
Prediction 7: find File -iname Pattern | xargs -I {} mv {} File (-0.439254671335)
Prediction 8: find File -name Pattern | xargs -I {} mv {} {} (-0.44315674901)
Prediction 9: find File -name Pattern -exec mv {} File + (-0.469468653202)
Prediction 10: find File -name Pattern | xargs -I {} mv {} File {} (-0.478149980307)

Example 267 (1)
Original English: sort based on size and display top ten largest normal/regular files in the current folder
English: sort base on size and display top _NUM largest "normal/regular" file in current folder
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -10
Prediction 1: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.218398481607)
Prediction 2: find File -type f -size Size -exec ls -l {} \; (-0.278189063072)
Prediction 3: find File -type f -empty -exec ls -l {} \; (-0.284256517887)
Prediction 4: find File -type f -printf Pattern | sort -r | head -n Number (-0.29979711771)
Prediction 5: find File -type f -printf Pattern | sort -r -z | head -n Number (-0.303468704224)
Prediction 6: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} cp {} File (-0.305510669947)
Prediction 7: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -0 -I {} cp {} File {} (-0.318391740322)
Prediction 8: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -0 -I {} cp {} File (-0.321677058935)
Prediction 9: find File -type f -printf Pattern | sort -r | head -n Number | xargs -0 -I {} cp {} File {} (-0.326969116926)
Prediction 10: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} cp {} File {} (-0.352261811495)

Example 268 (1)
Original English: find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and move them to  temp folder
English: find all "normal/regular" file in current folder end with _PARAMET or begin and end with _REGEX and and move to temp folder
GT Command 1: find . -maxdepth 1 -type f  -name '*~' -exec mv {} /tmp/ \;  -or  -name '#*#' -exec mv {} /tmp/ \;
Prediction 1: find File -type f -name Pattern -print0 | xargs -0 -I {} mv {} File (-0.144264429808)
Prediction 2: find File -type f -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.160816133022)
Prediction 3: find File -type f -name Pattern -print0 | xargs -0 -I {} ls -l -t -r {} | tail -n Number (-0.2382158041)
Prediction 4: find File -type f -name Pattern -exec mv {} File \; (-0.244198188186)
Prediction 5: find File -type f -regex Pattern -exec mv {} File \; (-0.276614934206)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} ls -l -t -r {} | head -n Number (-0.282051384449)
Prediction 7: find File -type f -name Pattern -exec ls -l {} \; (-0.284546852112)
Prediction 8: find File -name Pattern -type f -print0 | xargs -0 -I {} mv {} File (-0.289344906807)
Prediction 9: find File -type f -name Pattern -print0 | xargs -0 -I {} ls -l -t {} | tail -n Number (-0.294412463903)
Prediction 10: find File -type f -name Pattern -print0 | xargs -0 -I {} ls -l -d {} (-0.294423758984)

Example 269 (1)
Original English: Remove all broken symlinks from the /usr/ports/packages directory tree
English: remov all broken symlink from _REGEX directori tree
GT Command 1: find -L /usr/ports/packages -type l -delete
Prediction 1: find File -type l -xtype l | xargs -I {} rm {} (-0.197173953056)
Prediction 2: find File -type l -xtype l | xargs -I {} rm -r -f {} (-0.215225815773)
Prediction 3: find File -type l -xtype l | xargs -I {} rm -f {} (-0.216970309615)
Prediction 4: find File -type l -xtype l | xargs -I {} ls -l -d {} (-0.336177974939)
Prediction 5: find File -type l -xtype l -print0 | xargs -0 -I {} rm {} (-0.344497263432)
Prediction 6: find File -type l -xtype l -print | xargs -I {} rm {} (-0.373211205006)
Prediction 7: find File -type l -print0 | xargs -0 -I {} rm {} (-0.38168156147)
Prediction 8: find File -xtype l | xargs -I {} rm -r -f {} (-0.383237928152)
Prediction 9: find File -xtype l | xargs -I {} rm {} (-0.384732306004)
Prediction 10: find File -type l -xtype l -exec ls -l {} \; (-0.388047665358)

Example 270 (1)
Original English: Find deb packages in the current directory recursively
English: find deb packag in current directori recurs
GT Command 1: find . -type f -and -iname "*.deb"
Prediction 1: find File -name Pattern (-0.209468528628)
Prediction 2: find File -iname Pattern (-0.414939463139)
Prediction 3: find File -type f -iname Pattern -print0 | xargs -0 -I {} ls -1 -S -s -h {} (-0.534188866615)
Prediction 4: find File -type f -iname Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.534478843212)
Prediction 5: find File -type f -iname Pattern -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.582096636295)
Prediction 6: find File -name Pattern -print (-0.59054094553)
Prediction 7: find File -type f -iname Pattern -print0 | xargs -0 -I {} ls -l -d {} (-0.601738989353)
Prediction 8: find File -type f -iname Pattern -print0 | xargs -0 -I {} ls -l {} (-0.613101363182)
Prediction 9: find File -type f -iname Pattern -print0 | xargs -0 -I {} cp {} File (-0.631386876106)
Prediction 10: find File -type f -iname Pattern -print0 | xargs -0 -I {} cp File {} (-0.634796261787)

Example 271 (1)
Original English: start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found
English: start from current directori skip directori _REGEX and all file and directori under and print name of other file found
GT Command 1: find . -wholename './src/emacs' -prune -o -print
Prediction 1: find File \( -name Pattern -or -name Pattern \) -print (-0.342298448086)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -print -exec ls -l {} \; (-0.385155111551)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.415150433779)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} wc -c {} (-0.42369762063)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} chown Pattern {} (-0.426069825888)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} ls -l -d {} (-0.427460074425)
Prediction 7: find File \( -path File -prune -or -print \) (-0.43344271183)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print | xargs -I {} ls -l {} (-0.434110552073)
Prediction 9: find File \( -name Pattern -prune -or -print \) (-0.439330458641)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.457059711218)

Example 272 (1)
Original English: Remove regular files changed more than 15 days ago from the /tmp directory tree
English: remov regular file chang more than _NUM day ago from _REGEX directori tree
GT Command 1: find /tmp/ -ctime +15 -type f -exec rm {} \;
Prediction 1: find File -type f -ctime Time -exec rm -f {} \; (-0.116510562599)
Prediction 2: find File -type f -ctime Time | xargs -I {} rm -f {} (-0.231478065252)
Prediction 3: find File -type f -ctime Time | xargs -I {} rm {} (-0.237149015069)
Prediction 4: find File -type f -ctime Time | xargs -0 -I {} rm {} (-0.242723792791)
Prediction 5: find File -type f -ctime Time | xargs -0 -I {} rm -f {} (-0.252065420151)
Prediction 6: find File -type f -ctime Time -exec rm {} \; (-0.279692679644)
Prediction 7: find File -type f -ctime Time -print0 | xargs -0 -I {} rm {} (-0.290436059237)
Prediction 8: find File -type f -mtime Time -exec rm -f {} \; (-0.313793689013)
Prediction 9: find File -type f -ctime Time -print0 | xargs -0 -I {} rm -f {} (-0.320256203413)
Prediction 10: find File -type f -ctime Time | xargs -r -I {} rm -f {} (-0.337270945311)

Example 273 (1)
Original English: copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4
English: copi file _REGEX to each directori under _REGEX _REGEX _REGEX or _REGEX
GT Command 1: find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
Prediction 1: find File -type f -name Pattern | xargs -n -1 -I {} cp File {} (-0.199064463377)
Prediction 2: find File -name Pattern | xargs -n -1 -I {} cp File {} (-0.224115207791)
Prediction 3: find File -type d | xargs -n -1 -I {} cp File {} (-0.233426734805)
Prediction 4: find File -type f -name Pattern -exec cp {} File \; (-0.241124212742)
Prediction 5: find File -type f -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.268190890551)
Prediction 6: find File -type f -name Pattern | xargs -n -1 -I {} cp {} File (-0.271661579609)
Prediction 7: find File -type d | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.283165663481)
Prediction 8: find File -type d -name Pattern | xargs -n -1 -I {} cp File {} (-0.290345937014)
Prediction 9: find File -type f -name Pattern | xargs -n -1 -I {} cp {} File {} (-0.305770218372)
Prediction 10: find File -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.318291664124)

Example 274 (1)
Original English: Find files under /usr that are the same age or older than file `FirstFile'
English: find file under _REGEX same age or older than file _REGEX
GT Command 1: find /usr ! -newer /FirstFile -print
Prediction 1: find File \( -newer File -or -user Pattern \) -print (-0.394620001316)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -mtime Time (-0.399915605783)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print0 (-0.414088338614)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -mtime Time -print0 | xargs -0 -I {} rm {} (-0.415403753519)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -mtime Time -print0 | xargs -0 -I {} grep -l Pattern {} (-0.4320730865)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -mtime Time -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.436548322439)
Prediction 7: find File \( -name Pattern -or -size Size \) (-0.43743956089)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -mtime Time -print0 | xargs -0 -I {} grep -L Pattern {} (-0.453846514225)
Prediction 9: find File \( -name Pattern -or -size Size \) -print (-0.469453662634)
Prediction 10: find File \( -name Pattern -or -user Pattern \) -mtime Time (-0.484839141369)

Example 275 (1)
Original English: find all files in the current folder having a specific word in their name
English: find all file in current folder have specif word in name
GT Command 1: find -name "*pattern*"
Prediction 1: find File -iname Pattern (-0.159877181053)
Prediction 2: find File -name Pattern (-0.251698613167)
Prediction 3: find File -type f -iname Pattern (-0.483427077532)
Prediction 4: find File -type f -name Pattern (-0.574540734291)
Prediction 5: find File -type f -iname Pattern -print (-0.857448816299)
Prediction 6: find File \( -iname Pattern -or -iname Pattern \) -print (-1.02570509911)
Prediction 7: find File \( -iname Pattern -or -iname Pattern \) (-1.06757771969)
Prediction 8: find File -print | grep Pattern (-1.20029103756)
Prediction 9: find File -iname Pattern -print (-1.21780705452)
Prediction 10: find File -type f -name Pattern -print (-1.34173989296)

Example 276 (1)
Original English: find all the files (under root file system /) that were changed within the last 24 hours
English: find all file chang within last _NUM hour
GT Command 1: find / -ctime -1
Prediction 1: find File -cmin Number (-0.0989318862557)
Prediction 2: find File -ctime Time (-0.388982623816)
Prediction 3: find File -cmin Number -print (-0.70381963253)
Prediction 4: find File -mtime Time (-0.824029505253)
Prediction 5: find File -type f -ctime Time (-0.945347309113)
Prediction 6: find File -daystart -ctime Time (-1.06855845451)
Prediction 7: find File -mmin Number (-1.11455368996)
Prediction 8: find File -maxdepth Number -cmin Number (-1.16641891003)
Prediction 9: find File -amin Number (-1.22217833996)
Prediction 10: find File -mtime Time -print (-1.25433695316)

Example 277 (1)
Original English: find all the files in the current folder which end with "ext1" or "ext2" or "ext3"
English: find all file in current folder end with _REGEX or _REGEX or _REGEX
GT Command 1: find -E . -regex ".*ext1|.*ext2|.*ext3"
Prediction 1: find File -regex Pattern (-0.200638562441)
Prediction 2: find File -regextype Pattern -regex Pattern (-0.304388314486)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.34846830368)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.41919746995)
Prediction 5: find File -type f -regex Pattern (-0.469837665558)
Prediction 6: find File \( -regex Pattern -and -not -regex Pattern \) (-0.47262519598)
Prediction 7: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.478049486876)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.577652931213)
Prediction 9: find File \( -name Pattern -or -name Pattern \) {} \;  (-0.601646065712)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.602193415165)

Example 278 (1)
Original English: search for all the mp3 files in the folder /home/you which have been accessed 24 ago
English: search for all _REGEX file in folder _REGEX access _NUM ago
GT Command 1: find /home/you -iname “*.mp3” -atime 01 -type -f
Prediction 1: find File -iname Pattern -atime Time -type -f (-0.153581514955)
Prediction 2: find File -iname Pattern -atime Time -type f (-0.233524218202)
Prediction 3: find File -name Pattern -atime Time -type f (-0.291697114706)
Prediction 4: find File -name Pattern -atime Time -type -f (-0.364966273308)
Prediction 5: find File -iname Pattern -type f -atime Time (-0.41873690486)
Prediction 6: find File -type f -iname Pattern -atime Time (-0.4264293015)
Prediction 7: find File -amin Number -name Pattern (-0.455543637276)
Prediction 8: find File -type f -name Pattern -atime Time (-0.48917478323)
Prediction 9: find File -name Pattern -atime Time -type f -print (-0.532677710056)
Prediction 10: find File -atime Time -name Pattern (-0.573352575302)

Example 279 (1)
Original English: Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
English: search for all directori name foo _REGEX or ani other combin of uppercas and lowercas charact beneath current directori
GT Command 1: find . -iname foo -type d
Prediction 1: find File -type d -iname Pattern -ls (-0.293018251657)
Prediction 2: find File -type d -iname Pattern -printf Pattern (-0.313771694899)
Prediction 3: find File -type d -iname Pattern -print0 (-0.356774270535)
Prediction 4: find File -type d -iname Pattern \( -print -or -type d \) (-0.382671266794)
Prediction 5: find File -type d -iname Pattern (-0.390115052462)
Prediction 6: find File -type d -iname Pattern \( -print -or -type d -prune \) (-0.430333018303)
Prediction 7: find File -iname Pattern -type d -printf Pattern (-0.456825792789)
Prediction 8: find File -iname Pattern -type d (-0.469671875238)
Prediction 9: find File -type d -name Pattern -printf Pattern (-0.470741987228)
Prediction 10: find File -type d -iname Pattern \( -print -or -type d \) -printf Pattern (-0.486954450607)

Example 280 (1)
Original English: To list all files in the `/usr/share' directory tree with the text `farm' somewhere in their name
English: list all file in _REGEX directori tree with text _REGEX somewher in name
GT Command 1: find /usr/share -name '*farm*'
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.188228905201)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.254246503115)
Prediction 3: find File -name Pattern | xargs -I {} ls -l {} (-0.262479096651)
Prediction 4: find File -name Pattern | xargs -I {} ls {} (-0.284773647785)
Prediction 5: find File -name Pattern -exec ls {} \; (-0.329941034317)
Prediction 6: find File -name Pattern -exec ls -l {} \; (-0.343167930841)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -print (-0.367945283651)
Prediction 8: find File -name Pattern (-0.375665545464)
Prediction 9: find File \( -name Pattern -or -name Pattern \) (-0.401701837778)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.441969454288)

Example 281 (1)
Original English: search for files with the name "temp" in the /usr folder
English: search for file with name _REGEX in _REGEX folder
GT Command 1: find /usr -name temp -print
Prediction 1: find File -name Pattern (-0.113786645234)
Prediction 2: find File -iname Pattern (-0.292874902487)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.494643807411)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.658657193184)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.670482218266)
Prediction 6: find File \( -name Pattern -prune -or -name Pattern \) (-0.69203555584)
Prediction 7: find File -type f -name Pattern (-0.79587584734)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) (-0.806782305241)
Prediction 9: find File \( -name Pattern -and -name Pattern \) (-0.817551672459)
Prediction 10: find File \( -iname Pattern -or -iname Pattern \) -print (-0.857602953911)

Example 282 (1)
Original English: Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.
English: search current directori and all of sub-directori for ani _REGEX file care to prevent shell from expand anyth in _REGEX befor ss pass to find
GT Command 1: find . -name '*.pdf' -print
Prediction 1: find File -name Pattern -print (-0.155660331249)
Prediction 2: find File -name Pattern -print0 (-0.378008365631)
Prediction 3: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.389459311962)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.449817806482)
Prediction 5: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.490943461657)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.508559465408)
Prediction 7: find File -name Pattern -exec grep -I -w Pattern {} \; -print (-0.524676084518)
Prediction 8: find File -name Pattern -ok rm {} \; (-0.553926765919)
Prediction 9: find File -name Pattern -exec grep -H -n Pattern {} \; (-0.568020105362)
Prediction 10: find File -name Pattern -exec grep -H Pattern {} \; (-0.573528707027)

Example 283 (1)
Original English: Archive all *html files using tar.
English: archiv all _REGEX file use tar
GT Command 1: find . -type f -name "*html" | xargs tar cvf htmlfiles.tar -
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.150843963027)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} tar -u -f Unknown {} (-0.250196546316)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -z -f Unknown {} (-0.253750056028)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown - {} (-0.257153123617)
Prediction 5: find File -name Pattern -print0 | tar -T File --null --create -f File (-0.269265830517)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} tar -r -v -f Unknown {} (-0.269316166639)
Prediction 7: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.269900590181)
Prediction 8: find File -name Pattern -exec tar -u -f Unknown {} \; (-0.270642250776)
Prediction 9: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.27122887969)
Prediction 10: find File -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown --no-recursion {} (-0.285293698311)

Example 284 (1)
Original English: list regular file which file name end with 'cache' 'xml' or 'html' in current directory
English: list regular file file name end with _REGEX _REGEX or _REGEX in current directori
GT Command 1: find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
Prediction 1: find File -type f \( -name Pattern -or -name Pattern \) (-0.179721772671)
Prediction 2: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.281471818686)
Prediction 3: find File -type f \( -name Pattern -or -name Pattern \) -ls (-0.28344976902)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.29471924901)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.301059067249)
Prediction 6: find File -type f -regex Pattern (-0.326676338911)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -print0 (-0.33485865593)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern \) {} \;  (-0.34442949295)
Prediction 9: find File -type f \( -name Pattern -or -name Pattern \) {} \; -print (-0.345583438873)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.351822048426)

Example 285 (1)
Original English: search for all the files in the folder /home which have sticky bit set and have the permissions 553
English: search for all file in folder _REGEX sticki bit set and permiss _NUM
GT Command 1: find /home -perm 1553
Prediction 1: find File -perm Permission (-0.172502651811)
Prediction 2: find File -perm Permission -print (-0.239393115044)
Prediction 3: find File -perm Permission -exec ls -l {} \; (-0.390794157982)
Prediction 4: find File -perm Permission -exec chmod Permission {} \; (-0.402230292559)
Prediction 5: find File -perm Permission -print0 | xargs -0 -I {} chmod Permission {} (-0.40776693821)
Prediction 6: find File -perm Permission | xargs -I {} chmod Unknown {} (-0.449474692345)
Prediction 7: find File -perm Permission | xargs -I {} chmod Permission {} (-0.450320363045)
Prediction 8: find File -perm Permission | xargs -I {} ls -l -S -h {} (-0.461283028126)
Prediction 9: find File -perm Permission -print | xargs -I {} chmod Unknown {} (-0.474308818579)
Prediction 10: find File -perm Permission | xargs -I {} ls -l {} (-0.514405310154)

Example 286 (1)
Original English: Locate the httpd.conf file on the system
English: locat _REGEX file on system
GT Command 1: find / -name httpd.conf
Prediction 1: find File -name Pattern (-0.0386469140649)
Prediction 2: find File -iname Pattern (-0.582850396633)
Prediction 3: find File -type f -name Pattern (-0.643479406834)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.757108926773)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.78312510252)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.8296200037)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.831090033054)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -or -print \) (-0.870368182659)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.900672674179)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.919268608093)

Example 287 (1)
Original English: Find all files/directories named Root under current directory and copy them to newRoot
English: find all "files/directories" name _REGEX under current directori and copi to _REGEX
GT Command 1: find . -name Root | xargs cp newRoot
Prediction 1: find File -iname Pattern | xargs --replace=@ -I {} cp File {} (-0.190094158053)
Prediction 2: find File -iname Pattern | xargs --replace=@ -I {} cp File File {} (-0.194583430886)
Prediction 3: find File -iname Pattern -exec cp {} File \; (-0.235571801662)
Prediction 4: find File -iname Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.282038480043)
Prediction 5: find File -iname Pattern | xargs -I {} cp -t File {} (-0.294927030802)
Prediction 6: find File -iname Pattern | xargs -I {} cp File {} (-0.32126557827)
Prediction 7: find File -iname Pattern -print0 | xargs -0 -I {} cp File {} (-0.323450267315)
Prediction 8: find File -iname Pattern -print0 | xargs -0 -I {} cp {} File (-0.360476374626)
Prediction 9: find File -iname Pattern | xargs --replace=@ -I {} cp File {} File (-0.387323886156)
Prediction 10: find File -iname Pattern | xargs -I {} cp {} File (-0.397783845663)

Example 288 (1)
Original English: Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'
English: find all file whose name contain string _REGEX exist within _REGEX
GT Command 1: find /usr/local/games -name "*xpilot*"
Prediction 1: find File -name Pattern (-0.109870970249)
Prediction 2: find File -type f -name Pattern (-0.418773621321)
Prediction 3: find File -name Pattern -print (-0.427242994308)
Prediction 4: find File -type f -name Pattern -print (-0.525130569935)
Prediction 5: find File -type f -iname Pattern -print (-0.697071552277)
Prediction 6: find File -print | grep Pattern (-0.744405031204)
Prediction 7: find File -iname Pattern (-0.763998448849)
Prediction 8: find File -iname Pattern -print (-0.855830073357)
Prediction 9: find File -print | grep -E Pattern (-0.863400280476)
Prediction 10: find File -type f -iname Pattern (-0.926200866699)

Example 289 (1)
Original English: display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)
English: display all file in folder bar onli in path _REGEX
GT Command 1: find bar -path /foo/bar/myfile -print
Prediction 1: find File -path File (-0.113326847553)
Prediction 2: find File \( -path File -prune -or -print \) (-0.228856742382)
Prediction 3: find File -path File -print (-0.525522053242)
Prediction 4: find File -not -path File (-0.617617845535)
Prediction 5: find File \( -path File -prune -or -name Pattern \) -print (-0.620419085026)
Prediction 6: find File \( -path File -prune -or -path File -prune -or -print \) (-0.625069916248)
Prediction 7: find File \( -path File -prune -or -path File -prune \) (-0.741177618504)
Prediction 8: find File \( -path File -or -print \) (-0.801413655281)
Prediction 9: find File \( -path File -or -path File \) (-0.813300132751)
Prediction 10: find File \( -path File -prune -or -name Pattern \) (-0.81725281477)

Example 290 (1)
Original English: Show the last 10 .conf files found by `find' in the /etc directory and 1 level below
English: show last _NUM _REGEX file found by _REGEX in _REGEX directori and _NUM level below
GT Command 1: find /etc -maxdepth 2 -name "*.conf" | tail
Prediction 1: find File -maxdepth Number -name Pattern (-0.232319295406)
Prediction 2: find File -mindepth Number -maxdepth Number -name Pattern (-0.290353983641)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.327292859554)
Prediction 4: find File -maxdepth Number \( -name Pattern -or -name Pattern \) (-0.368909955025)
Prediction 5: find File -maxdepth Number \( -name Pattern -or -name Pattern \) -print (-0.401386141777)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.425016403198)
Prediction 7: find File \( -name Pattern -prune -or \( -type f -and -name Pattern \) -or -name Pattern \) -print (-0.470054268837)
Prediction 8: find File -maxdepth Number -type f -name Pattern (-0.476903319359)
Prediction 9: find File \( -name Pattern -prune -or \( -name Pattern -or -name Pattern \) -print (-0.477051734924)
Prediction 10: find File -maxdepth Number \( -name Pattern -or -name Pattern \) -print0 (-0.479616612196)

Example 291 (1)
Original English: Find files with 777 permissions and change them to 755
English: find file with _NUM permiss and chang to _NUM
GT Command 1: find / -type f -perm 0777 -print -exec chmod 755 {} \;
Prediction 1: find File -perm Permission -exec chmod Permission {} \; (-0.175397574902)
Prediction 2: find File -type f -perm Permission -print -exec chmod Permission {} \; (-0.190192997456)
Prediction 3: find File -perm Permission -print -exec chmod Permission {} \; (-0.241834551096)
Prediction 4: find File -type f -perm Permission -exec chmod Permission {} \; (-0.246216356754)
Prediction 5: find File -perm Permission -type f -exec ls -l {} \; (-0.248176753521)
Prediction 6: find File -perm Permission -exec ls -l {} \; (-0.302357912064)
Prediction 7: find File -type f -perm Permission -exec ls -l {} \; (-0.307703703642)
Prediction 8: find File -perm Permission -type f -exec chmod Permission {} \; (-0.32185447216)
Prediction 9: find File -type f -perm Permission -print -exec ls -l {} \; (-0.363513678312)
Prediction 10: find File -type f -perm Permission -ls (-0.417186796665)

Example 292 (1)
Original English: find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old
English: find all file in current folder modifi for file at least _NUM week old but less _NUM day old
GT Command 1: find . -mtime +30 -a -mtime -7 -print0
Prediction 1: find File -mtime Time -mtime Time | grep -v Pattern (-0.312074244022)
Prediction 2: find File -mtime Time -daystart -mtime Time (-0.332352340221)
Prediction 3: find File \( -mtime Time -and -mtime Time -and -mtime Time -and ! -name Pattern \) (-0.43228545785)
Prediction 4: find File -daystart -mtime Time -mtime Time | grep -v Pattern (-0.44703105092)
Prediction 5: find File \( -mtime Time -and -mtime Time -and -mtime Time \) (-0.449669480324)
Prediction 6: find File \( -mtime Time -and -mtime Time -and -mtime Time -and ! -path File \) (-0.459246397018)
Prediction 7: find File -mtime Time -mtime Time -daystart (-0.473625659943)
Prediction 8: find File -mtime Time File -100 (-0.487708806992)
Prediction 9: find File \( -mtime Time -and -mtime Time -and ! -name Pattern \) (-0.487779408693)
Prediction 10: find File \( -mtime Time -and -mtime Time -and -mtime Time -and -mtime Time \) (-0.50268882513)

Example 293 (1)
Original English: display all the regular files in the folder "$(FOLDER)" which are modified in the last $(RETENTION)*24 hours and excluding hidden files
English: display all regular file in folder _PARAMET modifi in last _PARAMET hour and exclud hidden file
GT Command 1: find ${FOLDER} -type f ! -name \".*\" -mtime -${RETENTION}
Prediction 1: find File \( -name Pattern -prune -or -type f \) -mtime Time -print0 | xargs -0 -I {} ls -l {} (-0.327949851751)
Prediction 2: find File -type f \( -name Pattern -prune -or -mtime Time \) -print0 | xargs -0 -I {} ls -l {} (-0.342101693153)
Prediction 3: find File -type f \( -name Pattern -prune -or -mtime Time \) -print0 | xargs -0 -I {} grep -l Pattern {} (-0.352633923292)
Prediction 4: find File -type f \( -name Pattern -prune -or \( -type f -and -mtime Time -and -print0 \) \) | xargs -0 -I {} grep -l Pattern {} (-0.356888502836)
Prediction 5: find File -type f \( -name Pattern -and -mtime Time -and ! -name Pattern \) (-0.35719615221)
Prediction 6: find File \( -type f -and -mtime Time -and ! -name Pattern \) -print0 | xargs -0 -I {} rm {} (-0.358927071095)
Prediction 7: find File \( -name Pattern -prune -or -type f \) -mtime Time -print0 | xargs -0 -I {} grep -l Pattern {} (-0.370148092508)
Prediction 8: find File -type f \( -name Pattern -prune -or \( -type f -and -mtime Time -and -print0 \) \) (-0.372140437365)
Prediction 9: find File \( -type f -and -mtime Time -and ! -name Pattern \) (-0.377148658037)
Prediction 10: find File -type f \( -name Pattern -prune -or \( -type f -and -mtime Time -and -print0 \) \) | xargs -0 -I {} rm {} (-0.382338017225)

Example 294 (1)
Original English: Search the current directory and two levels below for file `teste.tex'
English: search current directori and _NUM level below for file _REGEX
GT Command 1: find ~/ -maxdepth 3 -name teste.tex
Prediction 1: find File -maxdepth Number -name Pattern (-0.133117035031)
Prediction 2: find File -mindepth Number -maxdepth Number -name Pattern (-0.178399518132)
Prediction 3: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.396375477314)
Prediction 4: find File -mindepth Number -name Pattern (-0.447237879038)
Prediction 5: find File \( -name Pattern -prune -or -print \) (-0.498487472534)
Prediction 6: find File -maxdepth Number \( -name Pattern -or -name Pattern \) -print (-0.513351142406)
Prediction 7: find File -maxdepth Number -name Pattern -print (-0.576822638512)
Prediction 8: find File -mindepth Number -maxdepth Number -name Pattern -print (-0.577362775803)
Prediction 9: find File -maxdepth Number \( -name Pattern -or -name Pattern \) (-0.624502420425)
Prediction 10: find File -mindepth Number -name Pattern -prune (-0.652251422405)

Example 295 (1)
Original English: find file which case-insensitive name is foo in current directory.
English: find file case-insensit name foo in current directori
GT Command 1: find . -iname foo
Prediction 1: find File -iname Pattern (-0.0686166062951)
Prediction 2: find File -name Pattern (-0.396659463644)
Prediction 3: find File -type f -iname Pattern (-0.807142317295)
Prediction 4: find File -type f -iname Pattern -print (-1.02709293365)
Prediction 5: find File -iname Pattern -print (-1.07001566887)
Prediction 6: find File -name Pattern -type f (-1.07165801525)
Prediction 7: find File -type f -name Pattern (-1.08297049999)
Prediction 8: find File -iname Pattern -type f (-1.08383071423)
Prediction 9: find File -maxdepth Number -name Pattern (-1.13197672367)
Prediction 10: find File -type f -iname Pattern -ls (-1.25920033455)

Example 296 (1)
Original English: find all the html, javascript and text files in the current folder
English: find all html javascript and text file in current folder
GT Command 1: find . -type f -name "*.htm*" -o -name "*.js*" -o -name "*.txt"
Prediction 1: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.255993127823)
Prediction 2: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.277425527573)
Prediction 3: find File -type f -name Pattern -print0 | xargs -0 -I {} tar -c -v -f Unknown {} (-0.279520511627)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.287619560957)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern \) (-0.290714651346)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.300075531006)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.309186607599)
Prediction 8: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.313866019249)
Prediction 9: find File -type f -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.328312665224)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -print (-0.339550644159)

Example 297 (1)
Original English: display all files in the current directory excluding those that are present in the directories whose name starts with "efence" and do not search in the sub directories
English: display all file in current directori exclud present in directori whose name start with _REGEX and not search in sub directori
GT Command 1: find * -maxdepth 0 -name "efence*" -prune -o -print
Prediction 1: find File ! -name Pattern -prune (-0.278849929571)
Prediction 2: find File \( ! -name Pattern -prune -or -name Pattern \) -print (-0.324329286814)
Prediction 3: find File \( ! -name Pattern -prune -or -print \) (-0.336332291365)
Prediction 4: find File ! \( -name Pattern -prune -or -name Pattern \) -print (-0.349536508322)
Prediction 5: find File \( ! -path File -and ! -name Pattern \) (-0.367318898439)
Prediction 6: find File \( ! -path File -prune -or -name Pattern \) -print (-0.376075714827)
Prediction 7: find File \( -name Pattern -prune -or -print \) (-0.378123164177)
Prediction 8: find File -maxdepth Number ! -name Pattern (-0.390235751867)
Prediction 9: find File \( ! -path File -prune -or -print \) (-0.435609906912)
Prediction 10: find File \( -path File -prune -or -print \) (-0.443022638559)

Example 298 (1)
Original English: List all *.bak files in the current directory tree
English: list all _REGEX file in current directori tree
GT Command 1: find  . -name '*.bak' -ls
Prediction 1: find File -name Pattern | xargs -I {} ls -l {} (-0.0832279399037)
Prediction 2: find File -name Pattern | xargs -I {} ls {} (-0.181637480855)
Prediction 3: find File -name Pattern -exec ls -l {} \; (-0.264296591282)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.308056235313)
Prediction 5: find File -name Pattern -exec ls {} \; (-0.319097131491)
Prediction 6: find File -name Pattern | xargs -I {} ls -l -d {} (-0.326145917177)
Prediction 7: find File -type f -name Pattern | xargs -I {} ls -l {} (-0.351186871529)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.372219234705)
Prediction 9: find File -name Pattern -print | xargs -I {} ls -l {} (-0.423073023558)
Prediction 10: find File -name Pattern | xargs -n -1 -I {} ls {} (-0.447297543287)

Example 299 (1)
Original English: Find the files which have the name "java" in it and then display only the files which have "class" word in them?
English: find file name _REGEX in and display onli file _REGEX word in _REGEX
GT Command 1: find -name "*java*" -exec grep -H class {} \;
Prediction 1: find File -name Pattern -type f -print | xargs -I {} grep -L Pattern {} (-0.235369741917)
Prediction 2: find File -name Pattern -type f | xargs -I {} grep -L Pattern {} (-0.258418172598)
Prediction 3: find File -name Pattern -type f -print | xargs -I {} grep Pattern {} (-0.277622848749)
Prediction 4: find File -name Pattern -type f -print | grep Pattern (-0.284964263439)
Prediction 5: find File -name Pattern -type f -print | grep -E Pattern (-0.29583799839)
Prediction 6: find File -name Pattern -type f -print | xargs -n -2 -I {} grep Pattern {} (-0.323323249817)
Prediction 7: find File -name Pattern -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.336144328117)
Prediction 8: find File -name Pattern -type f -print | xargs -I {} grep -l Pattern {} (-0.340681374073)
Prediction 9: find File -name Pattern -type f | xargs -I {} grep Pattern {} (-0.342814385891)
Prediction 10: find File -name Pattern -type f -exec grep -H Pattern {} \; (-0.392563343048)

Example 300 (1)
Original English: Find all symbolic links under the current folder and below
English: find all symbol link under current folder and below
GT Command 1: find –L –xtype l
Prediction 1: find File -type l (-0.0201174188405)
Prediction 2: find File -type l -print (-0.665435135365)
Prediction 3: find File -type l | xargs -I {} ls -d -l -r -t {} | tail -n Number (-0.716915607452)
Prediction 4: find File -type l | xargs -I {} ls -l -d {} (-0.729933679104)
Prediction 5: find File -type l | xargs -I {} ls -d -l -r -t {} | head -n Number (-0.765850186348)
Prediction 6: find File -type l | xargs -I {} ls -l -t -r {} | tail -n Number (-0.826521098614)
Prediction 7: find File -type l | xargs -I {} ls -d -l -r -c {} | tail -n Number (-0.831552028656)
Prediction 8: find File -type l | xargs -I {} ls -d -l -r -t {} | head -n_NUM (-0.892164170742)
Prediction 9: find File -type l | xargs -I {} ls -d -l -r -t {} | tail File (-0.893728613853)
Prediction 10: find File -type l | xargs -I {} ls -d -l -r -c {} | tail File (-0.921639382839)

Example 301 (1)
Original English: display a long listing of all the files in the current folder that have been accessed in today from the start of the day
English: display long list of all file in current folder access in today from start of day
GT Command 1: find -daystart   -atime 0 -ls
Prediction 1: find File -atime Time -exec ls -l {} \; (-0.176929011941)
Prediction 2: find File -type f -atime Time -exec ls -l {} \; (-0.194944083691)
Prediction 3: find File -atime Time -print | xargs -I {} ls -l -d {} (-0.330036818981)
Prediction 4: find File -atime Time -type f -exec ls -l {} \; (-0.347497671843)
Prediction 5: find File -atime Time -print | xargs -I {} ls -l -t -r {} | tail -n Number (-0.37113237381)
Prediction 6: find File -atime Time -type f -ls (-0.375128030777)
Prediction 7: find File -type f -atime Time -print | xargs -I {} ls -l {} (-0.415301293135)
Prediction 8: find File -type f -atime Time -print | xargs -I {} ls -l -d {} (-0.424345046282)
Prediction 9: find File -atime Time -print | xargs -I {} ls -l -t -r {} | head -n Number (-0.440111100674)
Prediction 10: find File -atime Time -print | xargs -I {} ls -l {} (-0.44765779376)

Example 302 (1)
Original English: Find all directories in entire file system which are larger than 50KB
English: find all directori in entir file system larger than _NUMKB
GT Command 1: find / -type d -size +50k
Prediction 1: find File -type d -size Size (-0.0141983171925)
Prediction 2: find File -type d -size Size -print (-0.5491553545)
Prediction 3: find File -type d -type d -size Size (-0.736445963383)
Prediction 4: find File -type d -name Pattern -size Size (-0.801181137562)
Prediction 5: find File -type d -empty (-0.802007377148)
Prediction 6: find File -type d -type f -size Size (-0.825724005699)
Prediction 7: find File -type f -size Size (-0.956407606602)
Prediction 8: find File -type d -name Pattern -size Size -print (-1.0032749176)
Prediction 9: find File -type d -links Number (-1.01032781601)
Prediction 10: find File -type d -mtime Time (-1.05335378647)

Example 303 (1)
Original English: Show all files that have not been accessed in the $HOME directory for 30 days or more
English: show all file not access in _PARAMET directori for _NUM day or more
GT Command 1: find $HOME -atime +30
Prediction 1: find File -type f -atime Time -print (-0.126517593861)
Prediction 2: find File -type f -atime Time (-0.148307979107)
Prediction 3: find File \( -type f -and -atime Time -and -print \) (-0.420947551727)
Prediction 4: find File \( -type f -and -atime Time \) -print (-0.424684345722)
Prediction 5: find File \( -type f -and -atime Time \) (-0.435413509607)
Prediction 6: find File \( -type f -and -atime Time -or -print \) (-0.457342535257)
Prediction 7: find File \( -type f -and -mtime Time \) (-0.544573545456)
Prediction 8: find File \( -type f -and -mtime Time -and -print \) (-0.545067191124)
Prediction 9: find File -atime Time -type f -print (-0.588491261005)
Prediction 10: find File \( -type f -and -mtime Time -and -print0 \) \) (-0.610332787037)

Example 304 (1)
Original English: find all the files with a specific permission in the current folder
English: find all file with specif permiss in current folder
GT Command 1: find . — perm 755 -print
Prediction 1: find File -perm Permission (-0.0201283749193)
Prediction 2: find File -type f -perm Permission (-0.483498424292)
Prediction 3: find File -type f -perm Permission -print (-0.681804120541)
Prediction 4: find File -perm Permission -print (-0.908875346184)
Prediction 5: find File -type f -perm Permission -perm Permission -print (-1.19728934765)
Prediction 6: find File -type f -perm Permission -perm Permission (-1.25286793709)
Prediction 7: find File -type f -iname Pattern -perm Permission -print (-1.28914773464)
Prediction 8: find File -type f -perm Permission -iname Pattern (-1.31883525848)
Prediction 9: find File -type f -iname Pattern -perm Permission (-1.32724809647)
Prediction 10: find File -type f -perm Permission -ls (-1.41960632801)

Example 305 (1)
Original English: find all the directories in current folder which start with test
English: find all directori in current folder start with test
GT Command 1: find . -type d -name "test*"
Prediction 1: find File -type d -name Pattern (-0.0683401152492)
Prediction 2: find File -type d \( -name Pattern -prune -or -name Pattern \) -print (-0.421151578426)
Prediction 3: find File -type d -iname Pattern (-0.442849010229)
Prediction 4: find File -type d \( -name Pattern -prune -or -print \) (-0.476158320904)
Prediction 5: find File -type d \( -name Pattern -prune -or -name Pattern \) (-0.506682097912)
Prediction 6: find File -type d \( -name Pattern -prune -or -type d \) (-0.523529350758)
Prediction 7: find File -type d -regextype Pattern -regex Pattern (-0.524387001991)
Prediction 8: find File -type d -regex Pattern (-0.533199906349)
Prediction 9: find File -type d \( -name Pattern -prune -or -type d \) -print (-0.572656989098)
Prediction 10: find File -type d \( -name Pattern -or -name Pattern \) (-0.590808331966)

Example 306 (1)
Original English: Find all files under path_to_dir
English: find all file under _REGEX
GT Command 1: find path_to_dir -type f
Prediction 1: find File -type f (-0.0409900099039)
Prediction 2: find File -type f -print (-0.611931443214)
Prediction 3: find File -type f | xargs -I {} ls -d -l -r -t {} | tail -n Number (-0.940067827702)
Prediction 4: find File -type f | xargs -I {} ls -l -d {} (-0.944947063923)
Prediction 5: find File -type f | xargs -I {} ls -1 -r -c {} | tail -n Number (-0.956622064114)
Prediction 6: find File -type f | xargs -I {} ls -1 -r -c {} | head -n Number (-0.969938397408)
Prediction 7: find File -type f | xargs -I {} ls -d -l -r -c {} | tail -n Number (-0.987997293472)
Prediction 8: find File -type f | xargs -I {} ls -1 -r -c {} | tail File | head -n Number (-0.99853181839)
Prediction 9: find File -type f | xargs -I {} ls -1 -r -c {} | tail File | head File (-1.04729342461)
Prediction 10: find File -type f | xargs -I {} ls -1 -r -c {} | tail File (-1.05518829823)

Example 307 (1)
Original English: find all text files in current folder; which have been modified exactly 5 days ago
English: find all text file in current folder modifi exact _NUM day ago
GT Command 1: find . –name "*.txt" –mtime 5
Prediction 1: find File -name Pattern -mtime Time -daystart (-0.265784978867)
Prediction 2: find File -name Pattern -mtime Time (-0.272276759148)
Prediction 3: find File -name Pattern -daystart -mtime Time (-0.334378689528)
Prediction 4: find File -name Pattern -mtime Time -mtime Time (-0.38229611516)
Prediction 5: find File -name Pattern -daystart -mtime Time -mtime Time (-0.434253811836)
Prediction 6: find File -mtime Time -name Pattern (-0.439283758402)
Prediction 7: find File -name Pattern -mtime Time -type f (-0.46468347311)
Prediction 8: find File -name Pattern -atime Time -type f (-0.496576994658)
Prediction 9: find File -mtime Time -name Pattern -print (-0.527729213238)
Prediction 10: find File -type f -name Pattern -mtime Time -daystart (-0.592531502247)

Example 308 (1)
Original English: Find the top 5 biggest files
English: find top _NUM biggest file
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -5
Prediction 1: find File -type f -links Number -exec ls -l {} \; (-0.250846594572)
Prediction 2: find File -type f -exec ls -a -l {} \; (-0.33510529995)
Prediction 3: find File -type f -name Pattern -exec ls -l {} \; (-0.341780096292)
Prediction 4: find File -type f -perm Permission -ls (-0.353970527649)
Prediction 5: find File -type f -ls (-0.359412133694)
Prediction 6: find File -type f -links Number | xargs -I {} ls -l -t -r {} | tail -n Number (-0.378025531769)
Prediction 7: find File -type f -links Number | xargs -I {} ls -l -d {} (-0.388899981976)
Prediction 8: find File -type f -links Number | xargs -I {} ls -l -t -r {} | head -n Number (-0.390869796276)
Prediction 9: find File -type f -exec ls -l {} \; (-0.438127636909)
Prediction 10: find File -type f -size Size -exec ls -l {} \; (-0.463981240988)

Example 309 (1)
Original English: find all the files in the current directory with the name "wagoneer" which are in the current device.
English: find all file in current directori with name _REGEX in current devic
GT Command 1: find . -xdev -name "wagoneer*" -print
Prediction 1: find File -type f -name Pattern (-0.219048336148)
Prediction 2: find File -name Pattern (-0.258488804102)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.447523027658)
Prediction 4: find File -type f -iname Pattern -print (-0.451644957066)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.464475631714)
Prediction 6: find File -type f -iname Pattern (-0.469964057207)
Prediction 7: find File \( -name Pattern -prune -or -print \) (-0.547344565392)
Prediction 8: find File \( -name Pattern -or -print \) (-0.596849322319)
Prediction 9: find File -iname Pattern (-0.639862060547)
Prediction 10: find File -type f -name Pattern -print (-0.658049285412)

Example 310 (1)
Original English: find all the jpg files in current folder and sort them
English: find all jpg file in current folder and sort
GT Command 1: find . -type f|grep -i "\.jpg$" |sort
Prediction 1: find File -type f -name Pattern | sort -r (-0.214379608631)
Prediction 2: find File -type f -name Pattern -printf Pattern | sort -r -n | head -n Number (-0.224852725863)
Prediction 3: find File -type f -name Pattern -printf Pattern | sort -r -z (-0.23491422832)
Prediction 4: find File -type f -name Pattern -printf Pattern | sort -r (-0.267539471388)
Prediction 5: find File -type f -name Pattern -printf Pattern (-0.270734012127)
Prediction 6: find File -type f -name Pattern -printf Pattern | sort -n -r | head -n Number (-0.292694538832)
Prediction 7: find File -type f -name Pattern -printf Pattern | sort -u (-0.32513025403)
Prediction 8: find File -type f -name Pattern -exec ls -l {} \; (-0.339582055807)
Prediction 9: find File -type f -name Pattern -printf Pattern | sort -r -n | tail File (-0.345950722694)
Prediction 10: find File -type f -name Pattern -printf Pattern | sort -r -n (-0.361468523741)

Example 311 (1)
Original English: search for all "tif" images in current folder
English: search for all _REGEX imag in current folder
GT Command 1: find . -name '*.tif ' -print
Prediction 1: find File -name Pattern (-0.116957768798)
Prediction 2: find File -iname Pattern (-0.384718894958)
Prediction 3: find File -iname Pattern | grep Pattern (-0.533614695072)
Prediction 4: find File -iname Pattern | xargs -I {} grep Pattern {} (-0.538370668888)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.550839304924)
Prediction 6: find File -iname Pattern | xargs -I {} grep -L Pattern {} (-0.58238273859)
Prediction 7: find File -name Pattern | grep Pattern (-0.66687142849)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.690383374691)
Prediction 9: find File -type f -name Pattern (-0.692511856556)
Prediction 10: find File -iname Pattern | grep -i Pattern (-0.707458436489)

Example 312 (1)
Original English: Find all *.txt files that reside under and below /home/wsuNID/
English: find all _REGEX file resid under and below _REGEX
GT Command 1: find /home/wsuNID/ -name "*.txt"
Prediction 1: find File -name Pattern (-0.0377838499844)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.479303687811)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.481974452734)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.484160542488)
Prediction 5: find File -name Pattern -print0 (-0.511197209358)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.561939358711)
Prediction 7: find File -name Pattern | xargs -I {} grep Pattern {} (-0.569221735001)
Prediction 8: find File -name Pattern -print0 | xargs -r -0 -I {} grep -L Pattern {} (-0.570882260799)
Prediction 9: find File -name Pattern -print0 | xargs -r -0 -I {} grep Pattern {} (-0.593609273434)
Prediction 10: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.66313290596)

Example 313 (1)
Original English: Find PHP files with abstract classes
English: find _REGEX file with abstract class
GT Command 1: find . -type f -name "*.php" -exec grep --with-filename -c "^abstract class " {} \; | grep ":[^0]"
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} ls {} (-0.174040302634)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} cp File {} (-0.268718838692)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.27384108305)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} ls -l {} (-0.275357097387)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.324649810791)
Prediction 6: find File -name Pattern -print0 | xargs -r -0 -I {} ls {} (-0.328904598951)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.349701374769)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.351157516241)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} ls -1 -S -s -h {} (-0.357095003128)
Prediction 10: find File -name Pattern -print0 (-0.390417635441)

Example 314 (1)
Original English: find an image in a specific folder
English: find imag in specif folder
GT Command 1: find /home/username/public_html/images -name "articles.jpg"
Prediction 1: find File -iname Pattern (-0.158530294895)
Prediction 2: find File -name Pattern (-0.232718780637)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -print (-0.675253093243)
Prediction 4: find File \( -name Pattern -or -name Pattern \) (-0.676795601845)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.745262265205)
Prediction 6: find File -type f -iname Pattern (-0.749324560165)
Prediction 7: find File \( -iname Pattern -or -iname Pattern \) -print (-0.772489905357)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.782893359661)
Prediction 9: find File -iname Pattern -print (-0.791522681713)
Prediction 10: find File \( -iname Pattern -or -iname Pattern \) (-0.85260283947)

Example 315 (1)
Original English: Copy file header.shtml to directories dir1, dir2, dir3, and dir4
English: copi file _REGEX to directori _REGEX _REGEX _REGEX and _REGEX
GT Command 1: find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
Prediction 1: find File File File -name Pattern | xargs -n -1 -I {} cp File {} (-0.235204309225)
Prediction 2: find File File File File -name Pattern | xargs -n -1 -I {} cp File {} (-0.285623222589)
Prediction 3: find File File -name Pattern | xargs -n -1 -I {} cp File {} (-0.294213980436)
Prediction 4: find File File File -name Pattern | xargs -I {} cp File {} (-0.300520449877)
Prediction 5: find File -type f -name Pattern | xargs -n -1 -I {} cp File {} (-0.301089972258)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -exec cp {} File \; (-0.302894830704)
Prediction 7: find File File File -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.318555146456)
Prediction 8: find File File File File -name Pattern | xargs -I {} cp File {} (-0.347652673721)
Prediction 9: find File File File -name Pattern | xargs -I {} cp {} File (-0.385573536158)
Prediction 10: find File File File -name Pattern | xargs -n -1 -I {} cp {} File (-0.394383788109)

Example 316 (1)
Original English: find all the configuration files in a folder and do not search in the sub folder's directories and display the last ten files.
English: find all configur file in folder and not search in sub folder 's directori and display last _NUM file
GT Command 1: find /etc -maxdepth 2 -name "*.conf" | tail
Prediction 1: find File -name Pattern -printf Pattern (-0.270735502243)
Prediction 2: find File -name Pattern -prune (-0.302864521742)
Prediction 3: find File -name Pattern -printf Pattern | sort -r -n | head -n Number (-0.420771539211)
Prediction 4: find File -maxdepth Number -name Pattern (-0.434076458216)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.449965506792)
Prediction 6: find File -type f -name Pattern -printf Pattern (-0.462330460548)
Prediction 7: find File -type f -name Pattern -not -name Pattern (-0.515779674053)
Prediction 8: find File -type f -name Pattern ! -name Pattern (-0.519125699997)
Prediction 9: find File -type f -name Pattern ! -name Pattern -print (-0.542383432388)
Prediction 10: find File -name Pattern -printf Pattern | sort -r -z (-0.556799590588)

Example 317 (1)
Original English: display all the home folder which end with the extension "sxw" and which have been accessed in the last 3*24 hours and which belong to the user bruno
English: display all home folder end with extens _REGEX and access in last _REGEX hour and belong to user bruno
GT Command 1: find /home -type f -name "*.sxw" -atime -3 -user bruno
Prediction 1: find File -iname Pattern -atime Time -type f (-0.365114688873)
Prediction 2: find File -iname Pattern \( -type d -and ! -perm Permission \) (-0.381268769503)
Prediction 3: find File -iname Pattern \( -type d -and -mtime Time -and ! -name Pattern \) (-0.387095987797)
Prediction 4: find File \( -name Pattern -and -mtime Time -and ! -name Pattern \) (-0.387930572033)
Prediction 5: find File -iname Pattern \( -type d -and ! -name Pattern \) (-0.410188555717)
Prediction 6: find File -name Pattern \( -type d -and -mtime Time -and ! -name Pattern \) (-0.41730555892)
Prediction 7: find File -name Pattern -atime Time -type f -print (-0.457593917847)
Prediction 8: find File -iname Pattern -atime Time -type f -print (-0.471272826195)
Prediction 9: find File -name Pattern -atime Time -type f (-0.472539782524)
Prediction 10: find File -iname Pattern \( -type d -and ! -name Pattern \) -print (-0.47605958581)

Example 318 (1)
Original English: Find files with 002 permission in entire file system with the null character as the delimiter
English: find file with _NUM permiss in entir file system with null charact as delimit
GT Command 1: find / -type f -perm -002 -print0
Prediction 1: find File -type f -perm Permission -print (-0.141239911318)
Prediction 2: find File -perm Permission -type f -exec ls -l {} \; (-0.243467912078)
Prediction 3: find File -perm Permission -type f -print0 | xargs -0 -I {} chmod Permission {} (-0.30644968152)
Prediction 4: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l {} (-0.31500017643)
Prediction 5: find File -perm Permission -type f -print0 | xargs -0 -I {} chmod Unknown {} (-0.326115697622)
Prediction 6: find File -type f -perm Permission -exec chmod Permission {} \; (-0.332152098417)
Prediction 7: find File -type f -perm Permission -print0 (-0.398847043514)
Prediction 8: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -l -S -h {} (-0.409612268209)
Prediction 9: find File -perm Permission -type f -print0 | xargs -0 -I {} ls -1 -S -h {} (-0.416381776333)
Prediction 10: find File -type f -perm Permission (-0.416710406542)

Example 319 (1)
Original English: Find all files that belong to group root
English: find all file belong to group root
GT Command 1: find / -group root
Prediction 1: find File -group Pattern (-0.0809986293316)
Prediction 2: find File -group Pattern -print (-0.285018265247)
Prediction 3: find File -nogroup -print (-1.07308769226)
Prediction 4: find File -uid Pattern -print (-1.1950571537)
Prediction 5: find File -group Pattern -perm Permission -print (-1.23606359959)
Prediction 6: find File -user Pattern -print (-1.23724865913)
Prediction 7: find File -group Pattern -perm Permission (-1.38094329834)
Prediction 8: find File -gid Pattern (-1.42591524124)
Prediction 9: find File ! -group Pattern (-1.43572640419)
Prediction 10: find File -gid Pattern -print (-1.48617875576)

Example 320 (1)
Original English: find all the findme.txt files in the file system
English: find all _REGEX file in file system
GT Command 1: find / -name findme.txt -type f -print
Prediction 1: find File -perm Permission (-0.0146580738947)
Prediction 2: find File -type f -perm Permission (-0.767509222031)
Prediction 3: find File -type f -perm Permission -iname Pattern (-0.825546085835)
Prediction 4: find File -type f -iname Pattern -perm Permission -print (-0.838570535183)
Prediction 5: find File -type f -iname Pattern -perm Permission (-0.90031003952)
Prediction 6: find File -type f -perm Permission -print (-0.922289609909)
Prediction 7: find File -perm Permission -print (-0.980986595154)
Prediction 8: find File -type f -iname Pattern -print (-0.999224305153)
Prediction 9: find File -type f -name Pattern (-1.00045871735)
Prediction 10: find File -type f -perm Permission -iname Pattern -print (-1.00918424129)

Example 321 (1)
Original English: find in the file system for a specific file
English: find in file system for specif file
GT Command 1: find / -name filename -print
Prediction 1: find File -name Pattern (-0.110599718988)
Prediction 2: find File -type f -name Pattern (-0.302774786949)
Prediction 3: find File -type f -iname Pattern -print (-0.573141336441)
Prediction 4: find File -name Pattern -print (-0.62581795454)
Prediction 5: find File -type f -name Pattern -print (-0.685828983784)
Prediction 6: find File -type f -iname Pattern (-0.782254874706)
Prediction 7: find File -perm Permission (-0.892908215523)
Prediction 8: find File -name Pattern -type f (-0.950463593006)
Prediction 9: find File -iname Pattern (-0.954664945602)
Prediction 10: find File -print | grep Pattern (-0.960299253464)

Example 322 (1)
Original English: Find all 400 permission files under /data directory and change their permission to 755
English: find all _NUM permiss file under _REGEX directori and chang permiss to _NUM
GT Command 1: find /data -type f -perm 400 -print | xargs chmod 755
Prediction 1: find File -type f -perm Permission -exec chmod Permission {} \; (-0.0455358624458)
Prediction 2: find File -type f -perm Permission -print -exec chmod Permission {} \; (-0.154249489307)
Prediction 3: find File -type f -exec chmod Permission {} \; (-0.292414695024)
Prediction 4: find File -type f -perm Permission -print0 | xargs -0 -I {} chmod Permission {} (-0.315455526114)
Prediction 5: find File -perm Permission -exec chmod Permission {} \; (-0.365096002817)
Prediction 6: find File -type f -name Pattern -exec chmod Permission {} \; (-0.417344361544)
Prediction 7: find File -type f chmod Permission -exec chmod Permission {} \; (-0.421118289232)
Prediction 8: find File -name Pattern -type f -exec chmod Permission {} \; (-0.458395987749)
Cannot parse: chmod Permission $( find File -type f -perm Permission -print \) - MatchedPairError
Prediction 9: chmod Permission $( find File -type f -perm Permission -print \)  (-0.496422737837)
Prediction 10: find File -type f -perm Permission -exec chmod Permission {} \; -print (-0.567810833454)

Example 323 (1)
Original English: Count the number of files named `file1'
English: count number of file name _REGEX
GT Command 1: find -name file1 | wc -l
Prediction 1: find File -name Pattern | wc -l (-0.0883995294571)
Prediction 2: find File -name Pattern | wc -c (-0.276657879353)
Prediction 3: find File -name Pattern -exec wc -l {} \; (-0.282037705183)
Prediction 4: find File -name Pattern | xargs -I {} wc -l {} (-0.340519428253)
Prediction 5: find File -name Pattern | xargs -I {} wc -c {} (-0.395691424608)
Prediction 6: find File -name Pattern -printf Pattern | wc -c (-0.450808852911)
Prediction 7: find File -maxdepth Number -name Pattern -printf Pattern | wc -c (-0.484146684408)
Prediction 8: find File -name Pattern | xargs -I {} wc -w {} (-0.511781454086)
Prediction 9: find File -printf Pattern | wc -c (-0.549504220486)
Prediction 10: find File -iname Pattern | wc -l (-0.569503962994)

Example 324 (1)
Original English: display all the normal/regular files in the current folder which are empty
English: display all "normal/regular" file in current folder empti
GT Command 1: find . -type f -empty
Prediction 1: find File -type f -empty (-0.0325896069407)
Prediction 2: find File -type f -size Size (-0.477328926325)
Prediction 3: find File -type f -size Size -print (-0.491692632437)
Prediction 4: find File -type f -links Number -print (-0.905134797096)
Prediction 5: find File -type f -prune -empty (-0.950476825237)
Prediction 6: find File -type f ! -empty (-0.959935128689)
Prediction 7: find File -size Size -type f -print (-0.964213788509)
Prediction 8: find File -depth -type f -empty (-1.00591361523)
Prediction 9: find File -type f -newer File (-1.00746238232)
Prediction 10: find File -type f -links Number (-1.03024685383)

Example 325 (2)
Original English: Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
English: find all file under and below current work directori with word _REGEX in file and count number of line in output
GT Command 1: find . -type f -exec grep -n California {} \; -print | wc -l
GT Command 2: find . -type f -exec grep California {} \; -print | wc -l
Prediction 1: find File -type f -exec grep -H -n Pattern {} \; (-0.231773331761)
Prediction 2: find File -type f -print0 | xargs -0 -I {} wc -l {} (-0.267535299063)
Prediction 3: find File -type f -exec grep -H -n Pattern {} \; | wc -l (-0.299609452486)
Prediction 4: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.314363270998)
Prediction 5: find File -type f -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.32281884551)
Prediction 6: find File -type f -exec grep -H Pattern {} \; | wc -l (-0.326266586781)
Prediction 7: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} | wc -l (-0.334000945091)
Prediction 8: find File -type f -exec grep Pattern {} \; | wc -l (-0.335473448038)
Prediction 9: find File -type f -exec grep -H -n Pattern {} \; | wc -c (-0.343098372221)
Prediction 10: find File -type f -exec grep -l Pattern {} \; | wc -l (-0.348291605711)

Example 326 (1)
Original English: Search the current directory and its sub-directories for any file that has "bsd" somewhere in its name.
English: search current directori and sub-directori for ani file _REGEX somewher in name
GT Command 1: find . -name "*bsd*" -print
Prediction 1: find File -name Pattern (-0.0520033463836)
Prediction 2: find File -name Pattern -print (-0.51525747776)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.549506604671)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.598244547844)
Prediction 5: find File -name Pattern \( -print -or -type d -prune \) (-0.669889688492)
Prediction 6: find File -name Pattern \( -print -or -type d -prune -name Pattern \) (-0.706836760044)
Prediction 7: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.73790460825)
Prediction 8: find File -name Pattern -type f (-0.783383190632)
Prediction 9: find File -iname Pattern (-0.792775392532)
Prediction 10: find File \( -name Pattern -or -name Pattern \) {} \;  (-0.796558380127)

Example 327 (1)
Original English: delete all files in the home directory which ahve the name core in them
English: delet all file in home directori name core in
GT Command 1: find ~/ -name 'core*' -exec rm {} \;
Prediction 1: find File -name Pattern -exec rm {} \; (-0.111389294267)
Prediction 2: find File -name Pattern | xargs -I {} rm {} (-0.146910488605)
Prediction 3: find File -name Pattern -print | xargs -I {} rm {} (-0.276029318571)
Prediction 4: find File -name Pattern | xargs -0 -I {} rm {} (-0.334080576897)
Prediction 5: find File -name Pattern -delete (-0.366027146578)
Prediction 6: find File -name Pattern | xargs -r -I {} rm {} (-0.482599645853)
Prediction 7: find File -type f -name Pattern -exec rm {} \; (-0.549782991409)
Prediction 8: find File -name Pattern | xargs -I {} rm -r -f {} (-0.551357448101)
Prediction 9: find File -name Pattern -exec rm -f {} \; (-0.56854313612)
Prediction 10: find File -name Pattern -exec rm -r -f {} \; (-0.577559411526)

Example 328 (1)
Original English: Find all files that belong to a particular group.
English: find all file belong to particular group
GT Command 1: find /var/www -group developer
Prediction 1: find File -group Pattern (-0.109014868736)
Prediction 2: find File -group Pattern -print (-0.353372693062)
Prediction 3: find File -nogroup -print (-0.550787091255)
Prediction 4: find File -type f -group Pattern (-0.808150708675)
Prediction 5: find File -uid Pattern -print (-0.915009200573)
Prediction 6: find File -type f -group Pattern -print (-1.04963338375)
Prediction 7: find File -user Pattern -print (-1.13594150543)
Prediction 8: find File ! -group Pattern (-1.15775299072)
Prediction 9: find File -gid Pattern (-1.27145385742)
Prediction 10: find File -nogroup -group Pattern (-1.33618879318)

Example 329 (1)
Original English: search for a specific pattern in all files in the current folder which have a specific extension.
English: search for specif pattern in all file in current folder specif extens
GT Command 1: find . -name “*.cc” |xargs grep -n “pattern”
Prediction 1: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.192577064037)
Prediction 2: find File -name Pattern -exec grep Pattern {} \; -print (-0.192869439721)
Prediction 3: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.194830283523)
Prediction 4: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.233927115798)
Prediction 5: find File -name Pattern -exec grep -H Pattern {} \; (-0.251877486706)
Prediction 6: find File -name Pattern | xargs -I {} grep Pattern {} (-0.253074914217)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.271019279957)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.273106992245)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.341261476278)
Prediction 10: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.353583455086)

Example 330 (1)
Original English: Find the top 5 big files
English: find top _NUM big file
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -5
Prediction 1: find File -type f -links Number -exec ls -l {} \; (-0.250846594572)
Prediction 2: find File -type f -exec ls -a -l {} \; (-0.33510529995)
Prediction 3: find File -type f -name Pattern -exec ls -l {} \; (-0.341780096292)
Prediction 4: find File -type f -perm Permission -ls (-0.353970557451)
Prediction 5: find File -type f -ls (-0.359412044287)
Prediction 6: find File -type f -links Number | xargs -I {} ls -l -t -r {} | tail -n Number (-0.378025531769)
Prediction 7: find File -type f -links Number | xargs -I {} ls -l -d {} (-0.388899892569)
Prediction 8: find File -type f -links Number | xargs -I {} ls -l -t -r {} | head -n Number (-0.390869796276)
Prediction 9: find File -type f -exec ls -l {} \; (-0.438127607107)
Prediction 10: find File -type f -size Size -exec ls -l {} \; (-0.463981240988)

Example 331 (1)
Original English: Find all files on the system whose names are 'drush'
English: find all file on system whose name _REGEX
GT Command 1: find / -name drush
Prediction 1: find File -name Pattern (-0.00409423792735)
Prediction 2: find File -type f -name Pattern (-0.812928855419)
Prediction 3: find File -name Pattern -print (-1.23673319817)
Prediction 4: find File -type f -name Pattern -print (-1.38454055786)
Prediction 5: find File -iname Pattern (-1.436185956)
Prediction 6: find File -name Pattern -type f (-1.52928960323)
Prediction 7: find File -type f -iname Pattern -print (-1.65719008446)
Prediction 8: find File -type f -iname Pattern (-1.6786198616)
Prediction 9: find File -depth -name Pattern (-1.71929514408)
Prediction 10: find File -name Pattern -newer File (-1.75219213963)

Example 332 (1)
Original English: Display the 5 largest files in the current directory and its sub-directories.
English: display _NUM largest file in current directori and sub-directori
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -5
Prediction 1: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.119406558573)
Prediction 2: find File -printf Pattern | sort -r -n | head -n Number (-0.203015685081)
Prediction 3: find File -type f -printf Pattern | sort -r | head -n Number (-0.221494942904)
Prediction 4: find File -type f -printf Pattern | sort -n -r | head -n Number (-0.294818073511)
Prediction 5: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -L (-0.307612001896)
Prediction 6: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} -0 grep (-0.310290515423)
Prediction 7: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} rm {} (-0.324525862932)
Prediction 8: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep Pattern (-0.328775435686)
Prediction 9: find File -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} grep -l (-0.330513060093)
Prediction 10: find File -printf Pattern | sort -r -n | head File (-0.334373503923)

Example 333 (2)
Original English: find all files in the current folder which are of size 0 bytes.
English: find all file in current folder of size _NUM byte
GT Command 1: find . -type f -empty
GT Command 2: find . -type f -size 0b
Prediction 1: find File -size Size (-0.0114746820182)
Prediction 2: find File -size Size -print (-0.658751606941)
Prediction 3: find File -size Size -exec ls -l {} \; (-0.960041046143)
Prediction 4: find File -type f -size Size (-0.963124513626)
Prediction 5: find File -size Size -exec ls -l -h {} \; (-1.01912736893)
Prediction 6: find File -size Size -size Size (-1.13676464558)
Prediction 7: find File -size Size -size Size -print (-1.17463850975)
Prediction 8: find File -size Size -exec ls -s {} \; (-1.24303507805)
Prediction 9: find File -size Size -exec ls -l -h {} + (-1.27646899223)
Prediction 10: find File -size Size -printf Pattern (-1.29762470722)

Example 334 (1)
Original English: display list of all the hidden regular/normal files in the directory "/dir/to/search/"
English: display list of all hidden "regular/normal" file in directori _REGEX
GT Command 1: find /dir/to/search/ -type f -iname ".*" -ls
Prediction 1: find File -type f -name Pattern -ls (-0.145203143358)
Prediction 2: find File -type f -name Pattern -exec ls -l {} \; (-0.253994047642)
Prediction 3: find File -type f -name Pattern | xargs -I {} ls -l {} (-0.26116245985)
Prediction 4: find File -name Pattern -type f -ls (-0.295466542244)
Prediction 5: find File -type f -name Pattern -print | xargs -I {} ls -l {} (-0.323407173157)
Prediction 6: find File -name Pattern -type f -print | xargs -I {} ls -l {} (-0.345177203417)
Prediction 7: find File -name Pattern -type f -print | xargs -I {} ls -l -t -r {} | tail -n Number (-0.350961536169)
Prediction 8: find File -name Pattern -type f -print | xargs -I {} ls -l -d {} (-0.35549890995)
Prediction 9: find File -type f -name Pattern -exec ls {} \; (-0.368724673986)
Prediction 10: find File -type f -name Pattern | xargs -I {} ls {} (-0.401001483202)

Example 335 (1)
Original English: remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.
English: remov all file in present directori special charact in name and not search in sub directori of current folder
GT Command 1: find . -name '*[+{;"\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;
Prediction 1: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} rm {} (-0.183499887586)
Prediction 2: find File -maxdepth Number -name Pattern | xargs -I {} rm {} (-0.183937847614)
Prediction 3: find File -maxdepth Number -name Pattern -exec rm {} \; (-0.189136058092)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) -print | xargs -I {} rm {} (-0.305000990629)
Prediction 5: find File -name Pattern | xargs -I {} rm {} (-0.308031439781)
Prediction 6: find File \( -name Pattern -prune -or -name Pattern \) -exec rm {} \; (-0.321198016405)
Prediction 7: find File -maxdepth Number -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.333180040121)
Prediction 8: find File -name Pattern -maxdepth Number | xargs -I {} rm {} (-0.351635187864)
Prediction 9: find File -maxdepth Number -name Pattern -exec rm -f {} \; (-0.365134596825)
Prediction 10: find File -name Pattern -prune | xargs -I {} rm {} (-0.372321516275)

Example 336 (1)
Original English: display all the files in the entire file system which are bigger than 10MB
English: display all file in entir file system bigger than _NUMMB
GT Command 1: find / -size +10000k
Prediction 1: find File -size Size (-0.0862964391708)
Prediction 2: find File -size Size -print (-0.277593523264)
Prediction 3: find File -size Size -exec ls -l -h {} \; (-0.620432317257)
Prediction 4: find File -size Size -exec ls -l {} \; (-0.706070840359)
Prediction 5: find File -size Size -exec ls -l -S -h {} \; (-0.723353803158)
Prediction 6: find File -size Size -exec ls -s -h {} \; (-0.749018073082)
Prediction 7: find File -size Size -exec ls -l -S -s {} \; (-0.785227954388)
Prediction 8: find File -size Size -printf Pattern (-0.786772489548)
Prediction 9: find File -size Size -exec ls -l -s {} \; (-0.792598068714)
Prediction 10: find File -size Size -exec ls -l -S {} \; (-0.826600909233)

Example 337 (1)
Original English: list all zero-length files under the current directory
English: list all zero-length file under current directori
GT Command 1: find . -empty -exec ls {} \;
Prediction 1: find File -print | xargs -I {} ls -l {} (-0.351338207722)
Prediction 2: find File ! -name Pattern (-0.381764560938)
Prediction 3: find File -print | xargs -I {} ls -l -d {} (-0.393934845924)
Prediction 4: find File -type f -name Pattern (-0.408675432205)
Prediction 5: find File ! -name Pattern -prune (-0.449299305677)
Prediction 6: find File ! -name Pattern -print (-0.471508055925)
Prediction 7: find File -type f -print | xargs -I {} ls -l -d {} (-0.485863268375)
Prediction 8: find File -exec ls -l {} \; (-0.510729789734)
Prediction 9: find File -type f -print | xargs -I {} ls -l {} (-0.523469746113)
Prediction 10: find File -name Pattern (-0.527807235718)

Example 338 (1)
Original English: find all the text files which are present in the current directory excludinghidden files.
English: find all text file present in current directori excludinghidden file
GT Command 1: find . -type f \( -iname "*.txt" ! -iname ".*" \)
Prediction 1: find File -name Pattern (-0.115051396191)
Prediction 2: find File -name Pattern -print (-0.335860431194)
Prediction 3: find File -name Pattern | xargs -I {} tar -c -v -f Unknown {} (-0.497673124075)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.499302476645)
Prediction 5: find File -name Pattern -print | xargs -I {} grep -L Pattern {} (-0.53024494648)
Prediction 6: find File -name Pattern \( -print -or -type d -prune \) (-0.540068268776)
Prediction 7: find File -name Pattern \( -print -or -type d -prune -name Pattern \) (-0.599210858345)
Prediction 8: find File -name Pattern -print | xargs -I {} rm {} (-0.639467895031)
Prediction 9: find File -name Pattern -type f -print (-0.655951678753)
Prediction 10: find File -name Pattern -print0 (-0.660363793373)

Example 339 (1)
Original English: Search the current directory tree for *cache, *xml, and *html files
English: search current directori tree for _REGEX _REGEX and _REGEX file
GT Command 1: find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
Prediction 1: find File -type f \( -iname Pattern -or -iname Pattern \) (-0.233036518097)
Prediction 2: find File -type f \( -iname Pattern -or -iname Pattern \) -print (-0.259675770998)
Prediction 3: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.317490965128)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern \) (-0.31969845295)
Prediction 5: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.327665805817)
Prediction 6: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.339017033577)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.354515224695)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.354818016291)
Prediction 9: find File \( -iname Pattern -or -iname Pattern \) (-0.368694365025)
Prediction 10: find File -type f \( -iname Pattern -and ! -iname Pattern \) (-0.370192885399)

Example 340 (1)
Original English: List all regular files in /var/www and below that have changed in the last 10 minutes
English: list all regular file in _REGEX and below chang in last _NUM minut
GT Command 1: find /var/www -cmin -10 -type f -printf "%c %pn"
Prediction 1: find File -type f -cmin Number | xargs -I {} ls -l -d {} (-0.209202125669)
Prediction 2: find File -type f -cmin Number | xargs -I {} ls -l {} (-0.224219098687)
Prediction 3: find File -type f -cmin Number | xargs -I {} ls -l -t -r {} | tail -n Number (-0.278319984674)
Prediction 4: find File -cmin Number -type f | xargs -I {} ls -l -d {} (-0.292199373245)
Prediction 5: find File -type f -cmin Number -print | xargs -I {} ls -l -d {} (-0.306524425745)
Prediction 6: find File -type f -cmin Number | xargs -I {} ls -l -t -r {} | head -n Number (-0.311013936996)
Prediction 7: find File -type f -cmin Number | xargs -I {} ls -l -S -h {} (-0.311082333326)
Prediction 8: find File -type f -cmin Number -print | xargs -I {} ls -l {} (-0.317743003368)
Prediction 9: find File -cmin Number -type f | xargs -I {} ls -l {} (-0.372162938118)
Prediction 10: find File -type f -cmin Number | xargs -0 -I {} ls -l {} (-0.377785205841)

Example 341 (1)
Original English: find all the files  a folder which have a specific word in their name
English: find all file folder specif word in name
GT Command 1: find /usr/share -name '*farm*'
Prediction 1: find File -name Pattern (-0.115565307438)
Prediction 2: find File -type f -name Pattern (-0.305246800184)
Prediction 3: find File -iname Pattern (-0.504663586617)
Prediction 4: find File -type f -iname Pattern (-0.512827515602)
Prediction 5: find File -type f -iname Pattern -print (-0.723935782909)
Prediction 6: find File -type f -name Pattern -print (-0.974477827549)
Prediction 7: find File -name Pattern -type f (-1.0286771059)
Prediction 8: find File -name Pattern -print (-1.04878592491)
Prediction 9: find File -print | grep Pattern (-1.14708650112)
Prediction 10: find File -type d -name Pattern (-1.18751299381)

Example 342 (1)
Original English: find all the text files in the folder /home/calvin and do not search beyond 2 levels
English: find all text file in folder _REGEX and not search beyond _NUM level
GT Command 1: find /home/calvin/ -maxdepth 2  -name “*.txt”
Prediction 1: find File -maxdepth Number -name Pattern (-0.0230806004256)
Prediction 2: find File -name Pattern -maxdepth Number -type f (-0.493001431227)
Prediction 3: find File -maxdepth Number -name Pattern -type f (-0.528828144073)
Prediction 4: find File -maxdepth Number -type f -name Pattern (-0.561282813549)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.591655135155)
Prediction 6: find File -name Pattern -maxdepth Number (-0.605060636997)
Prediction 7: find File -mindepth Number -maxdepth Number -name Pattern (-0.645836114883)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) -type f -print (-0.652232825756)
Prediction 9: find File \( -name Pattern -prune -or -name Pattern \) (-0.730337142944)
Prediction 10: find File \( -name Pattern -prune -or -name Pattern \) -type f (-0.755661487579)

Example 343 (1)
Original English: display a long list of all the files in the file system which belong to a specific user and which have suid set
English: display long list of all file in file system belong to specif user and suid set
GT Command 1: find / -type f -user root -perm -4000 -exec ls -l {} \;
Prediction 1: find File -user Pattern -exec ls -l {} \; (-0.253607422113)
Prediction 2: find File -user Pattern -perm Permission -print (-0.258015602827)
Prediction 3: find File -user Pattern -perm Permission -exec ls -l {} \; (-0.26225617528)
Prediction 4: find File -nouser -exec ls -l {} \; (-0.269236862659)
Prediction 5: find File -user Pattern -perm Permission -print -exec ls -l {} \; (-0.283274143934)
Prediction 6: find File -user Pattern -perm Permission -ls (-0.327133089304)
Prediction 7: find File -perm Permission -exec ls -l {} \; (-0.462145596743)
Prediction 8: find File -nouser -ok ls -l {} \; (-0.499211400747)
Prediction 9: find File ! -user Pattern -exec ls -l {} \; (-0.500834822655)
Prediction 10: find File -user Pattern -exec chown -R Pattern {} \; (-0.538471102715)

Example 344 (2)
Original English: find files ending with .jpg:
English: find file end with _REGEX
GT Command 1: find . -name '*.jpg' -print
GT Command 2: find . -name '*.jpg' -print ./bar/foo.jpg
Prediction 1: find File -name Pattern (-0.0232196822762)
Prediction 2: find File -name Pattern -print (-0.654660701752)
Prediction 3: find File -name Pattern -name Pattern (-0.706683397293)
Prediction 4: find File -name Pattern -type f (-0.733517467976)
Prediction 5: find File -name Pattern -type f -print (-0.881620407104)
Prediction 6: find File -name Pattern -name Pattern -print (-0.980579018593)
Prediction 7: find File -name Pattern -prune (-1.01037526131)
Prediction 8: find File -type f -name Pattern (-1.14362752438)
Prediction 9: find File -name Pattern -prune -name Pattern (-1.14690387249)
Prediction 10: find File -name Pattern -print0 (-1.16341972351)

Example 345 (1)
Original English: find directory which case-insensitive name is foo in current directory.
English: find directori case-insensit name foo in current directori
GT Command 1: find . -iname foo -type d
Prediction 1: find File -iname Pattern -type d (-0.127901479602)
Prediction 2: find File -type d -iname Pattern (-0.209146276116)
Prediction 3: find File -name Pattern -type d (-0.416278362274)
Prediction 4: find File -iname Pattern \( -type d -or -type d \) (-0.55698800087)
Prediction 5: find File -type d -name Pattern (-0.573356926441)
Prediction 6: find File -type d -iname Pattern -ls (-0.645491540432)
Prediction 7: find File -type d -iname Pattern -printf Pattern (-0.648916423321)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) (-0.661734163761)
Prediction 9: find File -type d -iname Pattern -print (-0.685670793056)
Prediction 10: find File \( -iname Pattern -or -iname Pattern \) -type d (-0.68648314476)

Example 346 (2)
Original English: List all regular files residing in the current directory tree and containing string "/bin/ksh"
English: list all regular file resid in current directori tree and contain string _REGEX
GT Command 1: find . -type f -print | xargs grep -li 'bin/ksh'
GT Command 2: find . -type f -exec grep -li '/bin/ksh' {} \;
Prediction 1: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.222499236465)
Prediction 2: find File -type f | xargs -I {} grep -l Pattern {} (-0.231336355209)
Prediction 3: find File -type f -exec grep -l Pattern {} \; (-0.274804800749)
Prediction 4: find File -type f | xargs -I {} grep -L Pattern {} (-0.281021237373)
Prediction 5: find File -type f -exec grep -H Pattern {} \; (-0.285734117031)
Prediction 6: find File -type f -exec grep -H -n Pattern {} \; (-0.310333967209)
Prediction 7: find File -type f | xargs -I {} grep Pattern {} (-0.31445145607)
Prediction 8: find File -type f -exec grep -q Pattern {} \; -print (-0.338958054781)
Prediction 9: find File -type f -print0 | xargs -0 -I {} grep -l -i Pattern {} (-0.352351665497)
Prediction 10: find File -type f -exec grep -l Pattern {} + (-0.355531811714)

Example 347 (1)
Original English: find all the files that have been changed exactly 24 hours ago
English: find all file chang exact _NUM hour ago
GT Command 1: find . -ctime 1 -type f
Prediction 1: find File -cmin Number (-0.124821990728)
Prediction 2: find File -ctime Time (-0.423036456108)
Prediction 3: find File -type f -ctime Time (-0.492938429117)
Prediction 4: find File -cmin Number -print (-0.698282182217)
Prediction 5: find File -maxdepth Number -cmin Number (-0.87811088562)
Prediction 6: find File -daystart -ctime Time (-0.88781774044)
Prediction 7: find File -mtime Time (-1.02137994766)
Prediction 8: find File -amin Number (-1.1079095602)
Prediction 9: find File -perm Permission (-1.17152607441)
Prediction 10: find File -perm Permission -print (-1.21977603436)

Example 348 (1)
Original English: search for all the files in the current folder which start with "my"
English: search for all file in current folder start with _REGEX
GT Command 1: find . -name 'my*'
Prediction 1: find File -name Pattern (-0.0130281755701)
Prediction 2: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.690810084343)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.707534492016)
Prediction 4: find File \( -name Pattern -prune -or -name Pattern \) (-0.714164555073)
Prediction 5: find File -type f -name Pattern (-0.764479696751)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.874728679657)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -print (-0.880567073822)
Prediction 8: find File \( -name Pattern -prune -or -name Pattern \) {} \; -print (-0.941807091236)
Prediction 9: find File -iname Pattern (-0.942549705505)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.977087378502)

Example 349 (8)
Original English: Delete all .svn files/directories under current directory
English: delet all _REGEX "files/directories" under current directori
GT Command 1: find . -name .svn -delete
GT Command 2: find . -name .svn | xargs rm -fr
GT Command 3: find . -name .svn |xargs rm -rf
GT Command 4: find . -depth -name .svn -exec rm -fr {} \;
GT Command 5: find . -name .svn -exec rm -rf '{}' \;
GT Command 6: find . -name .svn -exec rm -v {} \;
GT Command 7: find . -name .svn -exec rm -rf {} +
GT Command 8: find . -name .svn -exec rm -rf {} \;
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.140209704638)
Prediction 2: find File -name Pattern -delete (-0.200343161821)
Prediction 3: find File -name Pattern -exec rm {} \; (-0.280694931746)
Prediction 4: find File -name Pattern | xargs -I {} rm -r -f {} (-0.334076136351)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.335151165724)
Prediction 6: find File -name Pattern -print | xargs -I {} rm {} (-0.345982283354)
Prediction 7: find File -name Pattern -exec rm -r -f {} \; (-0.403686463833)
Prediction 8: find File -name Pattern | xargs -0 -I {} rm {} (-0.410703927279)
Prediction 9: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.416890919209)
Cannot parse: rm -r -f $( find File -name Pattern \) - MatchedPairError
Prediction 10: rm -r -f $( find File -name Pattern \)  (-0.456807076931)

Example 350 (1)
Original English: Search the current directory tree for files containing "sh" in their names
English: search current directori tree for file contain _REGEX in name
GT Command 1: find . -name "*sh*"
Prediction 1: find File -iname Pattern (-0.140180960298)
Prediction 2: find File -name Pattern (-0.246874794364)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.713454425335)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.806074500084)
Prediction 5: find File \( -iname Pattern -or -iname Pattern \) (-0.84859919548)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.866266489029)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.9113484025)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) -print (-0.912334322929)
Prediction 9: find File -iname Pattern | grep Pattern (-1.01092159748)
Prediction 10: find File -iname Pattern -print (-1.01394724846)

Example 351 (1)
Original English: find the largest file in the current directory and sub directories
English: find largest file in current directori and sub directori
GT Command 1: find . -type f -exec ls -s {} \; | sort -n -r | head -1
Prediction 1: find File -maxdepth Number -type f -printf Pattern | sort -r -n | head -n Number (-0.120284803212)
Prediction 2: find File -maxdepth Number -type f -printf Pattern | sort -n -r | head -n Number (-0.207953929901)
Prediction 3: find File -maxdepth Number -type f -printf Pattern | sort -r -n | head -n Number | xargs -I {} (-0.219903588295)
Prediction 4: find File -maxdepth Number -type f -printf Pattern | sort -r | head -n Number (-0.261848002672)
Prediction 5: find File -maxdepth Number -printf Pattern | sort -r -n | head -n Number (-0.282237648964)
Prediction 6: find File -type f -printf Pattern | sort -r -n | head -n Number (-0.283690065145)
Prediction 7: find File -maxdepth Number -type f -printf Pattern | sort -r -n | tail -n Number (-0.29862087965)
Prediction 8: find File -printf Pattern | sort -r -n | head -n Number (-0.309529989958)
Prediction 9: find File -maxdepth Number -type f -printf Pattern | sort -r -n | head -n Number | sort -r (-0.352137058973)
Prediction 10: find File -maxdepth Number -type f -printf Pattern | sort -r -n | head -n Number | sort -r -n (-0.357634931803)

Example 352 (2)
Original English: display all the .sh scripts and perl files in the current folder
English: display all _REGEX script and perl file in current folder
GT Command 1: find . -type f \( -iname "*.sh" -or -iname "*.pl" \)
GT Command 2: find . -type f \( -name "*.[sS][hH]" -o -name "*.[pP][lL]" \)
Prediction 1: find File \( -name Pattern -or -name Pattern \) (-0.29682636261)
Prediction 2: find File -name Pattern (-0.357723116875)
Prediction 3: find File -name Pattern -print0 (-0.362362772226)
Prediction 4: find File -name Pattern -printf Pattern (-0.368225455284)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.371176362038)
Prediction 6: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.382433772087)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.398412048817)
Prediction 8: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.41629588604)
Prediction 9: find File -name Pattern | grep -P Pattern (-0.428374230862)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -print (-0.453468382359)

Example 353 (1)
Original English: find files in the current directory and sub-directories, that were accessed within last hour
English: find file in current directori and sub-directori access within last hour
GT Command 1: find -amin -60
Prediction 1: find File -amin Number (-0.115797683597)
Prediction 2: find File -atime Time (-0.305271983147)
Prediction 3: find File -atime Time -amin Number (-0.888402402401)
Prediction 4: find File \( -atime Time -or -size Size \) (-0.890030741692)
Prediction 5: find File \( -atime Time -or -size Size \) -print (-0.896558463573)
Prediction 6: find File -atime Time -print (-0.961612224579)
Prediction 7: find File \( -amin Number -and -size Size \) (-0.973013222218)
Prediction 8: find File -mmin Number (-0.983934044838)
Prediction 9: find File \( -atime Time -or -atime Time \) (-1.05642390251)
Prediction 10: find File -user Pattern -atime Time (-1.0594419241)

Example 354 (1)
Original English: display all the files in current folder having specific word in their name
English: display all file in current folder have specif word in name
GT Command 1: find -name "*pattern*"
Prediction 1: find File -iname Pattern (-0.0996129587293)
Prediction 2: find File -name Pattern (-0.314384937286)
Prediction 3: find File -type f -iname Pattern (-0.833455502987)
Prediction 4: find File \( -iname Pattern -or -iname Pattern \) -print (-0.83954679966)
Prediction 5: find File \( -name Pattern -or -name Pattern \) (-0.84276175499)
Prediction 6: find File \( -iname Pattern -or -iname Pattern \) (-0.857798159122)
Prediction 7: find File -type f -name Pattern (-0.872954666615)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.877723038197)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.914858400822)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.933058738708)

Example 355 (2)
Original English: Find all directories named CVS, and deletes them and their contents.
English: find all directori name _REGEX and delet and content
GT Command 1: find . -type d -name CVS -exec rm -r {} \;
GT Command 2: find . -type d -name CVS -exec rm -r {} \;
Prediction 1: find File -type d -name Pattern -exec rm -r -f {} \; (-0.206264272332)
Prediction 2: find File -type d -name Pattern -exec rm -f {} \; (-0.226729884744)
Prediction 3: find File -type d -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.252309054136)
Prediction 4: find File -name Pattern -type d -print0 | xargs -0 -I {} rm {} (-0.254632979631)
Prediction 5: find File -type d -name Pattern -print0 | xargs -0 -I {} rm {} (-0.259407430887)
Prediction 6: find File -type d -name Pattern -execdir rm -r -f {} \; (-0.26175186038)
Prediction 7: find File -name Pattern -type d -print0 | xargs -0 -I {} rm -r -f {} (-0.280710428953)
Prediction 8: find File -type d -name Pattern -print | xargs -I {} rm {} (-0.283680230379)
Prediction 9: find File -type d -name Pattern -print | xargs -I {} rm -f {} (-0.284932762384)
Prediction 10: find File -name Pattern -type d -exec rm -r -f {} \; (-0.292795389891)

Example 356 (1)
Original English: Search the .c files residing in the Lib/ directory tree for lines beginning with "PyErr"
English: search _REGEX file resid in _REGEX directori tree for line begin with _REGEX
GT Command 1: find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.133318707347)
Prediction 2: find File -name Pattern -exec grep Pattern {} \; (-0.192043557763)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.214002847672)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.245162725449)
Prediction 5: find File -name Pattern -exec grep Pattern {} \; -print (-0.27099364996)
Prediction 6: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.318225294352)
Prediction 7: find File -name Pattern | xargs -n -2 -I {} grep Pattern {} (-0.347633361816)
Prediction 8: find File -name Pattern -print | xargs -I {} grep Pattern {} (-0.364793509245)
Prediction 9: find File -name Pattern -exec grep -H Pattern {} \; (-0.369080781937)
Prediction 10: find File -name Pattern | xargs -t -i -I {} grep Pattern {} {} (-0.400479882956)

Example 357 (1)
Original English: search for directories in the folder "test" which end have 5 digits as their name
English: search for directori in folder _REGEX end _NUM digit as name
GT Command 1: find ./test -type d -name '[0-9][0-9][0-9][0-9][0-9]'
Prediction 1: find File -type d -name Pattern (-0.0154086584225)
Prediction 2: find File -name Pattern -type d (-0.518044769764)
Prediction 3: find File -type d \( -name Pattern -or -name Pattern \) (-0.571979284286)
Prediction 4: find File -type d \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.612585008144)
Prediction 5: find File -type d \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.664376854897)
Prediction 6: find File -type d \( -name Pattern -prune -or -name Pattern \) (-0.669019401073)
Prediction 7: find File -type d \( -name Pattern -prune -or -name Pattern \) -print (-0.679596245289)
Prediction 8: find File \( -type d -name Pattern -or -name Pattern \) (-0.692725360394)
Prediction 9: find File -type d \( -name Pattern -or -name Pattern \) -type f (-0.698712944984)
Prediction 10: find File -type d \( -name Pattern -prune -or -name Pattern \) -type f -print (-0.699330329895)

Example 358 (1)
Original English: display all the files in the current folder which start with either "fileA_" or "fileB_"
English: display all file in current folder start with either _REGEX or _REGEX
GT Command 1: find . -name 'fileA_*' -o -name 'fileB_*'
Prediction 1: find File -regex Pattern (-0.221239224076)
Prediction 2: find File \( -regex Pattern -and -not -regex Pattern \) (-0.225436657667)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.285672813654)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -print (-0.374891877174)
Prediction 5: find File -regextype Pattern -regex Pattern (-0.423484414816)
Prediction 6: find File \( -path File -prune -or -print \) (-0.449782580137)
Prediction 7: find File \( -regex Pattern -and ! -name Pattern \) (-0.466888487339)
Prediction 8: find File \( -name Pattern -or -print \) (-0.493629574776)
Prediction 9: find File \( -regex Pattern -and -not -name Pattern \) (-0.510802745819)
Prediction 10: find File \( -iname Pattern -or -iname Pattern \) (-0.540346860886)

Example 359 (1)
Original English: find all the html files in the current folder which have not been modified in the last 7 days
English: find all html file in current folder not modifi in last _NUM day
GT Command 1: find . -mtime +7 -name "*.html" -print
Prediction 1: find File -mtime Time -name Pattern -print (-0.0721384435892)
Prediction 2: find File -mtime Time -name Pattern -mtime Time (-0.376087427139)
Prediction 3: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -t -r {} | tail -n Number (-0.432082980871)
Prediction 4: find File -mtime Time -mtime Time -name Pattern -print (-0.499354571104)
Prediction 5: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -t -r {} | head -n Number (-0.507959604263)
Prediction 6: find File -mtime Time -name Pattern -print | xargs -I {} ls -l -d {} (-0.520985662937)
Prediction 7: find File -daystart -mtime Time -name Pattern -print (-0.529799163342)
Prediction 8: find File -mtime Time -name Pattern (-0.537947952747)
Prediction 9: find File -mtime Time -daystart -name Pattern (-0.54503339529)
Prediction 10: find File -daystart -mtime Time -name Pattern -mtime Time (-0.551407575607)

Example 360 (1)
Original English: Remove all Thumbs.db files from the current directory tree
English: remov all _REGEX file from current directori tree
GT Command 1: find . -name Thumbs.db -exec rm {} \;
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.0323443487287)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.213967204094)
Prediction 3: find File -name Pattern | xargs -I {} rm -f {} (-0.341043531895)
Prediction 4: find File -name Pattern -exec rm {} \; (-0.357566684484)
Prediction 5: find File -name Pattern | xargs -n -1 -I {} rm {} (-0.36349439621)
Prediction 6: find File -name Pattern | xargs -0 -I {} rm {} (-0.38482350111)
Prediction 7: find File -name Pattern -exec rm -f {} \; (-0.428625673056)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} rm -f {} (-0.434783130884)
Prediction 9: find File -name Pattern | xargs -I {} rm -r -f {} (-0.440563559532)
Prediction 10: find File -type f -name Pattern | xargs -I {} rm {} (-0.500034987926)

Example 361 (1)
Original English: save the list of the files in the current directory to a file “foo”
English: save list of file in current directori to file _REGEX
GT Command 1: find . -fprint foo
Prediction 1: find File -print | xargs -I {} ls -l -d {} (-0.329712510109)
Prediction 2: find File -exec ls -l {} \; (-0.499033033848)
Prediction 3: find File -print | xargs -I {} grep -L Pattern {} (-0.518177449703)
Prediction 4: find File -print | xargs -I {} ls -d {} (-0.52740675211)
Prediction 5: find File -print | xargs -I {} ls -l {} (-0.5644313097)
Prediction 6: find File -print | xargs -I {} grep Pattern {} (-0.579179644585)
Prediction 7: find File -name Pattern (-0.583287537098)
Prediction 8: find File ! -name Pattern -prune (-0.585840642452)
Prediction 9: find File -print | xargs -I {} ls -d -l {} (-0.603471696377)
Prediction 10: find File -print | xargs -I {} ls -1 -S -h {} (-0.620028674603)

Example 362 (1)
Original English: Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c
English: find recurs all regular file in directori tree b chang within last _NUM minut and copi to directori c
GT Command 1: find b -type f -cmin -5 -exec cp '{}' c \;
Prediction 1: find File -maxdepth Number -cmin Number -type f | xargs -I {} cp -t File {} (-0.302227169275)
Prediction 2: find File -maxdepth Number -type f -cmin Number | xargs -0 -I {} cp -t File {} (-0.327458918095)
Prediction 3: find File -maxdepth Number -type f -cmin Number | xargs -I {} cp -t File {} (-0.33349519968)
Prediction 4: find File -maxdepth Number -cmin Number -type f | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.3401273489)
Prediction 5: find File -type f -cmin Number | xargs -I {} cp -t File {} (-0.341141790152)
Prediction 6: find File -type f -cmin Number | xargs -I {} cp {} File (-0.341727733612)
Prediction 7: find File -maxdepth Number -cmin Number -type f | xargs -I {} cp {} File (-0.34428602457)
Prediction 8: find File -type f -cmin Number | xargs -0 -I {} cp -t File {} (-0.369026184082)
Prediction 9: find File -maxdepth Number -type f -cmin Number | xargs -I {} cp {} File (-0.38408818841)
Prediction 10: find File -maxdepth Number -cmin Number -type f | wc -l (-0.392476558685)

Example 363 (1)
Original English: remove all the files in current folder which have the extension "DS_Store"
English: remov all file in current folder extens _REGEX
GT Command 1: find . -name ".DS_Store" -exec rm {} \;
Prediction 1: find File -name Pattern -exec rm {} \; (-0.0912708640099)
Prediction 2: find File -name Pattern | xargs -I {} rm {} (-0.101628378034)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.345379441977)
Prediction 4: find File -name Pattern -print | xargs -I {} rm {} (-0.382330715656)
Prediction 5: find File -name Pattern -exec rm -f {} \; (-0.423855245113)
Prediction 6: find File -type f -name Pattern -exec rm -f {} \; (-0.434935957193)
Prediction 7: find File -name Pattern | xargs -I {} rm -f {} (-0.473525047302)
Prediction 8: find File -type f -name Pattern -exec rm {} \; (-0.501412391663)
Prediction 9: find File -name Pattern | xargs -r -I {} rm {} (-0.505324959755)
Prediction 10: find File -name Pattern | xargs -i -I {} rm {} (-0.52402728796)

Example 364 (1)
Original English: Find all httpd.conf files in entire file system
English: find all _REGEX file in entir file system
GT Command 1: find / -name httpd.conf
Prediction 1: find File -perm Permission (-0.0181499477476)
Prediction 2: find File -type f -perm Permission (-0.723469257355)
Prediction 3: find File -type f -name Pattern (-0.852651357651)
Prediction 4: find File -type f -iname Pattern -perm Permission -print (-0.86238950491)
Prediction 5: find File -type f -iname Pattern -perm Permission (-0.888185858727)
Prediction 6: find File -type f -perm Permission -iname Pattern (-0.900152266026)
Prediction 7: find File -type f -iname Pattern (-0.936418116093)
Prediction 8: find File -type f -iname Pattern -print (-0.952495217323)
Prediction 9: find File -type f -perm Permission -print (-0.963969290257)
Prediction 10: find File -name Pattern (-1.01152050495)

Example 365 (1)
Original English: Find all CSS files
English: find all _REGEX file
GT Command 1: find . -name "*.css"
Prediction 1: find File -perm Permission (-0.00914994813502)
Prediction 2: find File -type f -name Pattern (-0.902846872807)
Prediction 3: find File -type f -perm Permission (-0.933362066746)
Prediction 4: find File -type f -iname Pattern (-0.954580008984)
Prediction 5: find File -type f -iname Pattern -perm Permission (-1.03150761127)
Prediction 6: find File -type f -perm Permission -iname Pattern (-1.0462654829)
Prediction 7: find File -type f -iname Pattern -perm Permission -print (-1.05806195736)
Prediction 8: find File -type f -iname Pattern -print (-1.08988535404)
Prediction 9: find File -name Pattern (-1.1182769537)
Prediction 10: find File -perm Permission -print (-1.26403987408)

Example 366 (1)
Original English: display all directories in the entire file system
English: display all directori in entir file system
GT Command 1: find / -type d -print
Prediction 1: find File -type d -print (-0.205744743347)
Prediction 2: find File -type d (-0.212311536074)
Prediction 3: find File -type d -name Pattern (-0.403547734022)
Prediction 4: find File -type d -name Pattern -print (-0.433858156204)
Prediction 5: find File -type d \( -print -or -type d -prune \) (-0.629573643208)
Prediction 6: find File -type d \( -print -or -type d -prune -or -name Pattern \) -type f -print (-0.660929679871)
Prediction 7: find File -type d \( -print -or -type d -prune -or -name Pattern \) -print (-0.664354205132)
Prediction 8: find File -type d -exec ls -l -d {} \; (-0.694250464439)
Prediction 9: find File -type d \( -print -or -type d -prune -or -name Pattern \) -type f (-0.707327067852)
Prediction 10: find File -type d \( -print -or -type d -prune -or -name Pattern \) (-0.733819425106)

Example 367 (1)
Original English: search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday
English: search for all perl file in folder _REGEX modifi yesterday
GT Command 1: find /nas/projects/mgmt/scripts/perl -mtime 1 -daystart -iname "*.pl"
Prediction 1: find File -type f -name Pattern -mtime Time -daystart (-0.332283347845)
Prediction 2: find File -name Pattern -daystart -mtime Time -type f (-0.336538612843)
Prediction 3: find File -type f -name Pattern -daystart -mtime Time (-0.379834830761)
Prediction 4: find File -daystart -mtime Time -type f -name Pattern (-0.385340005159)
Prediction 5: find File -type f -mtime Time -iname Pattern -mtime Time (-0.412779957056)
Prediction 6: find File -type f -daystart -mtime Time -iname Pattern (-0.436999261379)
Prediction 7: find File -type f -mtime Time -daystart -iname Pattern (-0.442686975002)
Prediction 8: find File -type f -mtime Time -iname Pattern (-0.456779181957)
Prediction 9: find File -type f -mtime Time -name Pattern (-0.47912812233)
Prediction 10: find File -daystart -type f -mtime Time -iname Pattern (-0.48443582654)

Example 368 (2)
Original English: Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
English: find file in current directori tree whose name begin with _REGEX and whose size _NUM and remov
GT Command 1: find -name 'file*' -size 0 -delete
GT Command 2: find . -name 'file*' -size 0 -print0 | xargs -0 rm
Prediction 1: find File -name Pattern -size Size -exec rm {} \; (-0.111071646214)
Prediction 2: find File -name Pattern -size Size -print | xargs -I {} rm {} (-0.170366033912)
Prediction 3: find File -name Pattern -size Size -print | xargs -I {} rm -f {} (-0.280267030001)
Prediction 4: find File -name Pattern -size Size -print | xargs -0 -I {} rm {} (-0.335698902607)
Prediction 5: find File -name Pattern -printf Pattern | xargs -0 -I {} rm {} (-0.343828052282)
Prediction 6: find File -name Pattern -size Size -print | xargs -r -I {} rm {} (-0.355790406466)
Prediction 7: find File -name Pattern -size Size | xargs -I {} rm {} (-0.355907797813)
Prediction 8: find File -name Pattern -size Size -print (-0.365803480148)
Prediction 9: find File -name Pattern -printf Pattern | xargs -I {} rm {} (-0.388369053602)
Prediction 10: find File -name Pattern -size Size -print | xargs -i -I {} rm {} (-0.400595992804)

Example 369 (1)
Original English: copy all the files with the extension ".type" from one folder to a target directory
English: copi all file with extens _REGEX from _NUM folder to target directori
GT Command 1: find "$sourcedir" -type f -name "*.type" | xargs cp -t targetdir
Prediction 1: find File -type f -name Pattern -exec cp {} File \; (-0.217968523502)
Prediction 2: find File -type f -name Pattern -ok cp {} File \; (-0.241736799479)
Prediction 3: find File -name Pattern -ok cp File {} \; (-0.247629955411)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -n -1 -I {} cp File {} (-0.255096018314)
Prediction 5: find File -name Pattern -type f -print0 | xargs -0 -I {} cp -t File {} (-0.261786222458)
Prediction 6: find File -type f -name Pattern -ok cp File {} \; (-0.283953070641)
Prediction 7: find File -name Pattern -type f -print0 | xargs -0 -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.307453662157)
Prediction 8: find File -type f -name Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.311135262251)
Prediction 9: find File -name Pattern -type f -exec cp {} File \; (-0.325395047665)
Prediction 10: find File -type f -name Pattern -ok rm {} \; (-0.337074846029)

Example 370 (1)
Original English: Search the current directory, except the subdirectory tree ".svn", for files whose name is "foo.cpp"
English: search current directori except subdirectori tree _REGEX for file whose name _REGEX
GT Command 1: find . -name 'foo.cpp' '!' -path '.svn'
Prediction 1: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.247961297631)
Prediction 2: find File \( -path File -prune -or -name Pattern \) -print (-0.274455994368)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.283136636019)
Prediction 4: find File \( -name Pattern -or -name Pattern \) -prune -or -print \) (-0.351427257061)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.365391910076)
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-0.372784405947)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.382297247648)
Prediction 8: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.393129736185)
Prediction 9: find File \( -name Pattern -and -not -name Pattern \) (-0.407858043909)
Prediction 10: find File -name Pattern -not -name Pattern (-0.43865031004)

Example 371 (1)
Original English: Find all files that belongs to user Tecmint under /home directory
English: find all file belong to user _REGEX under _REGEX directori
GT Command 1: find /home -user tecmint
Prediction 1: find File -user Pattern -iname Pattern (-0.182897150517)
Prediction 2: find File -user Pattern (-0.271623849869)
Prediction 3: find File -user Pattern -name Pattern (-0.393387794495)
Prediction 4: find File -user Pattern -print (-0.444328844547)
Prediction 5: find File -user Pattern -type f (-0.579752922058)
Prediction 6: find File -user Pattern -type f -iname Pattern (-0.601943254471)
Prediction 7: find File -user Pattern -type f -name Pattern (-0.637022793293)
Prediction 8: find File -user Pattern -type f -print (-0.737944304943)
Prediction 9: find File -user Pattern -type f -iname Pattern -print (-0.772139310837)
Prediction 10: find File -user Pattern -iname Pattern -print (-0.775132715702)

Example 372 (1)
Original English: search for all the rpm files in the file system which reside in the same partition as that of the root
English: search for all rpm file in file system resid in same partit as of root
GT Command 1: find / -xdev -name "*.rpm"
Prediction 1: find File -name Pattern -newer File (-0.282560914755)
Prediction 2: find File -name Pattern -size Size (-0.39078950882)
Prediction 3: find File -name Pattern (-0.451561570168)
Prediction 4: find File -xdev -name Pattern (-0.492331594229)
Prediction 5: find File -name Pattern -size Size -print (-0.546099424362)
Prediction 6: find File -iname Pattern -size Size (-0.660469651222)
Prediction 7: find File -fstype Unknown -name Pattern (-0.697952747345)
Prediction 8: find File -iname Pattern (-0.732031822205)
Prediction 9: find File -newer File (-0.735022187233)
Prediction 10: find File -follow -name Pattern (-0.775672793388)

Example 373 (1)
Original English: force delete all the files that have been modified in the last 3 days
English: forc delet all file modifi in last _NUM day
GT Command 1: find . -mtime -3 -exec rm -rf {} \;
Prediction 1: find File -mtime Time -exec rm -f {} \; (-0.09885597229)
Prediction 2: find File -type f -mtime Time -exec rm -f {} \; (-0.189304634929)
Prediction 3: find File -daystart -mtime Time -exec rm -f {} \; (-0.310762554407)
Prediction 4: find File -mtime Time -exec rm -r -f {} \; (-0.317112773657)
Prediction 5: find File -mtime Time -print0 | xargs -0 -I {} rm -r -f {} (-0.317746579647)
Prediction 6: find File -mtime Time -print0 | xargs -0 -I {} rm {} (-0.323039472103)
Prediction 7: find File -daystart -mtime Time -exec rm -r -f {} \; (-0.337740659714)
Prediction 8: find File -mtime Time | xargs -I {} rm {} (-0.379904776812)
Prediction 9: find File -mindepth Number -mtime Time -exec rm -f {} \; (-0.388431727886)
Prediction 10: find File -mtime Time -exec rm {} \; (-0.390504717827)

Example 374 (3)
Original English: Search the current directory tree for regular files that contain "string"
English: search current directori tree for regular file contain _REGEX
GT Command 1: find . -type f -print0 | xargs -0 grep string
GT Command 2: find . -type f -printf '"%p"\n' | xargs grep string
GT Command 3: find . -type f | xargs grep string
Prediction 1: find File -type f -print0 | xargs -0 -I {} grep Pattern {} (-0.195348203182)
Prediction 2: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.195947647095)
Prediction 3: find File -type f -print0 | xargs -0 -I {} grep -L Pattern {} (-0.225853323936)
Prediction 4: find File -type f -print0 | xargs -0 -I {} grep -E Pattern {} (-0.265026330948)
Prediction 5: find File -type f | xargs -I {} grep -L Pattern {} (-0.275569051504)
Prediction 6: find File -type f -name Pattern | xargs -I {} grep -L Pattern {} (-0.276875019073)
Prediction 7: find File -type f | xargs -I {} grep Pattern {} (-0.283857375383)
Prediction 8: find File -type f -print0 | xargs -0 -I {} grep -H Pattern {} (-0.300993233919)
Prediction 9: find File -type f -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.305661469698)
Prediction 10: find File -type f -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.331715583801)

Example 375 (1)
Original English: Find all files and directories in the current directory tree except those whose name is "dirname", case insensitive
English: find all file and directori in current directori tree except whose name _REGEX case insensit
GT Command 1: find ./ -iname ! -iname dirname
Prediction 1: find File -iname Pattern (-0.2427200526)
Prediction 2: find File ! -iname Pattern (-0.380951821804)
Prediction 3: find File \( -iname Pattern -and ! -iname Pattern \) (-0.406978309155)
Prediction 4: find File \( -path File -prune -or -print \) (-0.409829258919)
Prediction 5: find File \( -iname Pattern -or -iname Pattern \) (-0.474029541016)
Prediction 6: find File \( -iname Pattern -and ! -path File \) (-0.495320230722)
Prediction 7: find File \( -iname Pattern -and -not -iname Pattern \) (-0.526931583881)
Prediction 8: find File \( -iname Pattern -or -iname Pattern \) -print (-0.535399973392)
Prediction 9: find File \( -iname Pattern -and -not -path File \) (-0.552179276943)
Prediction 10: find File -type f -iname Pattern ! -iname Pattern (-0.610321342945)

Example 376 (1)
Original English: Find files ending with .mp3 or .jpg
English: find file end with _REGEX or _REGEX
GT Command 1: find . \( -name '*.mp3' -o -name '*.jpg' \) -print
Prediction 1: find File -name Pattern | grep -v Pattern (-0.286938279867)
Prediction 2: find File -name Pattern (-0.336119353771)
Prediction 3: find File \( -name Pattern -or -name Pattern \) (-0.365298688412)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.391760289669)
Prediction 5: find File -name Pattern | xargs -r -I {} grep -L Pattern {} (-0.395924299955)
Prediction 6: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.396698087454)
Prediction 7: find File -name Pattern | grep -E Pattern (-0.415549099445)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -print (-0.436338096857)
Prediction 9: find File -name Pattern | xargs -r -I {} grep Pattern {} (-0.462161898613)
Prediction 10: find File -name Pattern | grep Pattern (-0.466366231441)

Example 377 (3)
Original English: delete all the files ending with "~" in current folder
English: delet all file end with _PARAMET in current folder
GT Command 1: find . -name "*~" -print | xargs rm
GT Command 2: find -name '*~' -print0 | xargs -0 rm
GT Command 3: find -name '*~' -delete
Prediction 1: find File -type f -name Pattern -exec rm {} \; (-0.153602972627)
Prediction 2: find File -name Pattern | xargs -I {} rm {} (-0.16417939961)
Prediction 3: find File -name Pattern -exec rm {} \; (-0.209948554635)
Prediction 4: find File -type f -name Pattern | xargs -I {} rm {} (-0.230994388461)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.272482782602)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} rm {} (-0.322058469057)
Prediction 7: find File -type f -name Pattern -exec rm -f {} \; (-0.359855502844)
Prediction 8: find File -type f -name Pattern -delete (-0.417145907879)
Prediction 9: find File -name Pattern -delete (-0.422562539577)
Prediction 10: find File -name Pattern | xargs -0 -I {} rm {} (-0.46626251936)

Example 378 (1)
Original English: Count the number of files/directories named file1 under current directory
English: count number of "files/directories" name _REGEX under current directori
GT Command 1: find -name file1 | wc -l
Prediction 1: find File -name Pattern | wc -l (-0.166515499353)
Prediction 2: find File -printf Pattern | wc -c (-0.301403701305)
Prediction 3: find File -name Pattern | wc -c (-0.347093015909)
Prediction 4: find File -name Pattern -exec wc -l {} \; (-0.4013890028)
Prediction 5: find File -iname Pattern | wc -l (-0.420038104057)
Prediction 6: find File -name Pattern | xargs -I {} wc -l {} (-0.423606127501)
Prediction 7: find File -maxdepth Number -name Pattern | wc -l (-0.47539255023)
Prediction 8: find File -name Pattern | xargs -I {} wc -c {} (-0.505137264729)
Prediction 9: find File -exec wc -l {} \; (-0.514194428921)
Prediction 10: find File | wc -l (-0.551044881344)

Example 379 (1)
Original English: search for the file "name_to_find" in the home folder
English: search for file _REGEX in home folder
GT Command 1: find ~ -name "name_to_find"
Prediction 1: find File -name Pattern (-0.12079899013)
Prediction 2: find File -name Pattern -print (-0.224710077047)
Prediction 3: find File -iname Pattern -print (-0.635657310486)
Prediction 4: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.753865003586)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -print (-0.862164020538)
Prediction 6: find File -name Pattern | xargs -I {} grep Pattern {} (-0.869073808193)
Prediction 7: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.910088121891)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.974562227726)
Prediction 9: find File \( -name Pattern -or -name Pattern \) {} \; -print (-0.998172223568)
Prediction 10: find File -name Pattern -print0 (-1.07625174522)

Example 380 (1)
Original English: Search the home directory tree for all .txt files
English: search home directori tree for all _REGEX file
GT Command 1: find ~/ -name '*.txt'
Prediction 1: find File -name Pattern (-0.0407183840871)
Prediction 2: find File -type f -name Pattern (-0.452063322067)
Prediction 3: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.696542441845)
Prediction 4: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.744067847729)
Prediction 5: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.748346328735)
Prediction 6: find File -perm Permission (-0.796825170517)
Prediction 7: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -i Pattern {} (-0.806540191174)
Prediction 8: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.81207549572)
Prediction 9: find File -type f -iname Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.827326059341)
Prediction 10: find File \( -name Pattern -or -name Pattern \) (-0.878337144852)

Example 381 (1)
Original English: Delete files containing whitespaces without recursion
English: delet file contain whitespac without recurs
GT Command 1: find . -name '*[+{;"\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;
Prediction 1: find File -type f -name Pattern -exec rm {} \; (-0.20658993721)
Prediction 2: find File -type f -name Pattern -exec rm -f {} \; (-0.246621564031)
Prediction 3: find File -type f -name Pattern | xargs -I {} rm {} (-0.26397845149)
Prediction 4: find File -maxdepth Number -name Pattern | xargs -I {} rm {} (-0.306148350239)
Prediction 5: find File -maxdepth Number -name Pattern -exec rm {} \; (-0.308664023876)
Prediction 6: find File -maxdepth Number -print0 | xargs -0 -I {} rm {} (-0.327593296766)
Prediction 7: find File -name Pattern | xargs -I {} rm {} (-0.341143101454)
Prediction 8: find File -maxdepth Number -exec rm {} \; (-0.357603400946)
Prediction 9: find File -maxdepth Number | xargs -I {} rm {} (-0.390215873718)
Prediction 10: find File -name Pattern -exec rm {} \; (-0.40730035305)

Example 382 (2)
Original English: find for a word in all the regular files in the current directory
English: find for word in all regular file in current directori
GT Command 1: find . -type f -print | xargs grep -li 'bin/ksh'
GT Command 2: find . -type f -exec grep -li '/bin/ksh' {} \;
Prediction 1: find File -type f | xargs -I {} grep Pattern {} (-0.152657553554)
Prediction 2: find File -type f -print0 | xargs -0 -I {} grep Pattern {} (-0.238295942545)
Prediction 3: find File -type f -print0 | xargs -0 -I {} grep -l Pattern {} (-0.239994600415)
Prediction 4: find File -type f -exec grep Pattern {} \; (-0.248148262501)
Prediction 5: find File -type f -print | xargs -I {} grep Pattern {} (-0.267933666706)
Prediction 6: find File -type f | xargs -I {} grep -L Pattern {} (-0.293333262205)
Prediction 7: find File -type f -exec grep -H Pattern {} \; (-0.315894544125)
Prediction 8: find File -type f -exec grep Pattern {} \; -print (-0.332512974739)
Prediction 9: find File -type f -exec grep -l Pattern {} \; (-0.34424585104)
Prediction 10: find File -type f -exec grep -H Pattern {} + (-0.35369759798)

Example 383 (1)
Original English: Find all the files in the current directory with “linkin park” in their names
English: find all file in current directori with _REGEX in name
GT Command 1: find . -maxdepth 1 -iname "*linkin park*"
Prediction 1: find File -name Pattern (-0.159710109234)
Prediction 2: find File -type f -name Pattern (-0.224144265056)
Prediction 3: find File -type f -iname Pattern (-0.462701678276)
Prediction 4: find File \( -name Pattern -prune -or -print \) (-0.546730220318)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.579984784126)
Prediction 6: find File \( -name Pattern -prune -or -name Pattern \) (-0.624896943569)
Prediction 7: find File \( -name Pattern -or -name Pattern \) (-0.681243658066)
Prediction 8: find File -type d -name Pattern (-0.684533417225)
Prediction 9: find File -iname Pattern (-0.697474658489)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -print (-0.798922479153)

Example 384 (1)
Original English: Find files on the system created during the last 50 days
English: find file on system creat dure last _NUM day
GT Command 1: find / -ctime -50
Prediction 1: find File -name Pattern -mtime Time (-0.208859756589)
Prediction 2: find File -mtime Time -name Pattern (-0.378475308418)
Prediction 3: find File -name Pattern -atime Time (-0.431279927492)
Prediction 4: find File -type f -name Pattern -mtime Time (-0.460946828127)
Prediction 5: find File -type f -name Pattern -atime Time (-0.473963469267)
Prediction 6: find File -name Pattern -atime Time -type f (-0.552040815353)
Prediction 7: find File -name Pattern -daystart -mtime Time (-0.568042874336)
Prediction 8: find File -type f -mtime Time -name Pattern (-0.574820101261)
Prediction 9: find File -mtime Time -name Pattern -print (-0.611061513424)
Prediction 10: find File -name Pattern -type f (-0.658812522888)

Example 385 (1)
Original English: Find all .txt files in the user's home directory and below.
English: find all _REGEX file in user 's home directori and below
GT Command 1: find ~/ -name '*.txt'
Prediction 1: find File -user Pattern -name Pattern (-0.164444163442)
Prediction 2: find File -user Pattern -iname Pattern (-0.244740054011)
Prediction 3: find File -type f -name Pattern (-0.463504701853)
Prediction 4: find File -name Pattern (-0.4660615623)
Prediction 5: find File -user Pattern -type f -name Pattern (-0.473264187574)
Prediction 6: find File -type f -user Pattern -iname Pattern (-0.574388325214)
Prediction 7: find File -type f -iname Pattern (-0.603334009647)
Prediction 8: find File -user Pattern -type f -iname Pattern (-0.66435444355)
Prediction 9: find File -type f -user Pattern -name Pattern (-0.698861598969)
Prediction 10: find File -type f -iname Pattern ! -iname Pattern (-0.771627664566)

Example 386 (1)
Original English: search for the word "mysql" in all the files in the current containing the word "notes" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names
English: search for word _REGEX in all file in current contain word _REGEX in name _REGEX use to handl file with newlin in name or onli space in name
GT Command 1: find . -iname "*notes*" -print0 | xargs -I{} -0 grep -i mysql "{}"
Prediction 1: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.13787060976)
Prediction 2: find File -name Pattern -print0 | xargs -0 -I {} grep -H Pattern {} (-0.200076013803)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} grep -L Pattern {} (-0.219582289457)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep -H -n Pattern {} (-0.227824002504)
Prediction 5: find File -name Pattern -print0 | xargs -0 -I {} grep -l Pattern {} (-0.236694917083)
Prediction 6: find File -type f -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.25199341774)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} grep -E Pattern {} (-0.258995234966)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} grep -i Pattern {} (-0.301837831736)
Prediction 9: find File -iname Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.311857402325)
Prediction 10: find File -name Pattern -print0 | xargs -0 -n -1 -I {} grep -H Pattern {} (-0.316588103771)

Example 387 (1)
Original English: find all the files that have been changed today
English: find all file chang today
GT Command 1: find . -ctime 0 -type f
Prediction 1: find File -type f -ctime Time (-0.245890378952)
Prediction 2: find File -ctime Time (-0.326160639524)
Prediction 3: find File -cmin Number (-0.375746369362)
Prediction 4: find File -daystart -ctime Time (-0.434359937906)
Prediction 5: find File -maxdepth Number -cmin Number (-0.618536651134)
Prediction 6: find File -type f -daystart -ctime Time (-0.776533424854)
Prediction 7: find File -maxdepth Number -type f (-0.815620422363)
Prediction 8: find File -type f -cmin Number (-0.876385390759)
Prediction 9: find File -cmin Number -print (-1.02683079243)
Prediction 10: find File -mtime Time (-1.0848634243)

Example 388 (1)
Original English: remove all subdirectories named "CVS" under current dir
English: remov all subdirectori name _REGEX under current dir
GT Command 1: find . -type d -name CVS -exec rm -r {} \;
Prediction 1: find File -type d -name Pattern -exec rm -f {} \; (-0.19393864274)
Prediction 2: find File -type d -name Pattern -exec rm {} \; (-0.194367036223)
Prediction 3: find File -type d -name Pattern -print | xargs -I {} rm {} (-0.260142743587)
Cannot parse: rm $( find File -type d -name Pattern \) - MatchedPairError
Prediction 4: rm $( find File -type d -name Pattern \)  (-0.300443679094)
Prediction 5: find File -type f -name Pattern -exec rm -f {} \; (-0.317547917366)
Prediction 6: find File -type f -name Pattern -exec rm {} \; (-0.32594653964)
Prediction 7: find File -type d -name Pattern -exec rm -r -f {} \; (-0.328532099724)
Prediction 8: find File -name Pattern -type d -exec rm {} \; (-0.345414936543)
Prediction 9: find File -type d -name Pattern | xargs -I {} rm {} (-0.373141139746)
Prediction 10: find File -type d -name Pattern -print -exec rm -f {} \; (-0.401127129793)

Example 389 (1)
Original English: count lines of C or C++ or Obj-C or Java code under the current directory
English: count line of _REGEX or _REGEX or obj-c or _REGEX code under current directori
GT Command 1: find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name "*.m" -or -name '*.java' \) -print0 | xargs -0 wc
Prediction 1: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} wc -l {} (-0.179180502892)
Prediction 2: find File \( -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} wc -l {} (-0.194343999028)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print0 | xargs -0 -I {} wc -l {} (-0.202530607581)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -exec wc -l {} \; (-0.20876967907)
Prediction 5: find File \( -name Pattern -or -name Pattern \) -exec wc -l {} \; (-0.228797331452)
Prediction 6: find File -name Pattern | wc -l (-0.261161834002)
Prediction 7: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -exec wc -l {} \; (-0.262864083052)
Prediction 8: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) -exec wc -l {} \; (-0.275557219982)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print0 | xargs -0 -I {} wc -w {} (-0.288218319416)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) | wc -l (-0.293393999338)

Example 390 (1)
Original English: Find files in the current directory whose names begin with "file" and remove them
English: find file in current directori whose name begin with _REGEX and remov
GT Command 1: find . -name file* -maxdepth 1 -exec rm {} \;
Prediction 1: find File -name Pattern -type f -print | xargs -I {} rm -f {} (-0.114236004651)
Prediction 2: find File -name Pattern -type f -print | xargs -I {} rm {} (-0.174199670553)
Prediction 3: find File -name Pattern -type f -print0 | xargs -0 -I {} rm {} (-0.179466411471)
Prediction 4: find File -name Pattern -type f -print0 | xargs -0 -I {} rm -f {} (-0.199359804392)
Prediction 5: find File -name Pattern -type f | xargs -I {} rm {} (-0.263752907515)
Prediction 6: find File -name Pattern -type f -exec rm -f {} \; (-0.271736741066)
Prediction 7: find File -name Pattern -type f -exec rm {} \; (-0.272747009993)
Prediction 8: find File -name Pattern -type f -print | xargs -I {} rm -r -f {} (-0.28147366643)
Prediction 9: find File -name Pattern -type f | xargs -I {} rm -f {} (-0.305951654911)
Prediction 10: find File -type f -name Pattern -exec rm -f {} \; (-0.306073993444)

Example 391 (1)
Original English: display all instances of "foo.cpp" file in the current folder which are not in the sub directory tree ".svn"
English: display all instanc of _REGEX file in current folder not in sub directori tree _REGEX
GT Command 1: find . -name 'foo.cpp' '!' -path '.svn'
Prediction 1: find File \( -name Pattern -prune -or -name Pattern \) -print (-0.227798357606)
Prediction 2: find File -name Pattern -not -name Pattern (-0.284322172403)
Prediction 3: find File -name Pattern ! -name Pattern -prune (-0.408706098795)
Prediction 4: find File -name Pattern -printf Pattern (-0.415822952986)
Prediction 5: find File \( -name Pattern -prune -or -name Pattern \) (-0.420541584492)
Prediction 6: find File -name Pattern -prune (-0.432857036591)
Prediction 7: find File -maxdepth Number -name Pattern -printf Pattern (-0.461814552546)
Prediction 8: find File -name Pattern ! -name Pattern -print (-0.471257716417)
Prediction 9: find File -name Pattern ! -name Pattern (-0.473762363195)
Prediction 10: find File -maxdepth Number -name Pattern -not -name Pattern (-0.477200180292)

Example 392 (1)
Original English: Delete all .svn directories under current directory
English: delet all _REGEX directori under current directori
GT Command 1: find . -type d -name .svn -print0|xargs -0 rm -rf
Cannot parse: rm -r -f $( find File -type d -name Pattern \) - MatchedPairError
Prediction 1: rm -r -f $( find File -type d -name Pattern \)  (-0.203295961022)
Prediction 2: find File -type d -name Pattern | xargs -I {} rm {} (-0.211540162563)
Prediction 3: find File -type d -name Pattern -exec rm {} \; (-0.26763099432)
Prediction 4: find File -type d -name Pattern -exec rm -r -f {} \; (-0.272625654936)
Prediction 5: find File -type d -name Pattern -delete (-0.28625023365)
Prediction 6: find File -type d -name Pattern | xargs -I {} rm -r -f {} (-0.287002384663)
Prediction 7: find File -type d -name Pattern -print | xargs -I {} rm {} (-0.307520270348)
Prediction 8: find File -type d -name Pattern -exec rm -f {} \; (-0.339238077402)
Cannot parse: rm -r $( find File -type d -name Pattern \) - MatchedPairError
Prediction 9: rm -r $( find File -type d -name Pattern \)  (-0.351196557283)
Cannot parse: rm $( find File -type d -name Pattern \) - MatchedPairError
Prediction 10: rm $( find File -type d -name Pattern \)  (-0.359188824892)

Example 393 (1)
Original English: Search all the .c and .h files in the current directory tree for "expr"
English: search all _REGEX and _REGEX file in current directori tree for _REGEX
GT Command 1: find -name '*.[ch]' | xargs grep -E 'expr'
Prediction 1: find File -name Pattern | xargs -I {} grep Pattern {} (-0.12117768079)
Prediction 2: find File -name Pattern | xargs -I {} grep -L Pattern {} (-0.181744933128)
Prediction 3: find File -name Pattern -exec grep Pattern {} \; (-0.239004164934)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} grep Pattern {} (-0.308883816004)
Prediction 5: find File -name Pattern | xargs -I {} grep -E Pattern {} (-0.309777528048)
Prediction 6: find File -type f -name Pattern | xargs -I {} grep Pattern {} (-0.348735183477)
Prediction 7: find File -type f -name Pattern -exec grep Pattern {} \; (-0.365073084831)
Prediction 8: find File -name Pattern -exec grep Pattern {} \; -print (-0.369663447142)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -exec grep Pattern {} \; (-0.383267939091)
Prediction 10: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -print -exec grep Pattern {} \; (-0.400225549936)

Example 394 (2)
Original English: Delete all files in the current directory tree whose names end with ~
English: delet all file in current directori tree whose name end with _PARAMET
GT Command 1: find . -name "*~" -delete
GT Command 2: find . -name "*~" -exec rm {} \;
Prediction 1: find File -name Pattern | xargs -I {} rm {} (-0.0992982238531)
Prediction 2: find File -name Pattern -exec rm {} \; (-0.148387640715)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} rm {} (-0.210302650928)
Prediction 4: find File -type f -name Pattern -exec rm {} \; (-0.399394631386)
Prediction 5: find File -type f -name Pattern | xargs -I {} rm {} (-0.425857424736)
Prediction 6: find File -type f -name Pattern -exec rm -f {} \; (-0.430880635977)
Prediction 7: find File -name Pattern -delete (-0.432289928198)
Prediction 8: find File -name Pattern -print0 | xargs -0 -I {} rm -r -f {} (-0.438083261251)
Prediction 9: find File -name Pattern | xargs -I {} rm -r -f {} (-0.476785391569)
Prediction 10: find File -name Pattern -exec rm -f {} \; (-0.536353826523)

Example 395 (3)
Original English: Find all mysong.ogg files/directories under your home directory
English: find all _REGEX "files/directories" under home directori
GT Command 1: find $HOME -name 'mysong.ogg'
GT Command 2: find ~/ -name '*.txt'
GT Command 3: find ~ -name "*.txt" -print
Prediction 1: find File -name Pattern (-0.0252733994275)
Prediction 2: find File -iname Pattern (-0.60644108057)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.997772932053)
Prediction 4: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -or -name Pattern \) (-1.01748299599)
Prediction 5: find File \( -name Pattern -or -name Pattern -or -name Pattern \) (-1.02673637867)
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-1.0295715332)
Prediction 7: find File \( -name Pattern -or -name Pattern -or -name Pattern -or -name Pattern \) (-1.06726825237)
Prediction 8: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-1.08024132252)
Prediction 9: find File \( -name Pattern -or -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-1.11099147797)
Prediction 10: find File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-1.11321997643)

Example 396 (1)
Original English: Find all *.txt and *.json files
English: find all _REGEX and _REGEX file
GT Command 1: find . -type f \( -name "*.txt" -o -name "*.json" \)
Prediction 1: find File -type f -iname Pattern (-0.278796643019)
Prediction 2: find File -type f \( -iname Pattern -or -iname Pattern \) (-0.32741740346)
Prediction 3: find File -type f \( -iname Pattern -or -iname Pattern \) -print (-0.32945305109)
Prediction 4: find File \( -iname Pattern -or -iname Pattern \) (-0.332360208035)
Prediction 5: find File -type f -iname Pattern -print (-0.372937589884)
Prediction 6: find File \( -iname Pattern -or -iname Pattern \) -print (-0.373049408197)
Prediction 7: find File -type f \( -iname Pattern -and ! -iname Pattern \) (-0.420528620481)
Prediction 8: find File \( -name Pattern -or -name Pattern \) (-0.44120323658)
Prediction 9: find File \( -path File -prune -or -name Pattern \) -print (-0.453055113554)
Prediction 10: find File -type f \( -iname Pattern -or -iname Pattern \) -ls (-0.460076719522)

Example 397 (1)
Original English: look for a file or folder called game in all folders under the current folder
English: look for file or folder call game in all folder under current folder
GT Command 1: find . -name game
Prediction 1: find File -type f -name Pattern (-0.165706112981)
Prediction 2: find File \( -name Pattern -or -name Pattern \) (-0.247543781996)
Prediction 3: find File -name Pattern (-0.330987721682)
Prediction 4: find File -type f \( -name Pattern -or -name Pattern \) (-0.353620737791)
Prediction 5: find File -type f \( -name Pattern -or -name Pattern \) -print (-0.383008271456)
Prediction 6: find File \( -name Pattern -or -name Pattern \) -print (-0.396924823523)
Prediction 7: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.399779736996)
Prediction 8: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.431901365519)
Prediction 9: find File -type f \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.434516727924)
Prediction 10: find File -type f \( -name Pattern -or -name Pattern -or -name Pattern \) -print (-0.444429934025)

Example 398 (3)
Original English: Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
English: find all _REGEX file in current directori and copi to directori _PARAMET
GT Command 1: find "$HOME" -name '*.txt' -type f -print0 | xargs -0 cp -ut "$HOME/newdir"
GT Command 2: find "$HOME" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t "$HOME/newdir"
GT Command 3: find "$HOME" -name '*.txt' -type f -not -path "$HOME/newdir/*" -print0 | xargs -0 cp -t "$HOME/newdir"
Prediction 1: find File -name Pattern -exec cp {} File \; (-0.102446615696)
Prediction 2: find File -name Pattern | xargs -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.238560706377)
Prediction 3: find File -name Pattern -print0 | xargs -0 -I {} cp -t File {} (-0.248389050364)
Prediction 4: find File -name Pattern -print0 | xargs -0 -I {} cp File {} (-0.293895274401)
Prediction 5: find File -name Pattern | xargs -I {} cp -t File {} (-0.335234075785)
Prediction 6: find File -name Pattern -print0 | xargs -0 -I {} cp {} File (-0.335283309221)
Prediction 7: find File -name Pattern -print0 | xargs -0 -I {} cp -a --target-directory=dir_txt/ --parents {} (-0.335653722286)
Prediction 8: find File -type f -name Pattern -exec cp {} File \; (-0.361832588911)
Prediction 9: find File -name Pattern -exec cp -a {} File \; (-0.376611858606)
Prediction 10: find File -name Pattern -exec cp File {} \; (-0.382013440132)

Example 399 (1)
Original English: Remove Mac OS X Desktop Services Store files
English: remov _REGEX _REGEX _REGEX _REGEX _REGEX _REGEX file
GT Command 1: find . -name ".DS_Store" -exec rm {} \;
Prediction 1: find File -type f -name Pattern -exec rm -f {} \; (-0.198121011257)
Prediction 2: find File -type f \( -name Pattern -or -name Pattern \) -exec rm {} \; (-0.210250675678)
Prediction 3: find File \( -name Pattern -or -name Pattern \) -exec rm {} \; (-0.236015081406)
Prediction 4: find File -type f -regex Pattern -exec rm {} \; (-0.278832256794)
Prediction 5: find File \( -path File -prune -or -name Pattern \) -exec rm {} \; (-0.325492829084)
Prediction 6: find File -type f -not -name Pattern -exec rm -f {} \; (-0.332201570272)
Prediction 7: find File -type f -regex Pattern -exec rm -f {} \; (-0.340239048004)
Prediction 8: find File -type f -not -name Pattern -exec rm {} \; (-0.36085960269)
Prediction 9: find File -type f -name Pattern -exec rm {} \; (-0.37155097723)
Prediction 10: find File -type f -name Pattern | xargs -I {} rm {} (-0.382006257772)

Example 400 (2)
Original English: Find all 400 permission files under /data directory
English: find all _NUM permiss file under _REGEX directori
GT Command 1: find /data -type f -perm 400
GT Command 2: find /data -type f -perm 400 -print
Prediction 1: find File -type f -perm Permission -print (-0.0924288854003)
Prediction 2: find File -type f -perm Permission (-0.159048095345)
Prediction 3: find File -type f -perm Permission -exec ls -l {} \; (-0.468811869621)
Prediction 4: find File -type f -perm Permission -exec chmod Permission {} \; (-0.608588218689)
Prediction 5: find File -perm Permission -type f (-0.690780460835)
Prediction 6: find File -type d -perm Permission -print (-0.693701565266)
Prediction 7: find File -type f -name Pattern (-0.735216379166)
Prediction 8: find File -type f -perm Permission -ls (-0.834106564522)
Prediction 9: find File -perm Permission -type f -print (-0.837584733963)
Prediction 10: find File -type f ! -perm Permission (-0.855381608009)

Example 401 (1)
Original English: search for directories in the folder "test" which end with 5 digits using regular expressions
English: search for directori in folder _REGEX end with _NUM digit use regular express
GT Command 1: find ./test -regextype posix-egrep -type d -regex '.*/[0-9]{5}$'
Prediction 1: find File -type d -regex Pattern (-0.0923598632216)
Prediction 2: find File -type d -name Pattern (-0.259347110987)
Prediction 3: find File -type d -regextype Pattern -regex Pattern (-0.390838593245)
Prediction 4: find File -regex Pattern -type d (-0.519021213055)
Prediction 5: find File -type f -regex Pattern (-0.567700505257)
Prediction 6: find File -regextype Pattern -regex Pattern -type d (-0.673519730568)
Prediction 7: find File -type d -iname Pattern (-0.771419942379)
Prediction 8: find File -name Pattern -type d (-0.79710060358)
Prediction 9: find File -type d -iregex Pattern (-0.838925182819)
Prediction 10: find File -type f -name Pattern (-0.886638879776)

Example 402 (1)
Original English: Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my'
English: search directori tree _REGEX and _REGEX for file whose name begin with _REGEX
GT Command 1: find /usr/local/man /opt/local/man -name 'my*'
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 1: find File File -name Pattern (-0.161127835512)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 2: find File File File (-0.374430269003)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 3: find File File File -name Pattern (-0.389784425497)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 4: find File File \( -name Pattern -or -name Pattern \) (-0.402925640345)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 5: find File File \( -name Pattern -or -name Pattern \) -or -name Pattern \) (-0.441280692816)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 6: find File \( -name Pattern -or -name Pattern \) (-0.516900718212)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 7: find File File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) (-0.527523577213)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 8: find File File \( -name Pattern -or -name Pattern -or -name Pattern \) (-0.542808175087)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 9: find File File \( -name Pattern -or -name Pattern \) -prune -or -name Pattern \) -print (-0.548270344734)
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
normalized_command AssertionError - find -name Pattern -print0 File File | xargs -0
Prediction 10: find File File \( -name Pattern -or -name Pattern \) -or -name Pattern \) -print (-0.56474417448)

Example 403 (1)
Original English: find  directory which case-insensitive name is too in currect directory
English: find directori case-insensit name too in current directori
GT Command 1: find . -iname foo -type d
Prediction 1: find File -type d -iname Pattern (-0.0941304862499)
Prediction 2: find File -type d -name Pattern (-0.287772774696)
Prediction 3: find File -type d -iname Pattern -ls (-0.416604071856)
Prediction 4: find File -type d -iname Pattern -printf Pattern (-0.532404541969)
Prediction 5: find File -iname Pattern -type d (-0.539157927036)
Prediction 6: find File -maxdepth Number -type d -iname Pattern (-0.602755069733)
Prediction 7: find File -maxdepth Number -type d -name Pattern (-0.684091091156)
Prediction 8: find File -type d -iname Pattern -print (-0.709100902081)
Prediction 9: find File -name Pattern -type d (-0.724230349064)
Prediction 10: find File File -type d -iname Pattern (-0.800673186779)

Example 404 (1)
Original English: find all the files which have a specific permission
English: find all file specif permiss
GT Command 1: find -perm 777
Prediction 1: find File -perm Permission (-0.0293593928218)
Prediction 2: find File -perm Permission -print (-0.456642240286)
Prediction 3: find File -type f -perm Permission -print (-0.855059206486)
Prediction 4: find File -perm Permission -exec ls -l {} \; (-0.960566103458)
Prediction 5: find File -perm Permission | xargs -I {} ls -l -d {} (-0.974771082401)
Prediction 6: find File -type f -perm Permission (-0.988061487675)
Prediction 7: find File -perm Permission | xargs -I {} ls -l -S -h {} (-1.04145169258)
Prediction 8: find File -perm Permission | xargs -I {} ls -l -S -s -h {} (-1.12580704689)
Prediction 9: find File -perm Permission | xargs -I {} ls -l {} (-1.15058708191)
Prediction 10: find File -perm Permission | xargs -I {} ls -l -S -s {} (-1.24783301353)

405 examples evaluated
Percentage of top 1 Match (template-only) = 0.72
Percentage of top 1 Match (whole-string) = 0.00
Average top 1 Tree Edit Distance (template-only) = 2.81
Average top 1 Tree Edit Distance (whole-string) = 5.13
Top 3 Template Match Score = 0.82
Top 3 String Match Score = 0.00
Average top 3 Tree Edit Distance (template-only) = 1.97
Average top 3 Tree Edit Distance (whole-string) = 4.32
Top 5 Template Match Score = 0.84
Top 5 String Match Score = 0.00
Average top 5 Tree Edit Distance (template-only) = 1.69
Average top 5 Tree Edit Distance (whole-string) = 4.04
Top 10 Template Match Score = 0.87
Top 10 String Match Score = 0.00
Average top 10 Tree Edit Distance (template-only) = 1.42
Average top 10 Tree Edit Distance (whole-string) = 3.77

