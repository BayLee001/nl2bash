[text-case  0 ] =========================================================
  [original-pair]
       copy all file with extension _UNK from "_NUM" folder to _UNK directory
       find ARGUMENT_UNK -type f -name ARGUMENT_UNK | xargs cp -t ARGUMENT_UNK
  [new-pair]
       copy file from "_NUM" folder to all folder in _UNK extension _UNK
       find ARGUMENT_UNK -type d -name ARGUMENT_UNK -ok cp ARGUMENT_UNK {} \;
 find ARGUMENT_UNK -type d -name ARGUMENT_UNK -ok cp ARGUMENT_UNK {} \;
[text-case  1 ] =========================================================
  [original-pair]
       search for pattern in all file in folder
       find _LONG_PATTERN -iname ARGUMENT_UNK | xargs -I % grep -i -l -r ARGUMENT_UNK ARGUMENT_UNK | xargs -I % grep -H ARGUMENT_UNK %
  [new-pair]
       search for pattern in all file in current folder
       find . -exec grep -H string-to-find {} \;
 find . -exec grep -H string-to-find {} \;
[text-case  2 ] =========================================================
  [original-pair]
       print name of "file_NUM" if file newer than "file_NUM"
       find file_NUM -prune -newer file_NUM
  [new-pair]
       find all "file_NUM" and "file_NUM" "files/directories" under current directory
       find . \( -name file_NUM -or -name file_NUM \)
 find . \( -name file_NUM -or -name file_NUM \)
[text-case  3 ] =========================================================
  [original-pair]
       find all file in entire file system with extension txt or _UNK _UNK any file larger than "_NUMMB" in size
       find / \( -name '*.txt' -or -name '*.doc' -or -size +_NUMM \)
  [new-pair]
       remove all file with txt extension under current directory
       find . -type f -name "*.txt" -exec rm {} \; -print
 find . -type f -name "*.txt" -exec rm {} \; -print
[text-case  4 ] =========================================================
  [original-pair]
       find all regular file in and below home directory modified in last "_NUM" minute
       find ~ -type f -mmin -_NUM
  [new-pair]
       list all regular file in and below home directory modified in last "_NUM" minute
       find ~ -type f -mmin -_NUM | xargs ls -l
 find ~ -type f -mmin -_NUM | xargs ls -l
[text-case  5 ] =========================================================
  [original-pair]
       find all file with name september ( case insensitive )
       find -iname ARGUMENT_UNK
  [new-pair]
       find file folder ( search case insensitive )
       find / -iname findcommandexamples.txt
 find / -iname findcommandexamples.txt
[text-case  6 ] =========================================================
  [original-pair]
       search for all perl file in folder _UNK modified yesterday
       find ARGUMENT_UNK -mtime _NUM -daystart -iname "*.pl"
  [new-pair]
       find all file modified yesterday in current directory
       find . -daystart -ctime _NUM -type f
 find . -daystart -ctime _NUM -type f
[text-case  7 ] =========================================================
  [original-pair]
       find all file with specific name in current folder and delete
       find . -name ARGUMENT_UNK ARGUMENT_UNK -exec rm _LONG_PATTERN \;
  [new-pair]
       find specific file in current folder
       find . -name "articles.jpg"
 find . -name "articles.jpg"
[text-case  8 ] =========================================================
  [original-pair]
       list all "files/directories" under current directory matching posix-egrep type regex _LONG_PATTERN in name excluding path _UNK and _UNK
       find . -regextype posix-egrep -regex ARGUMENT_UNK -not -path ARGUMENT_UNK -not -path ARGUMENT_UNK -print0 | xargs -0 ls -L -1 -d
  [new-pair]
       find all file under current directory matching posix-egrep type regex "^.*/[a-z][^/]*$" in name
       find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
 find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
[text-case  9 ] =========================================================
  [original-pair]
       list all "files/directories" under current directory matching posix-egrep type regex _LONG_PATTERN in name
       find . -regextype posix-egrep -regex ARGUMENT_UNK -print0 | xargs -0 -n _NUM ls
  [new-pair]
       find all file under current directory matching posix-egrep type regex "^.*/[a-z][^/]*$" in name
       find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
 find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
[text-case  10 ] =========================================================
  [original-pair]
       list all "files/directories" under current directory matching posix-egrep type regex _LONG_PATTERN in name
       find . -regextype posix-egrep -regex ARGUMENT_UNK | xargs -n _NUM ls
  [new-pair]
       find all file under current directory matching posix-egrep type regex "^.*/[a-z][^/]*$" in name
       find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
 find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
[text-case  11 ] =========================================================
  [original-pair]
       list all "files/directories" under current directory matching posix-egrep type regex _LONG_PATTERN in name excluding file contain _UNK or _UNK in path
       find . -regextype posix-egrep -regex ARGUMENT_UNK -print0 | grep -v -z -Z ARGUMENT_UNK | grep -v -z -Z ARGUMENT_UNK | xargs -0 ls -1 -L -d
  [new-pair]
       find all file under current directory matching posix-egrep type regex "^.*/[a-z][^/]*$" in name
       find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
 find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
[text-case  12 ] =========================================================
  [original-pair]
       find "files/directories" under current directory matching posix-egrep type regex _LONG_PATTERN in name
       find . -regextype posix-egrep -regex ARGUMENT_UNK
  [new-pair]
       find all file under current directory matching posix-egrep type regex "^.*/[a-z][^/]*$" in name
       find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
 find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
[text-case  13 ] =========================================================
  [original-pair]
       search for specific pattern in all file in current folder specific extension
       find . -name ARGUMENT_UNK | xargs grep -n ARGUMENT_UNK
  [new-pair]
       find all file in current folder specific extension
       find . -name ARGUMENT_UNK -print
 find . -name ARGUMENT_UNK -print
[text-case  14 ] =========================================================
  [original-pair]
       find all file belong to group root
       find / -group root
  [new-pair]
       find all file belong to user root
       find / -user root
 find / -user root
[text-case  15 ] =========================================================
  [original-pair]
       find regular file under and below "/path" match pattern _UNK
       find /path -type f -name ARGUMENT_UNK
  [new-pair]
       find file in current directory tree match pattern _UNK
       find ./ -name ARGUMENT_UNK
 find ./ -name ARGUMENT_UNK
[text-case  16 ] =========================================================
  [original-pair]
       find file under _UNK match _UNK in name without descending into directory match _UNK and _LONG_PATTERN in file
       find ARGUMENT_UNK \( -name ARGUMENT_UNK -prune -or -name ARGUMENT_UNK -prune -or -name ARGUMENT_UNK \) -print0 | xargs -0 -I ARGUMENT_UNK grep -I -R "pattern" ARGUMENT_UNK
  [new-pair]
       find "files/directories" under current directory without descending into
       find -prune
 find -prune
[text-case  17 ] =========================================================
  [original-pair]
       search for _UNK in all _UNK file under current directory without descending into "*.gif" and _UNK directory
       find . \( -name "*.png" -prune -or -name ARGUMENT_UNK -prune -or -name ARGUMENT_UNK -prune -or -print0 \) | xargs -0 -I ARGUMENT_UNK grep -I -R ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       find "files/directories" under current directory without descending into
       find -prune
 find -prune
[text-case  18 ] =========================================================
  [original-pair]
       find all file under current directory excluding _UNK file and print file path ( with match count ) match case insensitive regex _UNK in content
       find . \( -not -name '*.png' -or -type f \) -print | xargs grep -i -c -l ARGUMENT_UNK
  [new-pair]
       search for first match of case insensitive regex _UNK in all "*.txt" file under current directory and print file path along with match
       find . -name '*.txt' | xargs grep -m -1 -r -i ARGUMENT_UNK
 find . -name '*.txt' | xargs grep -m -1 -r -i ARGUMENT_UNK
[text-case  19 ] =========================================================
  [original-pair]
       find all _UNK file in file system
       find / -name ARGUMENT_UNK -type f -print
  [new-pair]
       find all _UNK file in file system
       find / -name ARGUMENT_UNK -print
 find / -name ARGUMENT_UNK -print
[text-case  20 ] =========================================================
  [original-pair]
       move all emacs backup file from current directory tree to _UNK
       find . -name '*~' -print _NUM | xargs -0 -I % cp % ARGUMENT_UNK
  [new-pair]
       remove recursively emacs backup file in current directory
       find . -name '*~' -print0 | xargs -0 rm
 find . -name '*~' -print0 | xargs -0 rm
[text-case  21 ] =========================================================
  [original-pair]
       search _UNK file from current directory tree for string _UNK
       find . -name ARGUMENT_UNK -print0 | xargs -0 grep ARGUMENT_UNK
  [new-pair]
       search file of current directory tree for string _UNK
       find . | xargs grep ARGUMENT_UNK
 find . | xargs grep ARGUMENT_UNK
[text-case  22 ] =========================================================
  [original-pair]
       delete all file in _UNK folder except _UNK
       find ARGUMENT_UNK ! -name ARGUMENT_UNK -delete
  [new-pair]
       delete all _UNK _UNK file in current folder
       find . \( -name '*.wmv' -or -name ARGUMENT_UNK \) -exec rm {} \;
 find . \( -name '*.wmv' -or -name ARGUMENT_UNK \) -exec rm {} \;
[text-case  23 ] =========================================================
  [original-pair]
       find "/" _UNK _UNK _UNK _UNK
       find ARGUMENT_UNK ARGUMENT_UNK files ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       _UNK
       find /usr -newer /tmp/stamp$$
 find /usr -newer /tmp/stamp$$
[text-case  24 ] =========================================================
  [original-pair]
       display all text file in current folder and not search in bin directory
       find . \( -name bin -prune -or -name "*.txt" \) -print
  [new-pair]
       find all text file in current folder and not search in somedir bin directory
       find . -name somedir -prune , \( -name bin -prune -or -name "*.txt" \) -print
 find . -name somedir -prune , \( -name bin -prune -or -name "*.txt" \) -print
[text-case  25 ] =========================================================
  [original-pair]
       archive all _UNK file using tar
       find . -type f -name ARGUMENT_UNK | xargs tar cvf ARGUMENT_UNK -
  [new-pair]
       find all ".jpg" file in current directory and archive using tar to file called _UNK
       find . -maxdepth _NUM -iname "*.jpg" | xargs tar -c -z -v -f ARGUMENT_UNK
 find . -maxdepth _NUM -iname "*.jpg" | xargs tar -c -z -v -f ARGUMENT_UNK
[text-case  26 ] =========================================================
  [original-pair]
       find all empty regular file in current directory tree
       find . -size _NUMc -type f
  [new-pair]
       find empty file in directory
       find . -maxdepth _NUM -empty
 find . -maxdepth _NUM -empty
[text-case  27 ] =========================================================
  [original-pair]
       find file with setuid or _UNK bit set
       find . \( -perm -4000 -or -perm -2000 \)
  [new-pair]
       search for any file setuid bit set
       find /usr -perm -4000 -print
 find /usr -perm -4000 -print
[text-case  28 ] =========================================================
  [original-pair]
       find file name "java" in and display only file _UNK word in _UNK
       find -name "*java*" -exec grep -H ARGUMENT_UNK {} \;
  [new-pair]
       remove file contain name "java"
       find -name "*java*" -exec rm -r {} \;
 find -name "*java*" -exec rm -r {} \;
[text-case  29 ] =========================================================
  [original-pair]
       find all file specific permission
       find -perm ARGUMENT_UNK
  [new-pair]
       find all file in current folder specific permission
       find . -perm ARGUMENT_UNK -print
 find . -perm ARGUMENT_UNK -print
[text-case  30 ] =========================================================
  [original-pair]
       find all _UNK regular file in maximum "_NUM" level down current directory
       find . -type f -maxdepth _NUM -name ARGUMENT_UNK
  [new-pair]
       find all directory in maximum "_NUM" level down _UNK directory
       find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
 find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
[text-case  31 ] =========================================================
  [original-pair]
       find all _UNK regular file under current directory
       find . -type f -name ARGUMENT_UNK
  [new-pair]
       find all regular file under _UNK directory
       find ARGUMENT_UNK -type f
 find ARGUMENT_UNK -type f
[text-case  32 ] =========================================================
  [original-pair]
       find all _UNK "files/directories" in maximum "_NUM" level down current directory
       find . -maxdepth _NUM -name '*.tex'
  [new-pair]
       find all directory in maximum "_NUM" level down _UNK directory
       find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
 find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
[text-case  33 ] =========================================================
  [original-pair]
       display list of all hidden "regular/normal" file in directory "/dir/to/search/"
       find /dir/to/search/ -type f -iname ".*" -ls
  [new-pair]
       display list of all hidden file in directory "/dir/to/search/"
       find /dir/to/search/ -name ".*" -ls
 find /dir/to/search/ -name ".*" -ls
[text-case  34 ] =========================================================
  [original-pair]
       find text file modified le than "_NUM" day ago
       find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK _NUM
  [new-pair]
       find all file under current directory modified le than "_NUM" day ago
       find -mtime -_NUM
 find -mtime -_NUM
[text-case  35 ] =========================================================
  [original-pair]
       find all text file in current folder modified exactly "_NUM" day ago
       find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK _NUM
  [new-pair]
       find all file modified exactly "_NUM" day ago
       find -mtime _NUM
 find -mtime _NUM
[text-case  36 ] =========================================================
  [original-pair]
       display all file in cat folder
       find kat -printf "%f\n"
  [new-pair]
       display all C _UNK header file in cat folder
       find kat -type f \( -name "*.c" -or -name "*.cpp" -or -name "*.h" \)
 find kat -type f \( -name "*.c" -or -name "*.cpp" -or -name "*.h" \)
[text-case  37 ] =========================================================
  [original-pair]
       find "files/directories" named _UNK under current directory
       find ./ -name ARGUMENT_UNK
  [new-pair]
       find all "files/directories" named _UNK under current directory
       find ./ -name Desktop
 find ./ -name Desktop
[text-case  38 ] =========================================================
  [original-pair]
       find all file and directory in current directory tree with _LONG_PATTERN in name and copy to _UNK
       find . -iname _LONG_PATTERN -exec cp -r {} ARGUMENT_UNK \;
  [new-pair]
       find all directory in current "_NUM" with _LONG_PATTERN in name and copy to _UNK
       find . -maxdepth _NUM -type d -iname _LONG_PATTERN -exec cp -r {} ARGUMENT_UNK \;
 find . -maxdepth _NUM -type d -iname _LONG_PATTERN -exec cp -r {} ARGUMENT_UNK \;
[text-case  39 ] =========================================================
  [original-pair]
       display all "regular/normal" file in folder _UNK not modified today ( from day start ie "_NUM:_NUM" )
       find ARGUMENT_UNK -type f -daystart -mtime +_NUM
  [new-pair]
       display all "regular/normal" file in home folder modified in last "_NUM" day ( from start of day ie from "_NUM:_NUM" )
       find ~/ -daystart -type f -mtime _NUM
 find ~/ -daystart -type f -mtime _NUM
[text-case  40 ] =========================================================
  [original-pair]
       count line of C or "C++" or _UNK or java code under current directory
       find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name ARGUMENT_UNK -or -name '*.java' \) -print0 | xargs -0 wc
  [new-pair]
       count line of C or "C++" or _UNK code under current directory
       find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name ARGUMENT_UNK \) -print0 | xargs -0 wc
 find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name ARGUMENT_UNK \) -print0 | xargs -0 wc
[text-case  41 ] =========================================================
  [original-pair]
       search directory tree _UNK and _UNK for file whose name begin with "my"
       find ARGUMENT_UNK ARGUMENT_UNK -name 'my*'
  [new-pair]
       search current directory tree for file and directory whose name begin with _UNK
       find . -name pro*
 find . -name pro*
[text-case  42 ] =========================================================
  [original-pair]
       change permission of all "regular/normal" file to "_NUM" in folder _UNK
       find ARGUMENT_UNK -type f -exec chmod ARGUMENT_UNK {} \;
  [new-pair]
       change permission of all "regular/normal" file to "_NUM" in current folder
       find . -type f -exec chmod ARGUMENT_UNK {} \;
 find . -type f -exec chmod ARGUMENT_UNK {} \;
[text-case  43 ] =========================================================
  [original-pair]
       find all text file in folder _UNK and not search beyond "_NUM" level
       find /home/calvin/ -maxdepth _NUM -name ARGUMENT_UNK
  [new-pair]
       display all "normal/regular" file in current folder and not go beyond "_NUM" level
       find . -maxdepth _NUM -type f
 find . -maxdepth _NUM -type f
[text-case  44 ] =========================================================
  [original-pair]
       list all "*.bak" file in current directory tree
       find . -name ARGUMENT_UNK -ls
  [new-pair]
       remove all "*.bak" file under current directory
       find . -type f -name ARGUMENT_UNK -print0 | xargs -0 rm -v
 find . -type f -name ARGUMENT_UNK -print0 | xargs -0 rm -v
[text-case  45 ] =========================================================
  [original-pair]
       list all file matching regular expression "*foo*" in _UNK form
       find . -name '*foo*' -exec ls -l -a -h {} \;
  [new-pair]
       find file matching regular expression _UNK
       find . | xargs grep ARGUMENT_UNK
 find . | xargs grep ARGUMENT_UNK
[text-case  46 ] =========================================================
  [original-pair]
       find image in specific folder
       find ARGUMENT_UNK -name "articles.jpg"
  [new-pair]
       find image in folder of image
       find images -name "articles.jpg"
 find images -name "articles.jpg"
[text-case  47 ] =========================================================
  [original-pair]
       find recursively all regular file in directory tree _UNK changed within last "_NUM" minute and copy to directory c
       find ARGUMENT_UNK -type f -cmin -_NUM -exec cp '{}' c \;
  [new-pair]
       find all regular file in current directory tree modified within last "_NUM" minute
       find . ARGUMENT_UNK f -mmin -_NUM
 find . ARGUMENT_UNK f -mmin -_NUM
[text-case  48 ] =========================================================
  [original-pair]
       find recursively all regular file changed within last "_NUM" minute starting from directory _UNK
       find ARGUMENT_UNK -type f -cmin -_NUM
  [new-pair]
       find file modified in last "_NUM" minute starting from current directory
       find . -mmin -_NUM
 find . -mmin -_NUM
[text-case  49 ] =========================================================
  [original-pair]
       find recursively all file changed within last "_NUM" minute starting from directory _UNK
       find ARGUMENT_UNK -cmin -_NUM
  [new-pair]
       find file modified in last "_NUM" minute starting from current directory
       find . -mmin -_NUM
 find . -mmin -_NUM
[text-case  50 ] =========================================================
  [original-pair]
       count number of file in "/usr/ports" directory tree whose name begin with "pkg-plist" and contain _UNK
       find /usr/ports/ -name pkg-plist* -exec grep _LONG_PATTERN '{}' + | wc -l
  [new-pair]
       count number of file in "/usr/ports" directory tree whose name begin with "pkg-plist" and contain _UNK
       find /usr/ports/ -name pkg-plist* -exec grep -l ARGUMENT_UNK '{}' + | wc -l
 find /usr/ports/ -name pkg-plist* -exec grep -l ARGUMENT_UNK '{}' + | wc -l
[text-case  51 ] =========================================================
  [original-pair]
       search for word "mysql" in all file in current containing word _UNK in name "print_NUM" used to handle file with newlines in name or only space in name
       find . -iname ARGUMENT_UNK -print0 | xargs -I -{ -} -0 grep -i mysql "{}"
  [new-pair]
       remove all text file from current folder "print_NUM" used to handle file whose name only space or file newlines in name
       find -name "*.txt" -print0 | xargs -0 rm
 find -name "*.txt" -print0 | xargs -0 rm
[text-case  52 ] =========================================================
  [original-pair]
       to match only hidden dot directory
       find ARGUMENT_UNK -type d -name ".*" -print0 -exec ls -l -r -t {} \;
  [new-pair]
       find all hidden file
       find /tmp -type f -name ".*"
 find /tmp -type f -name ".*"
[text-case  53 ] =========================================================
  [original-pair]
       find directory with permission "_NUM" and change to "_NUM" recursively
       find /home -type d -perm ARGUMENT_UNK -print -exec chmod ARGUMENT_UNK {} \;
  [new-pair]
       find all directory with "_NUM" permission and change permission to "_NUM"
       find . -type d -perm ARGUMENT_UNK -exec chmod ARGUMENT_UNK {} \;
 find . -type d -perm ARGUMENT_UNK -exec chmod ARGUMENT_UNK {} \;
[text-case  54 ] =========================================================
  [original-pair]
       search for file in entire file system ha word "filename" in name
       find / -name ARGUMENT_UNK
  [new-pair]
       search for file "filename" in entire file system
       find / -name filename
 find / -name filename
[text-case  55 ] =========================================================
  [original-pair]
       find all file and directory in current directory tree except whose name "dirname" case insensitive
       find ./ -iname ! -iname dirname
  [new-pair]
       search file from directory tree "dirname" for string "foo"
       find dirname -print0 | xargs -0 grep foo
 find dirname -print0 | xargs -0 grep foo
[text-case  56 ] =========================================================
  [original-pair]
       find all file in current directory tree whose name "file_name" except for with pathnames matching pattern _LONG_PATTERN
       find ./ -iname file_name ! -path _LONG_PATTERN
  [new-pair]
       search current directory tree for file named "file_name"
       find . -name file_name
 find . -name file_name
[text-case  57 ] =========================================================
  [original-pair]
       search current directory tree for file containing _UNK in name
       find . -name ARGUMENT_UNK
  [new-pair]
       find all file containing _UNK
       find . -type f -exec grep YOURSTRING /dev/null {} \;
 find . -type f -exec grep YOURSTRING /dev/null {} \;
[text-case  58 ] =========================================================
  [original-pair]
       find file with inode number "_NUM"
       find / -inum _NUM
  [new-pair]
       delete file with inode number "_NUM"
       find . -type f -inum _NUM -delete
 find . -type f -inum _NUM -delete
[text-case  59 ] =========================================================
  [original-pair]
       display top "_NUM" _UNK file in current folder present in same partition of current folder
       find . -xdev -printf ARGUMENT_UNK ARGUMENT_UNK | sort -n -r | head -_NUM
  [new-pair]
       find all log file in file system present in current partition
       find / -xdev -name "*.log"
 find / -xdev -name "*.log"
[text-case  60 ] =========================================================
  [original-pair]
       find all _UNK "files/directories" under home directory
       find $HOME -name ARGUMENT_UNK
  [new-pair]
       find all "files/directories" under _UNK directory
       find ARGUMENT_UNK
 find ARGUMENT_UNK
[text-case  61 ] =========================================================
  [original-pair]
       find _UNK anywhere under home directory
       find $HOME -name ARGUMENT_UNK
  [new-pair]
       find all file named _UNK anywhere on system
       find / -name vimrc
 find / -name vimrc
[text-case  62 ] =========================================================
  [original-pair]
       find all directory starting from "/" permission "_NUM"
       find / -type d -perm ARGUMENT_UNK
  [new-pair]
       find all regular file starting from "/" permission "_NUM"
       find / -type f -perm ARGUMENT_UNK
 find / -type f -perm ARGUMENT_UNK
[text-case  63 ] =========================================================
  [original-pair]
       print list of all directory under current directory and below
       find ./ -type d -print
  [new-pair]
       print list of all file under current directory and below
       find .
 find .
[text-case  64 ] =========================================================
  [original-pair]
       find all configuration file in home directory "&" substitute _UNK in file
       find $HOME -name "*.conf" -exec sed -i ARGUMENT_UNK {} \;
  [new-pair]
       find all configuration file in folder
       find /home/pat -iname "*.conf"
 find /home/pat -iname "*.conf"
[text-case  65 ] =========================================================
  [original-pair]
       find all "files/directories" named "file_NUM" in maximum "_NUM" level down current directory
       find -maxdepth _NUM -name file_NUM
  [new-pair]
       find all file in maximum "_NUM" level down current directory
       find . -maxdepth _NUM -type f
 find . -maxdepth _NUM -type f
[text-case  66 ] =========================================================
  [original-pair]
       find "file_NUM" in level "_NUM" directory and above
       find -maxdepth _NUM -name file_NUM
  [new-pair]
       find all "file_NUM" and "file_NUM" "files/directories" under current directory
       find . \( -name file_NUM -or -name file_NUM \)
 find . \( -name file_NUM -or -name file_NUM \)
[text-case  67 ] =========================================================
  [original-pair]
       display long listing of all file in current folder accessed in today from start of day
       find -daystart -atime _NUM -ls
  [new-pair]
       find all file in directory modified today ( from start of day )
       find /var/log -daystart -mtime _NUM
 find /var/log -daystart -mtime _NUM
[text-case  68 ] =========================================================
  [original-pair]
       display all file in current folder changed in last "_NUM" hour
       find . -ctime -_NUM -print
  [new-pair]
       find all file in current folder not changed in last "_NUM" hour
       find ./ -daystart -ctime +_NUM
 find ./ -daystart -ctime +_NUM
[text-case  69 ] =========================================================
  [original-pair]
       locate file whose status wa changed le than "_NUM" day ago
       find . -ctime -_NUM -print
  [new-pair]
       find all file under current directory whose status wa changed le than "_NUM" day ago and show last "_NUM" line of output
       find . -type f -ctime -_NUM | tail -n _NUM
 find . -type f -ctime -_NUM | tail -n _NUM
[text-case  70 ] =========================================================
  [original-pair]
       search current working directory tree for file whose name start with _UNK or _UNK
       find . \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       search current directory for regular file whose name start with
       find . -name 'my*' -type f
 find . -name 'my*' -type f
[text-case  71 ] =========================================================
  [original-pair]
       display all file in current folder start with either _UNK or _UNK
       find . \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       find all file in current folder start with _UNK
       find . -name pro*
 find . -name pro*
[text-case  72 ] =========================================================
  [original-pair]
       search current directory and all of sub-directory for any PDF file _UNK to _UNK shell from _UNK anything in "*.pdf" before _UNK passed to find
       find . -name '*.pdf' -print
  [new-pair]
       search current directory and all of sub-directory for any PDF file _UNK to _UNK shell from _UNK "*" before "it\'s" passed to find
       find . -name ARGUMENT_UNK -print
 find . -name ARGUMENT_UNK -print
[text-case  73 ] =========================================================
  [original-pair]
       display list of all hidden file in home folder
       find $HOME -name ".*" -ls
  [new-pair]
       display all text file and hidden file in home folder
       find ~ -name "*.txt" ARGUMENT_UNK \( print -or -name ".*" \) ARGUMENT_UNK print
 find ~ -name "*.txt" ARGUMENT_UNK \( print -or -name ".*" \) ARGUMENT_UNK print
[text-case  74 ] =========================================================
  [original-pair]
       display all file in folder bar only in path _UNK ( no output _UNK )
       find bar -path ARGUMENT_UNK -print
  [new-pair]
       find all file in _UNK and print only filename ( not path )
       find ARGUMENT_UNK -type f -printf "%f\n"
 find ARGUMENT_UNK -type f -printf "%f\n"
[text-case  75 ] =========================================================
  [original-pair]
       find all file in current directory word _UNK in name
       find . -name ARGUMENT_UNK
  [new-pair]
       find all file word _UNK in name in folder
       find /etc -name *fstab*
 find /etc -name *fstab*
[text-case  76 ] =========================================================
  [original-pair]
       search current directory tree for _UNK file
       find . -name ARGUMENT_UNK
  [new-pair]
       search current directory tree for file _UNK
       find -name ARGUMENT_UNK
 find -name ARGUMENT_UNK
[text-case  77 ] =========================================================
  [original-pair]
       find all text file present in current directory _UNK file
       find . -type f \( -iname "*.txt" -and ! -iname ".*" \)
  [new-pair]
       find all text file in current folder excluding present _UNK folder _UNK and search for pattern
       find . -name '*.txt' ! -wholename ARGUMENT_UNK -exec grep 'sometext' '{}' \; -print
 find . -name '*.txt' ! -wholename ARGUMENT_UNK -exec grep 'sometext' '{}' \; -print
[text-case  78 ] =========================================================
  [original-pair]
       search current directory tree for TXT file skipping hidden "_NUM"
       find . -type f \( -iname "*.txt" -and ! -iname ".*" \)
  [new-pair]
       search current directory tree for hidden file skipping _UNK
       find . -type f \( -iname ".*" -and ! -iname ".htaccess" \)
 find . -type f \( -iname ".*" -and ! -iname ".htaccess" \)
[text-case  79 ] =========================================================
  [original-pair]
       find all log file in file system
       find / -name "*.log"
  [new-pair]
       find all log file in file system present in current partition
       find / -xdev -name "*.log"
 find / -xdev -name "*.log"
[text-case  80 ] =========================================================
  [original-pair]
       search for "*.log" file starting from "/"
       find / -name "*.log"
  [new-pair]
       search for "*.log" file starting from "/" ( root ) and only in current file system
       find / -xdev -name "*.log"
 find / -xdev -name "*.log"
[text-case  81 ] =========================================================
  [original-pair]
       find all _UNK "files/directories" under current directory and change permission to "_NUM"
       find . -name ARGUMENT_UNK -print0 | xargs -0 chmod ARGUMENT_UNK
  [new-pair]
       find all directory under _UNK and change permission to "_NUM"
       find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
 find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
[text-case  82 ] =========================================================
  [original-pair]
       find all _UNK "files/directories" under current directory and change permission to "_NUM"
       find . -name ARGUMENT_UNK -print0 | xargs -0 chmod ARGUMENT_UNK
  [new-pair]
       find all directory under _UNK and change permission to "_NUM"
       find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
 find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
[text-case  83 ] =========================================================
  [original-pair]
       find all _UNK ( case insensitive ) "files/directories" under current directory and change permission to "_NUM"
       find . -iname ARGUMENT_UNK | xargs chmod ARGUMENT_UNK
  [new-pair]
       find file folder ( search case insensitive )
       find / -iname findcommandexamples.txt
 find / -iname findcommandexamples.txt
[text-case  84 ] =========================================================
  [original-pair]
       search for file in current folder excluding present in specific path
       find ARGUMENT_UNK -name ARGUMENT_UNK -not -path ARGUMENT_UNK
  [new-pair]
       display all file in current folder excluding present in specific path
       find . -not -path '*/\.*'
 find . -not -path '*/\.*'
[text-case  85 ] =========================================================
  [original-pair]
       search for file in current folder excluding search in folder _UNK
       find . \( -path ARGUMENT_UNK -prune -or -name ARGUMENT_UNK \) -print
  [new-pair]
       search for _UNK file in current folder
       find . -print | grep ARGUMENT_UNK ARGUMENT_UNK
 find . -print | grep ARGUMENT_UNK ARGUMENT_UNK
[text-case  86 ] =========================================================
  [original-pair]
       search for file in current folder excluding search in folder _UNK
       find ARGUMENT_UNK \( -path ARGUMENT_UNK -prune -or -name ARGUMENT_UNK \) -print
  [new-pair]
       search for _UNK file in current folder
       find . -print | grep ARGUMENT_UNK ARGUMENT_UNK
 find . -print | grep ARGUMENT_UNK ARGUMENT_UNK
[text-case  87 ] =========================================================
  [original-pair]
       delete all HTML file under tree _UNK
       find ARGUMENT_UNK -iname ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       search current directory for HTML file whose name begin with "a"
       find . -maxdepth _NUM -name ARGUMENT_UNK
 find . -maxdepth _NUM -name ARGUMENT_UNK
[text-case  88 ] =========================================================
  [original-pair]
       display all file in current directory excluding path _UNK _UNK "git"
       find . \( \( ! -path ARGUMENT_UNK -and ! -path ARGUMENT_UNK -and ! -path "*.git*" \) -and -print \)
  [new-pair]
       display all regular file in current folder excluding present in path "git"
       find . \( -path "*.git*" -prune -or -type f \) -print
 find . \( -path "*.git*" -prune -or -type f \) -print
[text-case  89 ] =========================================================
  [original-pair]
       remove all _UNK file from current directory tree
       find . -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       remove all _UNK file from current directory tree
       find . -name ARGUMENT_UNK | xargs rm -f
 find . -name ARGUMENT_UNK | xargs rm -f
[text-case  90 ] =========================================================
  [original-pair]
       find all "*.py" file under and below current directory and search for _UNK
       find . -name '*.py' -exec grep --color ARGUMENT_UNK {} +
  [new-pair]
       find all "*.py" file under current directory
       find . -type f -name "*.py"
 find . -type f -name "*.py"
[text-case  91 ] =========================================================
  [original-pair]
       find all html javascript and text file in current folder
       find . -type f \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name "*.txt" \)
  [new-pair]
       find all javascript file under current folder
       find . -name '*.js'
 find . -name '*.js'
[text-case  92 ] =========================================================
  [original-pair]
       search from "/" directory for any file larger than "_NUMk" ( _UNK "_NUMMB" )
       find / -size +_NUMk
  [new-pair]
       find file larger than "_NUMk"
       find . -size +_NUMk
 find . -size +_NUMk
[text-case  93 ] =========================================================
  [original-pair]
       display all file in entire file system bigger than "_NUMMB"
       find / -size +_NUMk
  [new-pair]
       show all file in entire file system bigger than "_NUMMB"
       find / -size +_NUMM
 find / -size +_NUMM
[text-case  94 ] =========================================================
  [original-pair]
       display all file in current folder after _UNK in current folder ( dot output of command )
       find . -prune -print
  [new-pair]
       display filename not begin with dot ( )
       find . -maxdepth _NUM -name '[!.]*' -printf _LONG_PATTERN
 find . -maxdepth _NUM -name '[!.]*' -printf _LONG_PATTERN
[text-case  95 ] =========================================================
  [original-pair]
       display all pdf file in current folder
       find . -name ARGUMENT_UNK
  [new-pair]
       find all pdf file in current folder
       find . -name ARGUMENT_UNK -print
 find . -name ARGUMENT_UNK -print
[text-case  96 ] =========================================================
  [original-pair]
       find all pdf file in current folder and create tar ball of all file
       find . -iname "*.pdf" -exec tar ARGUMENT_UNK ARGUMENT_UNK {} \;
  [new-pair]
       create tar ball of all jpg and png image in current folder
       find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
 find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
[text-case  97 ] =========================================================
  [original-pair]
       create tar ball of all pdf file in current folder
       find . -name ARGUMENT_UNK | xargs tar ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       create tar ball of all jpg and png image in current folder
       find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
 find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
[text-case  98 ] =========================================================
  [original-pair]
       create tar ball of all pdf file in current folder
       find . -name '*.pdf' -print0 | tar ARGUMENT_UNK ARGUMENT_UNK --null -T -
  [new-pair]
       create tar ball of all jpg and png image in current folder
       find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
 find . \( -iname "*.png" -or -iname "*.jpg" \) -print -exec tar -r -f images.tar {} \;
[text-case  99 ] =========================================================
  [original-pair]
       find file ending with ".mp_NUM" or ".jpg"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -print
  [new-pair]
       list file with name ending with ".mp_NUM" or ".jpg" and beginning with "foo"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
 find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
[text-case  100 ] =========================================================
  [original-pair]
       find file ending with ".mp_NUM" and ".jpg"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -print
  [new-pair]
       list file with name ending with ".mp_NUM" or ".jpg" and beginning with "foo"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
 find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
[text-case  101 ] =========================================================
  [original-pair]
       find all file ending with ".mp_NUM" or ".jpg"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -print
  [new-pair]
       list file with name ending with ".mp_NUM" or ".jpg" and beginning with "foo"
       find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
 find . \( -name '*.mp_NUM' -or -name '*.jpg' \) -name 'foo*' -print
[text-case  102 ] =========================================================
  [original-pair]
       display all regular file in folder _LONG_PATTERN modified in last _UNK _UNK _UNK hour and excluding hidden file
       find ARGUMENT_UNK -type f ! -name ARGUMENT_UNK -mtime ARGUMENT_UNK
  [new-pair]
       find all file in folder _UNK modified in last "_NUM" hour excluding hidden file and with name _UNK
       find ARGUMENT_UNK -type f ! -name ".*" -mtime -_NUM | egrep -v -f ARGUMENT_UNK
 find ARGUMENT_UNK -type f ! -name ".*" -mtime -_NUM | egrep -v -f ARGUMENT_UNK
[text-case  103 ] =========================================================
  [original-pair]
       copy all java file from current folder to another folder
       find . -name "*.java" -print0 | xargs -0 ARGUMENT_UNK % cp % ARGUMENT_UNK
  [new-pair]
       search for file in directory and copy file to another folder
       find ARGUMENT_UNK -name ARGUMENT_UNK -printf ARGUMENT_UNK -printf ARGUMENT_UNK | xargs -0 -L -2 cp -n
 find ARGUMENT_UNK -name ARGUMENT_UNK -printf ARGUMENT_UNK -printf ARGUMENT_UNK | xargs -0 -L -2 cp -n
[text-case  104 ] =========================================================
  [original-pair]
       search for all "mp_NUM" file in folder "/home/you" accessed "_NUM" ago
       find /home/you -iname ARGUMENT_UNK -atime _NUM -type -f
  [new-pair]
       search for all "mp_NUM" file in folder "/home/you" accessed exactly "_NUM*_NUM" hour ago
       find /home/you -iname "*.mp_NUM" -atime _NUM -type -f
 find /home/you -iname "*.mp_NUM" -atime _NUM -type -f
[text-case  105 ] =========================================================
  [original-pair]
       find file owned by no group
       find / -nogroup
  [new-pair]
       find file owned by no user
       find / -nouser
 find / -nouser
[text-case  106 ] =========================================================
  [original-pair]
       search current directory and sub-directories for any file ha _UNK somewhere in name
       find . -name ARGUMENT_UNK -print
  [new-pair]
       find any file ha "disc" somewhere in name in current directory and all of sub-directories
       find . -name *disc*
 find . -name *disc*
[text-case  107 ] =========================================================
  [original-pair]
       find all file having certain word in name in current folder
       find . -name ARGUMENT_UNK -print
  [new-pair]
       find all file in folder having specific word in name
       find /usr/local -name "*blast*"
 find /usr/local -name "*blast*"
[text-case  108 ] =========================================================
  [original-pair]
       search for file with name "temp" in "/usr" folder
       find /usr -name temp -print
  [new-pair]
       search for file with name "temp" and not accessed in last "_NUM*_NUM" hour in "/usr" folder
       find /usr -name temp -atime +_NUM -print
 find /usr -name temp -atime +_NUM -print
[text-case  109 ] =========================================================
  [original-pair]
       display all file in current folder modified between "_NUM" date
       find . -newermt ARGUMENT_UNK _NUM \( ARGUMENT_UNK -and ! -newermt \) ARGUMENT_UNK _NUM ARGUMENT_UNK
  [new-pair]
       display all file modified between "_NUM" date in current folder
       find . -type f -newermt "_NUM-_NUM-_NUM" ! -newermt "_NUM-_NUM-_NUM"
 find . -type f -newermt "_NUM-_NUM-_NUM" ! -newermt "_NUM-_NUM-_NUM"
[text-case  110 ] =========================================================
  [original-pair]
       find all _UNK file in current directory
       find ./ -name ARGUMENT_UNK
  [new-pair]
       find file in _UNK directory
       find /usr /home -name ARGUMENT_UNK -type f -print
 find /usr /home -name ARGUMENT_UNK -type f -print
[text-case  111 ] =========================================================
  [original-pair]
       list all _UNK file in current folder
       find ./ -name ARGUMENT_UNK -ls
  [new-pair]
       list all directory in folder _UNK
       find httpdocs -type d
 find httpdocs -type d
[text-case  112 ] =========================================================
  [original-pair]
       display all _UNK file in current directory along with timestamp
       find ./ -name ARGUMENT_UNK -printf _LONG_PATTERN
  [new-pair]
       print _UNK "*.txt" file under current directory with timestamp and path
       find . -name "*.txt" -printf _LONG_PATTERN | sort | tail -_NUM
 find . -name "*.txt" -printf _LONG_PATTERN | sort | tail -_NUM
[text-case  113 ] =========================================================
  [original-pair]
       find all file in current folder specific word in name
       find . -name '*foo*'
  [new-pair]
       find all file in current directory specific word in name
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  114 ] =========================================================
  [original-pair]
       find file having specific name in folder
       find ~/Books -name Waldo
  [new-pair]
       find all file in folder having specific word in name
       find /usr/local -name "*blast*"
 find /usr/local -name "*blast*"
[text-case  115 ] =========================================================
  [original-pair]
       search "~/Books" directory recursively for file named "Waldo"
       find ~/Books -name Waldo
  [new-pair]
       search "~/Books" directory recursively for regular file named "Waldo"
       find ~/Books -type f -name Waldo
 find ~/Books -type f -name Waldo
[text-case  116 ] =========================================================
  [original-pair]
       display all regular file in current folder dont not permission "_NUM"
       find . -type f ! -perm ARGUMENT_UNK
  [new-pair]
       find all directory in current directory dont execute permission
       find -type d ! -perm -111
 find -type d ! -perm -111
[text-case  117 ] =========================================================
  [original-pair]
       find all file readable or writable by owner
       find . -perm ARGUMENT_UNK -print
  [new-pair]
       find all file readable and writable by owner
       find . -perm ARGUMENT_UNK -print
 find . -perm ARGUMENT_UNK -print
[text-case  118 ] =========================================================
  [original-pair]
       find file with "_NUM" permission and change to "_NUM"
       find / -type f -perm ARGUMENT_UNK -print -exec chmod ARGUMENT_UNK {} \;
  [new-pair]
       find all file with "_NUM" permission and change permission to "_NUM"
       find . -type f -perm ARGUMENT_UNK -exec chmod ARGUMENT_UNK {} \;
 find . -type f -perm ARGUMENT_UNK -exec chmod ARGUMENT_UNK {} \;
[text-case  119 ] =========================================================
  [original-pair]
       force delete all file modified in last "_NUM" day
       find . -mtime -_NUM -exec rm -r -f {} \;
  [new-pair]
       force delete all file in folder not modified in last "_NUM" day
       find /path-to-directory -mtime +_NUM -exec rm -f {} \;
 find /path-to-directory -mtime +_NUM -exec rm -f {} \;
[text-case  120 ] =========================================================
  [original-pair]
       find all file on system whose name _UNK
       find / -name ARGUMENT_UNK
  [new-pair]
       find all file on system whose name _UNK
       find / -name ARGUMENT_UNK
 find / -name ARGUMENT_UNK
[text-case  121 ] =========================================================
  [original-pair]
       find all "*.txt" file reside under and below _UNK
       find ARGUMENT_UNK -name "*.txt"
  [new-pair]
       find all file called _UNK reside under and below _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK
 find ARGUMENT_UNK -name ARGUMENT_UNK
[text-case  122 ] =========================================================
  [original-pair]
       search for all file in current folder start with "my"
       find . -name 'my*'
  [new-pair]
       search for all "regular/normal" file in current folder start with "my"
       find . -name 'my*' -type f
 find . -name 'my*' -type f
[text-case  123 ] =========================================================
  [original-pair]
       search current directory for file whose name start with
       find . -name 'my*'
  [new-pair]
       search current directory for regular file whose name start with
       find . -name 'my*' -type f
 find . -name 'my*' -type f
[text-case  124 ] =========================================================
  [original-pair]
       search current directory tree for file whose name begin with "my"
       find . -name 'my*'
  [new-pair]
       look in current directory and below for all file whose name begin with either "my" or _UNK
       find . \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK \) -print
 find . \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK \) -print
[text-case  125 ] =========================================================
  [original-pair]
       search current directory except subdirectory tree ".svn" for file whose name _UNK
       find . -name ARGUMENT_UNK ! -path '.svn'
  [new-pair]
       delete all ".svn" subdirectory under current directory
       rm -r -f $( find . -type d -name ".svn" )
 rm -r -f $( find . -type d -name ".svn" )
[text-case  126 ] =========================================================
  [original-pair]
       display all instance of _UNK file in current folder not in sub directory tree ".svn"
       find . -name ARGUMENT_UNK ! -path '.svn'
  [new-pair]
       find all instance of file in current folder
       find . -name file_NUM -print
 find . -name file_NUM -print
[text-case  127 ] =========================================================
  [original-pair]
       find all "normal/regular" file in current folder end with "~" or begin and end with "#" and and move to temp folder
       find . -maxdepth _NUM -type f -name '*~' \( -exec mv {} /tmp/ \; -or -name ARGUMENT_UNK \) -exec mv {} /tmp/ \;
  [new-pair]
       find all file in current folder end with _UNK
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  128 ] =========================================================
  [original-pair]
       delete all file ending with "~" in current folder
       find . -name "*~" -print | xargs rm
  [new-pair]
       display all file in current folder ending with "~" or "#" using regular expression
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  129 ] =========================================================
  [original-pair]
       delete all file ending with "~" in current folder
       find -name '*~' -print0 | xargs -0 rm
  [new-pair]
       display all file in current folder ending with "~" or "#" using regular expression
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  130 ] =========================================================
  [original-pair]
       delete all file ending with "~" in current folder
       find -name '*~' -delete
  [new-pair]
       display all file in current folder ending with "~" or "#" using regular expression
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  131 ] =========================================================
  [original-pair]
       find all file ending with "~" in current folder and move to temp folder
       find -name '*~' -print0 | xargs -0 -I ARGUMENT_UNK mv ARGUMENT_UNK /tmp/
  [new-pair]
       move all file in current folder to temp folder and search atleast in "_NUM" subfolder
       find . -mindepth _NUM -print0 | xargs -0 -I ARGUMENT_UNK mv , /tmp
 find . -mindepth _NUM -print0 | xargs -0 -I ARGUMENT_UNK mv , /tmp
[text-case  132 ] =========================================================
  [original-pair]
       find all "normal/regular" file in current folder end with "~" or begin and end with "#" and and and delete
       find . -maxdepth _NUM -type f -name '*~' \( -delete -or -name ARGUMENT_UNK \) -delete
  [new-pair]
       display all file in current folder ending with "~" or "#" using regular expression
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  133 ] =========================================================
  [original-pair]
       find all html file in current folder not modified in last "_NUM" day
       find . -mtime +_NUM -name "*.html" -print
  [new-pair]
       find all html file in current folder modified in last "_NUM" day
       find . -mtime -_NUM -name "*.html" -print
 find . -mtime -_NUM -name "*.html" -print
[text-case  134 ] =========================================================
  [original-pair]
       display all html file in current folder not modified in last "_NUM*_NUM" hour
       find . -mtime +_NUM -name "*.html" -print
  [new-pair]
       display all html file in current folder modified in last "_NUM*_NUM" hour
       find . -mtime -_NUM -name "*.html" -print
 find . -mtime -_NUM -name "*.html" -print
[text-case  135 ] =========================================================
  [original-pair]
       find "*.html" file in current directory tree last modified more than "_NUM" day ago
       find . -mtime +_NUM -name "*.html" -print
  [new-pair]
       find "*.html" file in current directory tree modified "_NUM" day ago
       find . -mtime _NUM -name "*.html" -print
 find . -mtime _NUM -name "*.html" -print
[text-case  136 ] =========================================================
  [original-pair]
       find file "filename.txt" in usr folder
       find /usr -name filename.txt -print
  [new-pair]
       search for file "filename.txt" in current folder
       find . -name filename.txt
 find . -name filename.txt
[text-case  137 ] =========================================================
  [original-pair]
       find all file in current directory with name _UNK in current _UNK
       find . -xdev -name ARGUMENT_UNK -print
  [new-pair]
       find file with name _UNK in current folder
       find -print | grep ARGUMENT_UNK
 find -print | grep ARGUMENT_UNK
[text-case  138 ] =========================================================
  [original-pair]
       find all file belong to particular group
       find /var/www -group developer
  [new-pair]
       find all file belong to specific group
       find -group ARGUMENT_UNK
 find -group ARGUMENT_UNK
[text-case  139 ] =========================================================
  [original-pair]
       find all file named "Makefile" in "/usr/ports" directory tree and count number of line in matching regular expression _UNK
       find /usr/ports/ -name Makefile -exec grep ARGUMENT_UNK '{}' + | wc -l
  [new-pair]
       find all file named "Makefile" in "/usr/ports" directory tree and count number of line in matching regular expression _UNK
       find /usr/ports/ -name Makefile -exec grep ARGUMENT_UNK '{}' + | wc -l
 find /usr/ports/ -name Makefile -exec grep ARGUMENT_UNK '{}' + | wc -l
[text-case  140 ] =========================================================
  [original-pair]
       find all "*.c" file under and below current directory contain "hogehoge"
       find . -name *.c | xargs grep hogehoge
  [new-pair]
       search all "*.c" file from current directory tree for "hogehoge"
       find . -name *.c -print0 | xargs -0 grep hogehoge /dev/null
 find . -name *.c -print0 | xargs -0 grep hogehoge /dev/null
[text-case  141 ] =========================================================
  [original-pair]
       find count of text file present in current working directory
       find . -maxdepth _NUM -name *.txt -print0 | grep -c -z .
  [new-pair]
       find all directory under present working directory
       find $PWD -type d
 find $PWD -type d
[text-case  142 ] =========================================================
  [original-pair]
       show count of number of filename ending in ".txt" in current directory without descending into sub-directories
       find . -maxdepth _NUM -name *.txt -print0 | grep -c -z .
  [new-pair]
       find all directory under _UNK directory without descending into any sub-directories
       find ARGUMENT_UNK -mindepth _NUM -maxdepth _NUM -type d
 find ARGUMENT_UNK -mindepth _NUM -maxdepth _NUM -type d
[text-case  143 ] =========================================================
  [original-pair]
       search current directory tree for all image file
       find . -type f -regex ARGUMENT_UNK
  [new-pair]
       find image in folder of image
       find images -name "articles.jpg"
 find images -name "articles.jpg"
[text-case  144 ] =========================================================
  [original-pair]
       find all file with name _UNK in current directory and all of "it\'s" sub-directories
       find -name "MyCProgram.c"
  [new-pair]
       search current directory and all of sub-directories for file _UNK
       find . -name file_NUM -print
 find . -name file_NUM -print
[text-case  145 ] =========================================================
  [original-pair]
       find all directory in folder _UNK with extension _UNK
       find ARGUMENT_UNK -type d -name ARGUMENT_UNK -print
  [new-pair]
       find file recursively with extension _UNK
       find . -name "*.ext"
 find . -name "*.ext"
[text-case  146 ] =========================================================
  [original-pair]
       find all file ending with specific word in current folder
       find . -type f \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       search for word in current directory in all file ending with specific word
       find . -name '*.[ch]' | xargs grep -E 'expr'
 find . -name '*.[ch]' | xargs grep -E 'expr'
[text-case  147 ] =========================================================
  [original-pair]
       search current directory tree for _UNK _UNK and _UNK file
       find . -type f \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       search _UNK directory tree for _UNK directory
       find ARGUMENT_UNK -type d -name ARGUMENT_UNK
 find ARGUMENT_UNK -type d -name ARGUMENT_UNK
[text-case  148 ] =========================================================
  [original-pair]
       list regular file file name end with _UNK _UNK or "html" in current directory
       find . -type f \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       find all file in current folder name _UNK or _UNK in
       find . -regex '.*\(net\|comm\).*'
 find . -regex '.*\(net\|comm\).*'
[text-case  149 ] =========================================================
  [original-pair]
       search for directory in current folder and delete
       find /usr/ports/ -name work -type d -print -exec rm -r -f {} \;
  [new-pair]
       search for file in current directory and delete
       find . -type f -name ARGUMENT_UNK -exec rm -f {} \;
 find . -type f -name ARGUMENT_UNK -exec rm -f {} \;
[text-case  150 ] =========================================================
  [original-pair]
       force delete all directory in folder specific name
       find /usr/ports/ -name work -type d -print -exec rm -r -f {} \;
  [new-pair]
       force delete all file in current folder
       find . | xargs -i rm -f "{}"
 find . | xargs -i rm -f "{}"
[text-case  151 ] =========================================================
  [original-pair]
       remove all "work" directory residing in "/usr/ports" and below
       find /usr/ports/ -name work -type d -print -exec rm -r -f {} \;
  [new-pair]
       list all file and directory residing in current directory and below
       find -print0 | xargs -0 ls
 find -print0 | xargs -0 ls
[text-case  152 ] =========================================================
  [original-pair]
       list all regular file owned by root with permission "_NUM"
       find / -type f -user root -perm -4000 -exec ls -l {} \;
  [new-pair]
       find directory owned by user _UNK with permission "_NUM"
       find / -user ARGUMENT_UNK -type d -perm ARGUMENT_UNK -print
 find / -user ARGUMENT_UNK -type d -perm ARGUMENT_UNK -print
[text-case  153 ] =========================================================
  [original-pair]
       display long list of all file in file system belong to specific user and _UNK set
       find / -type f -user root -perm -4000 -exec ls -l {} \;
  [new-pair]
       display all file in current folder belong to specific user
       find . -uid _NUM -print
 find . -uid _NUM -print
[text-case  154 ] =========================================================
  [original-pair]
       list "root\'s" regular file with permission "_NUM"
       find / -type f -user root -perm -4000 -exec ls -l {} \;
  [new-pair]
       find "root\'s" file in current directory tree
       find ./ -user root
 find ./ -user root
[text-case  155 ] =========================================================
  [original-pair]
       display long list of all "regular/normal" file in file system belong to root and with _UNK bit set
       find / -type f -user root -perm -4000 -exec ls -l {} \;
  [new-pair]
       display long listing of all "regular/normal" file in file system set uid bit or set _UNK bit enabled
       find / -type f \( -perm -4000 -or -perm -2000 \) -exec ls -l {} \;
 find / -type f \( -perm -4000 -or -perm -2000 \) -exec ls -l {} \;
[text-case  156 ] =========================================================
  [original-pair]
       remove all file in current folder not modified in last "_NUM" day
       find . -mtime +_NUM | xargs rm
  [new-pair]
       find all file in folder not modified in last "_NUM" day
       find ARGUMENT_UNK -mtime +_NUM -print
 find ARGUMENT_UNK -mtime +_NUM -print
[text-case  157 ] =========================================================
  [original-pair]
       remove all file last modified more than "_NUM" day ago from current directory tree
       find . -mtime +_NUM | xargs rm
  [new-pair]
       remove directory in _UNK modified more than "_NUM" day ago
       find ARGUMENT_UNK -maxdepth _NUM -type d -mtime +_NUM -exec rm -r -f {} \;
 find ARGUMENT_UNK -maxdepth _NUM -type d -mtime +_NUM -exec rm -r -f {} \;
[text-case  158 ] =========================================================
  [original-pair]
       search entire file system for specific file
       find / -name document -print
  [new-pair]
       find specific file in entire file system
       find / -name photo.jpg
 find / -name photo.jpg
[text-case  159 ] =========================================================
  [original-pair]
       find all file not modified in last "_NUM" day in folder and delete _UNK used to preserve file new line character in name
       find . -type f -mtime +_NUM -print0 | xargs -0 -r rm -f
  [new-pair]
       remove all file specific word in name "print_NUM" used to preserve file newlines in name
       find /mnt/zip -name _LONG_PATTERN -print0 | xargs rm
 find /mnt/zip -name _LONG_PATTERN -print0 | xargs rm
[text-case  160 ] =========================================================
  [original-pair]
       remove file in current directory tree modified more than "_NUM" day ago recursively
       find . -type f -mtime +_NUM -print0 | xargs -0 -r rm -f
  [new-pair]
       remove all file in _UNK directory recursively last modified more than "_NUM" day ago
       find ARGUMENT_UNK -mtime +_NUM -exec rm {} \;
 find ARGUMENT_UNK -mtime +_NUM -exec rm {} \;
[text-case  161 ] =========================================================
  [original-pair]
       find string _UNK in file residing in current directory tree case insensitive
       find . -type f -print | xargs grep -n -i ARGUMENT_UNK
  [new-pair]
       find all regular file residing in current directory tree and search for string _UNK
       find . -type f -print | xargs grep -i ARGUMENT_UNK
 find . -type f -print | xargs grep -i ARGUMENT_UNK
[text-case  162 ] =========================================================
  [original-pair]
       find all file with specific permission in current folder
       find . ARGUMENT_UNK ARGUMENT_UNK _NUM -print
  [new-pair]
       find all file in directory with specific permission
       find "$directory" -perm "$permissions"
 find "$directory" -perm "$permissions"
[text-case  163 ] =========================================================
  [original-pair]
       find PHP file with _UNK class
       find . -type f -name "*.php" -exec grep --with-filename -c _LONG_PATTERN {} \; | grep ARGUMENT_UNK
  [new-pair]
       find PHP file containing "_NUM" or more class
       find . -type f -name "*.php" -exec grep --with-filename -c _LONG_PATTERN {} \; | grep ARGUMENT_UNK | sort -t ":" -k _NUM -n -r
 find . -type f -name "*.php" -exec grep --with-filename -c _LONG_PATTERN {} \; | grep ARGUMENT_UNK | sort -t ":" -k _NUM -n -r
[text-case  164 ] =========================================================
  [original-pair]
       count number of file named "file_NUM"
       find -name file_NUM | wc -l
  [new-pair]
       find all "files/directories" named "file_NUM" under current directory
       find -name file_NUM
 find -name file_NUM
[text-case  165 ] =========================================================
  [original-pair]
       count number of "files/directories" named "file_NUM" under current directory
       find -name file_NUM | wc -l
  [new-pair]
       find all "files/directories" named "file_NUM" under current directory
       find -name file_NUM
 find -name file_NUM
[text-case  166 ] =========================================================
  [original-pair]
       list empty directory in current directory tree
       find . -depth -empty -type d
  [new-pair]
       list all empty file under current directory
       find . -maxdepth _NUM -empty
 find . -maxdepth _NUM -empty
[text-case  167 ] =========================================================
  [original-pair]
       find all empty directory in current folder and all sub directory too
       find . -depth -empty -type d
  [new-pair]
       find and delete all empty directory in current folder and all sub directory too
       find . -depth -empty -type d -delete
 find . -depth -empty -type d -delete
[text-case  168 ] =========================================================
  [original-pair]
       display all home folder end with extension _UNK and accessed in last "_NUM*_NUM" hour and belong to user _UNK
       find /home -type f -name ARGUMENT_UNK -atime -_NUM -user ARGUMENT_UNK
  [new-pair]
       display all file in home folder belong to user _UNK and end with _UNK and accessed in last "_NUM*_NUM" hour
       find /home -type f -name ARGUMENT_UNK -atime -_NUM -user ARGUMENT_UNK
 find /home -type f -name ARGUMENT_UNK -atime -_NUM -user ARGUMENT_UNK
[text-case  169 ] =========================================================
  [original-pair]
       find all "regular/normal" file in folder le than "_NUM" byte
       find /usr/bin -type f -size -_NUMc
  [new-pair]
       find all file le than "_NUM" byte
       find / -size -_NUMc
 find / -size -_NUMc
[text-case  170 ] =========================================================
  [original-pair]
       find all "regular/normal" file in folder whose size le than "_NUM" byte
       find /usr/bin -type f -size -_NUMc
  [new-pair]
       find file in current directory tree whose size le than "_NUM" byte
       find . -size -_NUMc
 find . -size -_NUMc
[text-case  171 ] =========================================================
  [original-pair]
       find all file in current folder end with "ext_NUM" or "ext_NUM" or "ext_NUM"
       find -E . -regex ARGUMENT_UNK
  [new-pair]
       find all file whose name not begin with _UNK on "ext_NUM" file system
       find / -fstype ext_NUM -name zsh*
 find / -fstype ext_NUM -name zsh*
[text-case  172 ] =========================================================
  [original-pair]
       list all _UNK "files/directories" under "/usr" "/home" and "/tmp" directory
       find /usr /home /tmp -name ARGUMENT_UNK
  [new-pair]
       find all "files/directories" named _UNK under "/usr"
       find /usr -name ARGUMENT_UNK
 find /usr -name ARGUMENT_UNK
[text-case  173 ] =========================================================
  [original-pair]
       search "/usr" "/home" "/tmp" for _UNK file
       find /usr /home /tmp -name ARGUMENT_UNK
  [new-pair]
       search for directory _UNK in folder "/home"
       find /home -type d -name ARGUMENT_UNK
 find /home -type d -name ARGUMENT_UNK
[text-case  174 ] =========================================================
  [original-pair]
       find all "*.csv" file under "/foo/bar" and move to _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK -print0 | xargs -0 mv -t ARGUMENT_UNK
  [new-pair]
       find all "*.mp_NUM" file under "/foo/bar" and move to "/some/path"
       find ARGUMENT_UNK -name '*.mp_NUM' -exec mv -t /some/path {} +
 find ARGUMENT_UNK -name '*.mp_NUM' -exec mv -t /some/path {} +
[text-case  175 ] =========================================================
  [original-pair]
       find all "*.csv" file under _UNK and move to _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK -print0 | xargs -0 mv -t ARGUMENT_UNK
  [new-pair]
       find all _UNK file and move to directory _UNK
       find . -name "*.old" -exec mv {} ARGUMENT_UNK \;
 find . -name "*.old" -exec mv {} ARGUMENT_UNK \;
[text-case  176 ] =========================================================
  [original-pair]
       display all ".sh" script and perl file in current folder
       find . -type f \( -iname "*.sh" -or -iname "*.pl" \)
  [new-pair]
       display all ".sh" script in folder "/usr"
       find /usr -name '*.sh'
 find /usr -name '*.sh'
[text-case  177 ] =========================================================
  [original-pair]
       display all ".sh" script and perl file in current folder
       find . -type f \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK \)
  [new-pair]
       display all ".sh" script in folder "/usr"
       find /usr -name '*.sh'
 find /usr -name '*.sh'
[text-case  178 ] =========================================================
  [original-pair]
       find all "*.c" file under "$HOME" directory context contains _UNK
       find $HOME -name '*.c' -print | xargs grep -l ARGUMENT_UNK
  [new-pair]
       list all java file _UNK in context
       find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
 find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
[text-case  179 ] =========================================================
  [original-pair]
       find "*.c" file under "$HOME" and search for string _UNK in file
       find $HOME -name '*.c' -print | xargs grep -l ARGUMENT_UNK
  [new-pair]
       search "*.c" file residing in current directory tree for string _UNK
       find . -name *.c -exec grep -n -e ARGUMENT_UNK {} \;
 find . -name *.c -exec grep -n -e ARGUMENT_UNK {} \;
[text-case  180 ] =========================================================
  [original-pair]
       find _UNK "files/directories" under current directory ensuring directory _UNK before content
       find -name ARGUMENT_UNK -depth
  [new-pair]
       find _UNK "files/directories" under current directory
       find -name ARGUMENT_UNK
 find -name ARGUMENT_UNK
[text-case  181 ] =========================================================
  [original-pair]
       search for file whose name match _UNK directory _UNK _UNK before content
       find -name ARGUMENT_UNK -depth
  [new-pair]
       search _UNK for file whose name _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK
 find ARGUMENT_UNK -name ARGUMENT_UNK
[text-case  182 ] =========================================================
  [original-pair]
       display number of file in folder along with name
       find . -type d -ls | awk _LONG_PATTERN | sort -r -n | head
  [new-pair]
       search for file in current folder and display file name along with size
       find ARGUMENT_UNK -printf _LONG_PATTERN
 find ARGUMENT_UNK -printf _LONG_PATTERN
[text-case  183 ] =========================================================
  [original-pair]
       find file owner by user _UNK
       find -user ARGUMENT_UNK
  [new-pair]
       find all _UNK owned by user _UNK
       find / -user ARGUMENT_UNK -iname ARGUMENT_UNK
 find / -user ARGUMENT_UNK -iname ARGUMENT_UNK
[text-case  184 ] =========================================================
  [original-pair]
       save list of file in current directory to file _UNK
       find . -fprint foo
  [new-pair]
       change current working directory to _UNK and display all file in folder and save output to file _UNK
      

[text-case  185 ] =========================================================
  [original-pair]
       list regular file under "user\'s" home directory over "_NUMKB" and not accessed in over "_NUM" day
       find $HOME -type f -atime +_NUM -size _NUMk
  [new-pair]
       show listing of file not modified in over "_NUM" day or not accessed in over "_NUM" day
       find /mydir (-mtime \( +_NUM -or -atime +_NUM) \) -exec ls -l {} \;
 find /mydir (-mtime \( +_NUM -or -atime +_NUM) \) -exec ls -l {} \;
[text-case  186 ] =========================================================
  [original-pair]
       find all normal file in home directory accessed in last "_NUM" day with size greater than or equal to "_NUMk"
       find $HOME -type f -atime +_NUM -size _NUMk
  [new-pair]
       find all regular file on system whose size greater than "_NUMk"
       find / -type f -size +_NUMk
 find / -type f -size +_NUMk
[text-case  187 ] =========================================================
  [original-pair]
       search for all _UNK image in current folder
       find . -name _LONG_PATTERN -print
  [new-pair]
       find image in folder of image
       find images -name "articles.jpg"
 find images -name "articles.jpg"
[text-case  188 ] =========================================================
  [original-pair]
       display long list of all perl file in current folder
       find . -name "*.pl" -ls
  [new-pair]
       display all file in current folder excluding perl file
       find . -not -name "*.pl"
 find . -not -name "*.pl"
[text-case  189 ] =========================================================
  [original-pair]
       search for all file in folder "/home" sticky bit set and permission "_NUM"
       find /home -perm ARGUMENT_UNK
  [new-pair]
       find all sticky bit file whose permission "_NUM"
       find / -perm ARGUMENT_UNK
 find / -perm ARGUMENT_UNK
[text-case  190 ] =========================================================
  [original-pair]
       search current directory and "_NUM" level below for file _UNK
       find ~/ -maxdepth _NUM -name ARGUMENT_UNK
  [new-pair]
       search directory _UNK recursively starting from "_NUM" level below for regular file
       find /home/ABCD/ -mindepth _NUM -type f -print
 find /home/ABCD/ -mindepth _NUM -type f -print
[text-case  191 ] =========================================================
  [original-pair]
       find text in whole directory tree
       find . -type f | xargs grep "text"
  [new-pair]
       find all text file in current directory
       find . -name "*.txt" -print
 find . -name "*.txt" -print
[text-case  192 ] =========================================================
  [original-pair]
       search for word in all "normal/regular" file in current folder
       find . -type f | xargs grep "text"
  [new-pair]
       search for specific word in all "normal/regular" file in current folder
       find ARGUMENT_UNK -type f -exec grep -H foo {} +
 find ARGUMENT_UNK -type f -exec grep -H foo {} +
[text-case  193 ] =========================================================
  [original-pair]
       remove all file whose name end with "~" in "/home/peter" directory tree
       find /home/peter -name *~ | xargs rm
  [new-pair]
       find all file whose name end with "~" in "/home/peter" directory tree following symlinks and delete
       find -L /home/peter -name *~ -print0 | xargs -0 -r rm
 find -L /home/peter -name *~ -print0 | xargs -0 -r rm
[text-case  194 ] =========================================================
  [original-pair]
       remove all file whose name end with "~" in "/home/peter" directory tree
       find /home/peter -name *~ -print0 | xargs -0 rm
  [new-pair]
       find all file whose name end with "~" in "/home/peter" directory tree following symlinks and delete
       find -L /home/peter -name *~ -print0 | xargs -0 -r rm
 find -L /home/peter -name *~ -print0 | xargs -0 -r rm
[text-case  195 ] =========================================================
  [original-pair]
       find regular file in current directory without descending into sub-directories and display null separated list
       find -maxdepth _NUM -type f -printf ARGUMENT_UNK
  [new-pair]
       find all directory under _UNK directory without descending into any sub-directories
       find ARGUMENT_UNK -mindepth _NUM -maxdepth _NUM -type d
 find ARGUMENT_UNK -mindepth _NUM -maxdepth _NUM -type d
[text-case  196 ] =========================================================
  [original-pair]
       search for word _LONG_PATTERN in all "regular/normal" file in current folder
       find . -type f -exec grep -i ARGUMENT_UNK ARGUMENT_UNK {} \; -print
  [new-pair]
       find all file in current folder and search for word _LONG_PATTERN in
       find . -exec grep -i _LONG_PATTERN {} \;
 find . -exec grep -i _LONG_PATTERN {} \;
[text-case  197 ] =========================================================
  [original-pair]
       find all file in current directory tree match pattern _LONG_PATTERN
       find . -name ARGUMENT_UNK -print
  [new-pair]
       find file in current directory tree match pattern _UNK
       find ./ -name ARGUMENT_UNK
 find ./ -name ARGUMENT_UNK
[text-case  198 ] =========================================================
  [original-pair]
       search all file in current folder using name pattern
       find . -name ARGUMENT_UNK -print
  [new-pair]
       search for file in current folder using name pattern
       find . -name '[mM][yY][fF][iI][lL][eE]*'
 find . -name '[mM][yY][fF][iI][lL][eE]*'
[text-case  199 ] =========================================================
  [original-pair]
       list all ".svn" "files/directories" under current directory
       find . -name .svn -exec ls {} \;
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  200 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn -delete
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  201 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn | xargs rm -f -r
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  202 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn | xargs rm -r -f
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  203 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -depth -name .svn -exec rm -f -r {} \;
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  204 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn -exec rm -r -f '{}' \;
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  205 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn -exec rm -v {} \;
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  206 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn -exec rm -r -f {} +
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  207 ] =========================================================
  [original-pair]
       delete all ".svn" "files/directories" under current directory
       find . -name .svn -exec rm -r -f {} \;
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  208 ] =========================================================
  [original-pair]
       delete all ".svn" directory under current directory
       find . -type d -name .svn -print0 | xargs -0 rm -r -f
  [new-pair]
       find all ".svn" directory under current directory and delete
       find . -type d -name ".svn" -print | xargs rm -r -f
 find . -type d -name ".svn" -print | xargs rm -r -f
[text-case  209 ] =========================================================
  [original-pair]
       display all file in current folder at least "_NUM" week old ( "_NUM" day ) but le "_NUM" day old
       find . \( -mtime +_NUM -and -mtime -_NUM \) -print0
  [new-pair]
       find file more than "_NUM" day old under "${userdir}/${i}/incoming" directory
       find ${userdir}/${i}/incoming -mtime +_NUM -type f -ls
 find ${userdir}/${i}/incoming -mtime +_NUM -type f -ls
[text-case  210 ] =========================================================
  [original-pair]
       find all file in current folder modified for file at least "_NUM" week old ( "_NUM" day ) but le "_NUM" day old
       find . \( -mtime +_NUM -and -mtime -_NUM \) -print0
  [new-pair]
       find file more than "_NUM" day old under "${userdir}/${i}/incoming" directory
       find ${userdir}/${i}/incoming -mtime +_NUM -type f -ls
 find ${userdir}/${i}/incoming -mtime +_NUM -type f -ls
[text-case  211 ] =========================================================
  [original-pair]
       locate file reside in home directory and not accessed in past "_NUM" day
       find $HOME -atime +_NUM
  [new-pair]
       locate all OGG file reside in home directory and not accessed in past "_NUM" day
       find $HOME -iname '*.ogg' -atime +_NUM
 find $HOME -iname '*.ogg' -atime +_NUM
[text-case  212 ] =========================================================
  [original-pair]
       show all file not accessed in "$HOME" directory for "_NUM" day or more
       find $HOME -atime +_NUM
  [new-pair]
       delete all file in "$DIR" directory not accessed in "_NUM" or more day
       find "$DIR" -type f -atime +_NUM -exec rm {} \;
 find "$DIR" -type f -atime +_NUM -exec rm {} \;
[text-case  213 ] =========================================================
  [original-pair]
       remove mac _UNK X _UNK _UNK _UNK file
       find . -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       find file created in last minute work on mac _UNK X
       find / -newerct _LONG_PATTERN -print
 find / -newerct _LONG_PATTERN -print
[text-case  214 ] =========================================================
  [original-pair]
       remove all file in current folder extension _UNK
       find . -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       remove all file with ".c" extension in current directory tree
       find . -name "*.c" -print0 | xargs -0 rm -r -f
 find . -name "*.c" -print0 | xargs -0 rm -r -f
[text-case  215 ] =========================================================
  [original-pair]
       find all "files/directories" in entire file system _UNK bit set for either owner group or others
       find / -perm ARGUMENT_UNK
  [new-pair]
       search for "files/directories" writable by either owner or group
       find . -perm /u+w,g+w
 find . -perm /u+w,g+w
[text-case  216 ] =========================================================
  [original-pair]
       find all "files/directories" in entire file system _UNK bit set for either owner group or others
       find / -perm ARGUMENT_UNK
  [new-pair]
       search for "files/directories" writable by either owner or group
       find . -perm /u+w,g+w
 find . -perm /u+w,g+w
[text-case  217 ] =========================================================
  [original-pair]
       find all "files/directories" in entire file system _UNK bit set for either owner group or others
       find / -perm ARGUMENT_UNK
  [new-pair]
       search for "files/directories" writable by either owner or group
       find . -perm /u+w,g+w
 find . -perm /u+w,g+w
[text-case  218 ] =========================================================
  [original-pair]
       search current directory tree for regular file whose name match regular expression _UNK
       find . -type f -regex ARGUMENT_UNK
  [new-pair]
       find file in current directory tree whose name match regular expression _UNK
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  219 ] =========================================================
  [original-pair]
       remove ".jpg" file from current directory whose name match regular expression _UNK
       find . -type f -regex ARGUMENT_UNK -exec rm -r -f {} \;
  [new-pair]
       find file in current directory tree whose name match regular expression _UNK
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  220 ] =========================================================
  [original-pair]
       remove ".jpg" file from current directory whose name match regular expression _UNK
       find . -type f -regex ARGUMENT_UNK | xargs rm
  [new-pair]
       find file in current directory tree whose name match regular expression _UNK
       find -regex "^.*~$\|^.*#$"
 find -regex "^.*~$\|^.*#$"
[text-case  221 ] =========================================================
  [original-pair]
       _UNK large file ( _UNK "_NUM" MB ) in "/home/" for _UNK
       find /home -type f -size +_NUMM -delete
  [new-pair]
       find all file in "/home/" directory tree owned by _UNK
       find /home -user bob
 find /home -user bob
[text-case  222 ] =========================================================
  [original-pair]
       locate large file ( _UNK "_NUM" MB ) in "/home/" for _UNK
       find /home -type f -size +_NUMM -print0 | xargs -0 rm
  [new-pair]
       find all file in "/home/" directory tree owned by _UNK
       find /home -user bob
 find /home -user bob
[text-case  223 ] =========================================================
  [original-pair]
       locate large file ( _UNK "_NUM" MB ) in "/home/" for _UNK
       find /home -type f -size +_NUMM -delete
  [new-pair]
       find all file in "/home/" directory tree owned by _UNK
       find /home -user bob
 find /home -user bob
[text-case  224 ] =========================================================
  [original-pair]
       find all "regular/normal" file in folder specific permission
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK -print
  [new-pair]
       find all file in current folder specific permission
       find . -perm ARGUMENT_UNK -print
 find . -perm ARGUMENT_UNK -print
[text-case  225 ] =========================================================
  [original-pair]
       find all "_NUM" permission file under _UNK directory with null character delimiter
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK -print0
  [new-pair]
       find all "files/directories" under current directory with null character delimiter
       find . -print0
 find . -print0
[text-case  226 ] =========================================================
  [original-pair]
       find "_NUM" permission file under _UNK directory
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK -print -quit
  [new-pair]
       find file _UNK "_NUM" permission
       find / -type f ! -perm ARGUMENT_UNK
 find / -type f ! -perm ARGUMENT_UNK
[text-case  227 ] =========================================================
  [original-pair]
       find all "_NUM" permission file under _UNK directory and change permission to "_NUM"
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK -print | xargs chmod ARGUMENT_UNK
  [new-pair]
       find all directory under _UNK and change permission to "_NUM"
       find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
 find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} +
[text-case  228 ] =========================================================
  [original-pair]
       find all "_NUM" permission file under _UNK directory
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK
  [new-pair]
       find file _UNK "_NUM" permission
       find / -type f ! -perm ARGUMENT_UNK
 find / -type f ! -perm ARGUMENT_UNK
[text-case  229 ] =========================================================
  [original-pair]
       find all "_NUM" permission file under _UNK directory
       find ARGUMENT_UNK -type f -perm ARGUMENT_UNK -print
  [new-pair]
       find file _UNK "_NUM" permission
       find / -type f ! -perm ARGUMENT_UNK
 find / -type f ! -perm ARGUMENT_UNK
[text-case  230 ] =========================================================
  [original-pair]
       list all "files/directories" with space in name under "~/Library" directory
       find ~/Library -name _LONG_PATTERN -exec ls {} \;
  [new-pair]
       find all "files/directories" with space in name under "~/Library" directory
       find ~/Library -name _LONG_PATTERN
 find ~/Library -name _LONG_PATTERN
[text-case  231 ] =========================================================
  [original-pair]
       delete file with inode number specified by _UNK under current directory
       find . -inum ARGUMENT_UNK -exec rm -i {} \;
  [new-pair]
       delete file by inode number
       find . -inum $inum -exec rm {} \;
 find . -inum $inum -exec rm {} \;
[text-case  232 ] =========================================================
  [original-pair]
       find all directory under and below _UNK and change permission to "_NUM"
       find ARGUMENT_UNK -type d -exec chmod ARGUMENT_UNK {} \;
  [new-pair]
       find all regular file under and below _UNK and change permission to "_NUM"
       find . ARGUMENT_UNK -type f -exec chmod ARGUMENT_UNK {} \;
 find . ARGUMENT_UNK -type f -exec chmod ARGUMENT_UNK {} \;
[text-case  233 ] =========================================================
  [original-pair]
       search current directory recursively for file containing "string"
       find . -type f -exec grep -l ARGUMENT_UNK {} \;
  [new-pair]
       search current directory tree for file containing "string" in path name
       find | egrep string
 find | egrep string
[text-case  234 ] =========================================================
  [original-pair]
       find all file under _UNK
       find ARGUMENT_UNK -type f
  [new-pair]
       find all file under _UNK
       find ARGUMENT_UNK -type f
 find ARGUMENT_UNK -type f
[text-case  235 ] =========================================================
  [original-pair]
       remove regular file changed more than "_NUM" day ago from "/tmp" directory tree
       find /tmp/ -ctime +_NUM -type f -exec rm {} \;
  [new-pair]
       search current directory tree for regular file last changed more than "_NUM" day ago
       find -type f -ctime +_NUM
 find -type f -ctime +_NUM
[text-case  236 ] =========================================================
  [original-pair]
       delete all regular file in temp folder not changed in last "_NUM*_NUM" hour
       find /tmp/ -ctime +_NUM -type f -exec rm {} \;
  [new-pair]
       delete all regular file in temp folder not modified in last "_NUM" hour
       find /tmp/ -type f -mtime +_NUM -print0 | xargs -0 -n -1 rm
 find /tmp/ -type f -mtime +_NUM -print0 | xargs -0 -n -1 rm
[text-case  237 ] =========================================================
  [original-pair]
       change ownership of all directory in current folder
       find . -type d -exec chown username {} \;
  [new-pair]
       change ownership of all file in current directory tree to _UNK
       find . -exec chown myuser:a-common-group-name {} +
 find . -exec chown myuser:a-common-group-name {} +
[text-case  238 ] =========================================================
  [original-pair]
       find all TXT file in current directory and copy to directory _UNK
       find ARGUMENT_UNK -name '*.txt' -type f -print0 | xargs -0 cp -u -t ARGUMENT_UNK
  [new-pair]
       find all TXT file on system and copy to "/tmp/txt"
       find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
 find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
[text-case  239 ] =========================================================
  [original-pair]
       find all TXT file in current directory and copy to directory _UNK
       find ARGUMENT_UNK -name '*.txt' -type f -print0 | sort -z -u | xargs -0 cp -t ARGUMENT_UNK
  [new-pair]
       find all TXT file on system and copy to "/tmp/txt"
       find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
 find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
[text-case  240 ] =========================================================
  [original-pair]
       find all TXT file in current directory and copy to directory _UNK
       find ARGUMENT_UNK -name '*.txt' -type f -not -path ARGUMENT_UNK -print0 | xargs -0 cp -t ARGUMENT_UNK
  [new-pair]
       find all TXT file on system and copy to "/tmp/txt"
       find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
 find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
[text-case  241 ] =========================================================
  [original-pair]
       display all file in current directory excluding present in directory whose name start with _UNK and not search in sub directory
       find * -maxdepth _NUM \( -name ARGUMENT_UNK -prune -or -print \)
  [new-pair]
       display all file in current folder excluding file _UNK and present in directory whose name start with ".git"
       find . \( ! -path "./.git*" -and ! -name ARGUMENT_UNK \)
 find . \( ! -path "./.git*" -and ! -name ARGUMENT_UNK \)
[text-case  242 ] =========================================================
  [original-pair]
       find all jpg file in current folder and sort
       find . -type f | grep -i ARGUMENT_UNK | sort
  [new-pair]
       search all jpg file in current folder
       find . -type f -name "*.jpg"
 find . -type f -name "*.jpg"
[text-case  243 ] =========================================================
  [original-pair]
       search for file "filename.txt" in current folder ( case insensitive search )
       find . -iname filename.txt
  [new-pair]
       search for file "filename.txt" in current folder
       find . -name filename.txt
 find . -name filename.txt
[text-case  244 ] =========================================================
  [original-pair]
       count number of line in all file in "xargstest/" directory tree match pattern "file??"
       find xargstest/ -name 'file??' | sort | xargs wc -l
  [new-pair]
       search "xargstest/" directory recursively for file matching pattern "file??"
       find xargstest/ -name 'file??'
 find xargstest/ -name 'file??'
[text-case  245 ] =========================================================
  [original-pair]
       find all directory in entire file system whose size greater than "_NUMKB"
       find / -type d -size +_NUMk
  [new-pair]
       find all file in entire file system whose size greater than "_NUMMB"
       find / -type f -size +_NUMk
 find / -type f -size +_NUMk
[text-case  246 ] =========================================================
  [original-pair]
       find all directory on system whose size greater than "_NUMk"
       find / -type d -size +_NUMk
  [new-pair]
       find all regular file on system whose size greater than "_NUMk"
       find / -type f -size +_NUMk
 find / -type f -size +_NUMk
[text-case  247 ] =========================================================
  [original-pair]
       find all directory in entire file system larger than "_NUMKB"
       find / -type d -size +_NUMk
  [new-pair]
       find all file in entire file system larger than "_NUMKB"
       find / -type f -size +_NUMk
 find / -type f -size +_NUMk
[text-case  248 ] =========================================================
  [original-pair]
       find all _UNK _UNK file "a.out" "*.o" and core _UNK file not _UNK to _UNK all junk file "&" delete from current directory
       find . \( -name a.out -or -name ARGUMENT_UNK -or -name 'core' \) -exec rm {} \;
  [new-pair]
       remove all "a.out" "*.o" and core file under current directory
       find . \( -name a.out -or -name '*.o' -or -name 'core' \) -exec rm {} \;
 find . \( -name a.out -or -name '*.o' -or -name 'core' \) -exec rm {} \;
[text-case  249 ] =========================================================
  [original-pair]
       search current directory tree for file whose name _UNK case insensitive
       find . -iname ARGUMENT_UNK | sort
  [new-pair]
       search current directory tree for file named _UNK case insensitive
       find -iname ARGUMENT_UNK
 find -iname ARGUMENT_UNK
[text-case  250 ] =========================================================
  [original-pair]
       search current directory tree for file whose name _UNK case insensitive
       find . -iname ARGUMENT_UNK
  [new-pair]
       search current directory tree for file named _UNK case insensitive
       find -iname ARGUMENT_UNK
 find -iname ARGUMENT_UNK
[text-case  251 ] =========================================================
  [original-pair]
       search current directory tree for file whose name _UNK case insensitive
       find -type d -exec find {} -maxdepth _NUM ! -type d -iname ARGUMENT_UNK \;
  [new-pair]
       search current directory tree for file named _UNK case insensitive
       find -iname ARGUMENT_UNK
 find -iname ARGUMENT_UNK
[text-case  252 ] =========================================================
  [original-pair]
       search current directory tree for file whose name _UNK case insensitive
       find . -iname ARGUMENT_UNK | sort -r
  [new-pair]
       search current directory tree for file named _UNK case insensitive
       find -iname ARGUMENT_UNK
 find -iname ARGUMENT_UNK
[text-case  253 ] =========================================================
  [original-pair]
       display all file in current folder having specific word in name
       find -name ARGUMENT_UNK
  [new-pair]
       find all file in folder having specific word in name
       find /usr/local -name "*blast*"
 find /usr/local -name "*blast*"
[text-case  254 ] =========================================================
  [original-pair]
       search for _UNK in and below current directory
       find -name ARGUMENT_UNK
  [new-pair]
       find all directory under and below _UNK
       find ARGUMENT_UNK -type d
 find ARGUMENT_UNK -type d
[text-case  255 ] =========================================================
  [original-pair]
       find all file in current folder having specific word in name
       find -name ARGUMENT_UNK
  [new-pair]
       find all file in folder having specific word in name
       find /usr/local -name "*blast*"
 find /usr/local -name "*blast*"
[text-case  256 ] =========================================================
  [original-pair]
       find foo foo _UNK FOO etc
       find . -iname foo
  [new-pair]
       find foo foo _UNK FOO etc but only file
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  257 ] =========================================================
  [original-pair]
       search for all file and directory named foo FOO or any other _UNK of _UNK and _UNK character beneath current directory
       find . -iname foo
  [new-pair]
       search for all file named foo FOO or any other _UNK of _UNK and _UNK character beneath current directory
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  258 ] =========================================================
  [original-pair]
       find file case-insensitive name foo in current directory
       find . -iname foo
  [new-pair]
       find regular case-insensitive name foo in current directory
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  259 ] =========================================================
  [original-pair]
       find file case-insensitive name too in current directory
       find . -iname foo
  [new-pair]
       find and delete all empty directory in current folder and all sub directory too
       find . -depth -empty -type d -delete
 find . -depth -empty -type d -delete
[text-case  260 ] =========================================================
  [original-pair]
       find all file in home directory and below exactly "_NUMM"
       find ~ -size _NUMM
  [new-pair]
       find all file in home directory and below larger than "_NUMM"
       find ~ -size +_NUMM
 find ~ -size +_NUMM
[text-case  261 ] =========================================================
  [original-pair]
       print list of directory present in _UNK directory tree
       find ARGUMENT_UNK -type d
  [new-pair]
       print list of file and directory of current directory
       find . ! -name . -prune
 find . ! -name . -prune
[text-case  262 ] =========================================================
  [original-pair]
       search for file name with "bad" character in current directory and delete file
       find . -name _LONG_PATTERN -maxdepth _NUM -exec rm -f '{}' \;
  [new-pair]
       delete recursively empty file named "bad"
       find . -name bad -empty -delete
 find . -name bad -empty -delete
[text-case  263 ] =========================================================
  [original-pair]
       delete file containing whitespaces without _UNK
       find . -name _LONG_PATTERN -maxdepth _NUM -exec rm -f '{}' \;
  [new-pair]
       delete file containing whitespaces
       find . -name _LONG_PATTERN -exec rm -f {} \;
 find . -name _LONG_PATTERN -exec rm -f {} \;
[text-case  264 ] =========================================================
  [original-pair]
       remove all file in present directory special character in name and not search in sub directory of current folder
       find . -name _LONG_PATTERN -maxdepth _NUM -exec rm -f '{}' \;
  [new-pair]
       list all directory present in current directory and not search in sub directory
       find -maxdepth _NUM -type d
 find -maxdepth _NUM -type d
[text-case  265 ] =========================================================
  [original-pair]
       display all file in current folder excluding search in path containing folder having word _UNK
       find . ! -path ARGUMENT_UNK
  [new-pair]
       find all file in folder having specific word in name
       find /usr/local -name "*blast*"
 find /usr/local -name "*blast*"
[text-case  266 ] =========================================================
  [original-pair]
       remove all core _UNK file from "user\'s" home directory
       find ~/ -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       remove all core file in home folder
       find /home -name core -exec rm {} \;
 find /home -name core -exec rm {} \;
[text-case  267 ] =========================================================
  [original-pair]
       delete all file in home directory name core in
       find ~/ -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       search core file in current directory and delete
       find . -name core -exec rm {} \;
 find . -name core -exec rm {} \;
[text-case  268 ] =========================================================
  [original-pair]
       remove all core _UNK file from "user\'s" home directory
       find ~/ -name ARGUMENT_UNK -exec rm {} \;
  [new-pair]
       remove all core file in home folder
       find /home -name core -exec rm {} \;
 find /home -name core -exec rm {} \;
[text-case  269 ] =========================================================
  [original-pair]
       find all file starting with "config" in folder symfony ( case insensitive search )
       find Symfony -iname ARGUMENT_UNK
  [new-pair]
       find all file starting with "config" in folder symfony
       find Symfony -name ARGUMENT_UNK
 find Symfony -name ARGUMENT_UNK
[text-case  270 ] =========================================================
  [original-pair]
       find _UNK _UNK in current directory recursively
       find . \( -type f -and -iname ARGUMENT_UNK \)
  [new-pair]
       find _UNK file recursively in current directory
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  271 ] =========================================================
  [original-pair]
       find file with "_NUM" permission in entire file system
       find / -type f -perm ARGUMENT_UNK
  [new-pair]
       find all "files/directories" with "_NUM" permission in entire file system
       find / -perm ARGUMENT_UNK
 find / -perm ARGUMENT_UNK
[text-case  272 ] =========================================================
  [original-pair]
       find file with "_NUM" permission in entire file system and print with string _LONG_PATTERN appended after every path
       find / -type f -perm ARGUMENT_UNK -printf _LONG_PATTERN
  [new-pair]
       find file in current directory with _LONG_PATTERN contain _UNK string and print file name
       find . -name '*.[ch]' | xargs grep -l thing
 find . -name '*.[ch]' | xargs grep -l thing
[text-case  273 ] =========================================================
  [original-pair]
       find file with "_NUM" permission in entire file system with null character delimiter
       find / -type f -perm ARGUMENT_UNK -print0
  [new-pair]
       find all "files/directories" under current directory with null character delimiter
       find . -print0
 find . -print0
[text-case  274 ] =========================================================
  [original-pair]
       find file with "_NUM" permission under "/tmp" and print with string _LONG_PATTERN _UNK first line of output
       find /tmp -type f -perm ARGUMENT_UNK | sed _LONG_PATTERN
  [new-pair]
       find file in current directory with _LONG_PATTERN contain _UNK string and print file name
       find . -name '*.[ch]' | xargs grep -l thing
 find . -name '*.[ch]' | xargs grep -l thing
[text-case  275 ] =========================================================
  [original-pair]
       find file with "_NUM" permission under "/tmp" and print with string _LONG_PATTERN _UNK first line of output or print _LONG_PATTERN if no such file found
       find /tmp -type f -perm ARGUMENT_UNK | awk _LONG_PATTERN
  [new-pair]
       find file in current directory with _LONG_PATTERN contain _UNK string and print file name
       find . -name '*.[ch]' | xargs grep -l thing
 find . -name '*.[ch]' | xargs grep -l thing
[text-case  276 ] =========================================================
  [original-pair]
       find all file in folder not belong to any user
       find /home -nouser -print
  [new-pair]
       display all file in current folder not belong to any user
       find . -nouser
 find . -nouser
[text-case  277 ] =========================================================
  [original-pair]
       find any file in current directory begin with number
       find . -regex ARGUMENT_UNK -print
  [new-pair]
       search in current folder for file begin with _UNK
       find . -name ARGUMENT_UNK -print
 find . -name ARGUMENT_UNK -print
[text-case  278 ] =========================================================
  [original-pair]
       start from current directory skip directory _UNK and print skip all file and directory under and print name of other file found
       find . -wholename './src/emacs' -prune \( -print -or -print \)
  [new-pair]
       find all "regular/normal" file in current directory and print skip searching all directory in current folder
       find * -type f \( -print -or -type d -prune \)
 find * -type f \( -print -or -type d -prune \)
[text-case  279 ] =========================================================
  [original-pair]
       start from current directory skip directory _UNK and print skip all file and directory under and print name of other file found
       find . -wholename './src/emacs' -prune , -print
  [new-pair]
       find all "regular/normal" file in current directory and print skip searching all directory in current folder
       find * -type f \( -print -or -type d -prune \)
 find * -type f \( -print -or -type d -prune \)
[text-case  280 ] =========================================================
  [original-pair]
       start from current directory skip directory _UNK and all file and directory under and print name of other file found
       find . \( -wholename './src/emacs' -prune -or -print \)
  [new-pair]
       find all "regular/normal" file in current directory and print skip searching all directory in current folder
       find * -type f \( -print -or -type d -prune \)
 find * -type f \( -print -or -type d -prune \)
[text-case  281 ] =========================================================
  [original-pair]
       print all file in directory except "./src/emacs" directory
       find . -wholename './src/emacs' -prune , -print
  [new-pair]
       list all file in current directory tree except for in "./src/emacs" directory
       find . \( -path './src/emacs' -prune -or -print \)
 find . \( -path './src/emacs' -prune -or -print \)
[text-case  282 ] =========================================================
  [original-pair]
       print all file in directory except "./src/emacs" directory
       find . \( -wholename './src/emacs' -prune -or -print \)
  [new-pair]
       list all file in current directory tree except for in "./src/emacs" directory
       find . \( -path './src/emacs' -prune -or -print \)
 find . \( -path './src/emacs' -prune -or -print \)
[text-case  283 ] =========================================================
  [original-pair]
       to list all file in _UNK directory tree owned by user _UNK to find file owned by particular user give _UNK to search for argument to _UNK option
       find ARGUMENT_UNK -user ARGUMENT_UNK
  [new-pair]
       search _UNK for file owned by user _UNK
       find /some/directory -user joebob -print
 find /some/directory -user joebob -print
[text-case  284 ] =========================================================
  [original-pair]
       find all _UNK belong to specific user
       find ARGUMENT_UNK -user ARGUMENT_UNK
  [new-pair]
       find all file belong to specific user
       find -user ARGUMENT_UNK
 find -user ARGUMENT_UNK
[text-case  285 ] =========================================================
  [original-pair]
       display file accessed after modification of give file
       find -anewer "sum.java"
  [new-pair]
       display file changed after modification of give file
       find -cnewer "sum.java"
 find -cnewer "sum.java"
[text-case  286 ] =========================================================
  [original-pair]
       find all "httpd.conf" file in entire file system
       find / -name httpd.conf
  [new-pair]
       find "httpd.conf" file in "/etc" directory
       find /etc -name ARGUMENT_UNK
 find /etc -name ARGUMENT_UNK
[text-case  287 ] =========================================================
  [original-pair]
       locate "httpd.conf" file on system
       find / -name httpd.conf
  [new-pair]
       locate _UNK file and directory on system
       find / \( -path /proc -prune -or -perm -2 \) ! -type l -ls
 find / \( -path /proc -prune -or -perm -2 \) ! -type l -ls
[text-case  288 ] =========================================================
  [original-pair]
       search for specific word in all hidden file in entire file system and display file name along with matched line
       find / -name ARGUMENT_UNK -exec grep -i -l ARGUMENT_UNK {} \;
  [new-pair]
       find specific word in all php and html file in current folder and display matched line along with file name
       find . \( -name "*.php" -or -name "*.html" \) -print0 | xargs -0 grep -H -i -n "joomla"
 find . \( -name "*.php" -or -name "*.html" \) -print0 | xargs -0 grep -H -i -n "joomla"
[text-case  289 ] =========================================================
  [original-pair]
       display all file ending with _UNK in current folder
       find . -type f -name ARGUMENT_UNK
  [new-pair]
       find all file ending with _UNK in current folder
       find -name "*.mkv"
 find -name "*.mkv"
[text-case  290 ] =========================================================
  [original-pair]
       find all file in current folder ending with _UNK and search for word in all file
       find . -name *.ini -exec grep -w ARGUMENT_UNK {} \; -print | grep ARGUMENT_UNK
  [new-pair]
       search for file in current folder ending with _UNK
       find -type f -name ARGUMENT_UNK
 find -type f -name ARGUMENT_UNK
[text-case  291 ] =========================================================
  [original-pair]
       find all file in file system whose size bigger than "_NUMGB"
       find / -size +_NUMG
  [new-pair]
       find all file in current directory of size greater than "_NUMGB"
       find . -size +_NUMG
 find . -size +_NUMG
[text-case  292 ] =========================================================
  [original-pair]
       find all file under and below current working directory with word california in file and count number of line in output
       find . -type f -exec grep -n California {} \; -print | wc -l
  [new-pair]
       find all file under and below current working directory with word california in file ( case insensitive ) and count number of line in output
       find . -type f -exec grep -i California {} \; -print | wc -l
 find . -type f -exec grep -i California {} \; -print | wc -l
[text-case  293 ] =========================================================
  [original-pair]
       find all file under and below current working directory with word california in file and count number of line in output
       find . -type f -exec grep California {} \; -print | wc -l
  [new-pair]
       find all file under and below current working directory with word california in file ( case insensitive ) and count number of line in output
       find . -type f -exec grep -i California {} \; -print | wc -l
 find . -type f -exec grep -i California {} \; -print | wc -l
[text-case  294 ] =========================================================
  [original-pair]
       find all file in "/usr" folder modification date le than or equal to file _UNK
       find /usr ! -newer ARGUMENT_UNK -print
  [new-pair]
       find all file in current folder modified after modification date of file
       find . -newer document -print
 find . -newer document -print
[text-case  295 ] =========================================================
  [original-pair]
       find file under "/usr" same _UNK or older than file _UNK
       find /usr ! -newer ARGUMENT_UNK -print
  [new-pair]
       find all file under current directory not same file _UNK
       find . -maxdepth _NUM -not -samefile ARGUMENT_UNK
 find . -maxdepth _NUM -not -samefile ARGUMENT_UNK
[text-case  296 ] =========================================================
  [original-pair]
       look for file or folder called game in all folder under current folder
       find . -name game
  [new-pair]
       find all file name game
       find / -name game
 find / -name game
[text-case  297 ] =========================================================
  [original-pair]
       find file in current directory name game
       find . -name game
  [new-pair]
       find all file name game
       find / -name game
 find / -name game
[text-case  298 ] =========================================================
  [original-pair]
       return list of file newer than file _UNK
       find . ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       return file newer than file "myfile"
       find / -newer myfile
 find / -newer myfile
[text-case  299 ] =========================================================
  [original-pair]
       return list of file modification newer than _UNK
       find . ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       return file newer than file "myfile"
       find / -newer myfile
 find / -newer myfile
[text-case  300 ] =========================================================
  [original-pair]
       find all directory named CVS and deletes and content
       find . -type d -name CVS -exec rm -r {} \;
  [new-pair]
       find file in "/tmp" directory named core and deletes
       find /tmp -name core -type f -print | xargs rm -f
 find /tmp -name core -type f -print | xargs rm -f
[text-case  301 ] =========================================================
  [original-pair]
       remove all subdirectory named _UNK under current dir
       find . -type d -name CVS -exec rm -r {} \;
  [new-pair]
       remove all _UNK file under current dir
       find . -type f -name "Foo*" -exec rm {} \;
 find . -type f -name "Foo*" -exec rm {} \;
[text-case  302 ] =========================================================
  [original-pair]
       remove all CVS directory in current directory tree
       find . -type d -name CVS -exec rm -r {} \;
  [new-pair]
       find file and directory at least "_NUM" level of _UNK in directory "/usr/src" excluding CVS directory
       find /usr/src \( -name CVS -prune -or -depth +_NUM \) -print
 find /usr/src \( -name CVS -prune -or -depth +_NUM \) -print
[text-case  303 ] =========================================================
  [original-pair]
       find all directory named CVS and deletes and content
       find . -type d -name CVS -exec rm -r {} \;
  [new-pair]
       find file in "/tmp" directory named core and deletes
       find /tmp -name core -type f -print | xargs rm -f
 find /tmp -name core -type f -print | xargs rm -f
[text-case  304 ] =========================================================
  [original-pair]
       search for file _UNK in home folder
       find ~ -name ARGUMENT_UNK
  [new-pair]
       search in home folder for all file with name _UNK
       find /home/ -name ARGUMENT_UNK
 find /home/ -name ARGUMENT_UNK
[text-case  305 ] =========================================================
  [original-pair]
       display all directory in entire file system
       find / -type d -print
  [new-pair]
       display all file in entire file system
       find /
 find /
[text-case  306 ] =========================================================
  [original-pair]
       list all regular file residing in current directory tree and containing string _UNK
       find . -type f -print | xargs grep -l -i ARGUMENT_UNK
  [new-pair]
       find all regular file residing in current directory tree and search for string _UNK
       find . -type f -print | xargs grep -i ARGUMENT_UNK
 find . -type f -print | xargs grep -i ARGUMENT_UNK
[text-case  307 ] =========================================================
  [original-pair]
       list all regular file residing in current directory tree and containing string _UNK
       find . -type f -exec grep -l -i ARGUMENT_UNK {} \;
  [new-pair]
       find all regular file residing in current directory tree and search for string _UNK
       find . -type f -print | xargs grep -i ARGUMENT_UNK
 find . -type f -print | xargs grep -i ARGUMENT_UNK
[text-case  308 ] =========================================================
  [original-pair]
       find for word in all regular file in current directory
       find . -type f -print | xargs grep -l -i ARGUMENT_UNK
  [new-pair]
       search for word in all file in current directory
       find . -exec grep chrome {} \;
 find . -exec grep chrome {} \;
[text-case  309 ] =========================================================
  [original-pair]
       find for word in all regular file in current directory
       find . -type f -exec grep -l -i ARGUMENT_UNK {} \;
  [new-pair]
       search for word in all file in current directory
       find . -exec grep chrome {} \;
 find . -exec grep chrome {} \;
[text-case  310 ] =========================================================
  [original-pair]
       find file under current directory contains string _UNK
       find . -type f -exec grep -i -H ARGUMENT_UNK {} \;
  [new-pair]
       find all text file contains word _UNK
       find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK | xargs grep ARGUMENT_UNK
 find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK | xargs grep ARGUMENT_UNK
[text-case  311 ] =========================================================
  [original-pair]
       find file under current directory contains string _UNK
       find . -type f -print | xargs grep -i -l ARGUMENT_UNK
  [new-pair]
       find all text file contains word _UNK
       find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK | xargs grep ARGUMENT_UNK
 find . ARGUMENT_UNK "*.txt" ARGUMENT_UNK | xargs grep ARGUMENT_UNK
[text-case  312 ] =========================================================
  [original-pair]
       find "file.txt" in file system search _UNK to specific path
       find / -path ARGUMENT_UNK
  [new-pair]
       find all file under current directory whose filename not "file.txt" ignoring case
       find . -maxdepth _NUM -not -iname file.txt
 find . -maxdepth _NUM -not -iname file.txt
[text-case  313 ] =========================================================
  [original-pair]
       find all HTML file starting with letter "a" in current directory and below ignoring case
       find . -iname ARGUMENT_UNK
  [new-pair]
       search current directory for HTML file whose name begin with "a"
       find . -maxdepth _NUM -name ARGUMENT_UNK
 find . -maxdepth _NUM -name ARGUMENT_UNK
[text-case  314 ] =========================================================
  [original-pair]
       find all file starting from "/" but ignoring removable medium whose name end with ".rpm"
       find / -xdev -name ARGUMENT_UNK
  [new-pair]
       find all file and directory whose name end in ".rpm" ignoring removable medium such _UNK _UNK etc
       find / -xdev -name *.rpm
 find / -xdev -name *.rpm
[text-case  315 ] =========================================================
  [original-pair]
       search for all _UNK file in file system reside in same partition of root
       find / -xdev -name ARGUMENT_UNK
  [new-pair]
       find all instance of file in entire file system search only in current partition of root
       find -x / -name foo
 find -x / -name foo
[text-case  316 ] =========================================================
  [original-pair]
       find every file under directory "/usr" ending in _UNK
       find /usr -name ARGUMENT_UNK
  [new-pair]
       find all file under "/usr"
       find /usr -print
 find /usr -print
[text-case  317 ] =========================================================
  [original-pair]
       find all _UNK "files/directories" under "/usr"
       find /usr -name ARGUMENT_UNK
  [new-pair]
       find all "files/directories" named _UNK under "/usr"
       find /usr -name ARGUMENT_UNK
 find /usr -name ARGUMENT_UNK
[text-case  318 ] =========================================================
  [original-pair]
       copy file _UNK to _UNK
       find dir_NUM dir_NUM dir_NUM dir_NUM -type d -exec cp ARGUMENT_UNK {} \;
  [new-pair]
       copy all _UNK file from current directory tree to _UNK
       find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/
 find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/
[text-case  319 ] =========================================================
  [original-pair]
       copy file _UNK to directory "dir_NUM" "dir_NUM" "dir_NUM" and "dir_NUM"
       find dir_NUM dir_NUM dir_NUM dir_NUM -type d -exec cp ARGUMENT_UNK {} \;
  [new-pair]
       find all file under current folder except "dir_NUM" "dir_NUM" "dir_NUM" folder
       find . -type d \( -path dir_NUM -or -path dir_NUM -or -path dir_NUM \) \( -prune -or -print \)
 find . -type d \( -path dir_NUM -or -path dir_NUM -or -path dir_NUM \) \( -prune -or -print \)
[text-case  320 ] =========================================================
  [original-pair]
       copy file _UNK to each directory under "dir_NUM" "dir_NUM" "dir_NUM" or "dir_NUM"
       find dir_NUM dir_NUM dir_NUM dir_NUM -type d -exec cp ARGUMENT_UNK {} \;
  [new-pair]
       find all file under current folder except "dir_NUM" "dir_NUM" "dir_NUM" folder
       find . -type d \( -path dir_NUM -or -path dir_NUM -or -path dir_NUM \) \( -prune -or -print \)
 find . -type d \( -path dir_NUM -or -path dir_NUM -or -path dir_NUM \) \( -prune -or -print \)
[text-case  321 ] =========================================================
  [original-pair]
       find file in current directory and sub-directories accessed within last hour
       find -amin -_NUM
  [new-pair]
       find file in current directory and sub-directories changed within last hour
       find . -cmin -_NUM
 find . -cmin -_NUM
[text-case  322 ] =========================================================
  [original-pair]
       find file ending with ".jpg"
       find . -name '*.jpg' -print
  [new-pair]
       find all ".jpg" file in current directory and below
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  323 ] =========================================================
  [original-pair]
       find file ending with ".jpg"
       find . -name '*.jpg' -print ARGUMENT_UNK
  [new-pair]
       find all ".jpg" file in current directory and below
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  324 ] =========================================================
  [original-pair]
       only find file ending with ".jpg"
       find . -name '*.jpg' -print
  [new-pair]
       find all ".jpg" file in current directory and below
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  325 ] =========================================================
  [original-pair]
       remove all broken symbolic link in _UNK
       find -L /usr/ports/packages -type l -delete
  [new-pair]
       find all symbolic link in current folder broken
       find . -xtype l
 find . -xtype l
[text-case  326 ] =========================================================
  [original-pair]
       remove all broken symlinks from _UNK directory tree
       find -L /usr/ports/packages -type l -delete
  [new-pair]
       find broken symlinks
       find ./ -follow -lname "*"
 find ./ -follow -lname "*"
[text-case  327 ] =========================================================
  [original-pair]
       search for directory in folder "test" end with "_NUM" digit using regular expression
       find ./test -regextype posix-egrep -type d -regex ARGUMENT_UNK
  [new-pair]
       search for file in current folder using regular expression
       find ./ -regex ARGUMENT_UNK
 find ./ -regex ARGUMENT_UNK
[text-case  328 ] =========================================================
  [original-pair]
       find all directory in current folder start with test
       find . -type d -name ARGUMENT_UNK
  [new-pair]
       search for file test in current folder
       find . -name test
 find . -name test
[text-case  329 ] =========================================================
  [original-pair]
       search for directory in folder "test" end "_NUM" digit name
       find ./test -type d -name ARGUMENT_UNK
  [new-pair]
       search in current folder for all directory with name "test"
       find . -type d -name test
 find . -type d -name test
[text-case  330 ] =========================================================
  [original-pair]
       search current directory tree for file with extension _UNK and list if more than "_NUM" day old
       find . -name ARGUMENT_UNK -ctime +_NUM -exec ls -l {} \;
  [new-pair]
       test if file named "file" in current directory more than "_NUM" hour old
       find file -prune -cmin +_NUM -print | grep -q .
 find file -prune -cmin +_NUM -print | grep -q .
[text-case  331 ] =========================================================
  [original-pair]
       move file accessed more than "_NUM" day ago to directory _UNK
       find . -atime +_NUM -type f -exec mv {} ARGUMENT_UNK \;
  [new-pair]
       find file in home directory accessed more than "_NUM" day ago
       find ~ -atime _NUM
 find ~ -atime _NUM
[text-case  332 ] =========================================================
  [original-pair]
       find all file in current directory accessed in last "_NUM" day and move to _UNK folder
       find . -atime +_NUM -type f -exec mv {} ARGUMENT_UNK \;
  [new-pair]
       find all file accessed in last "_NUM" day
       find / -atime _NUM
 find / -atime _NUM
[text-case  333 ] =========================================================
  [original-pair]
       move file older than "_NUM" day to directory _UNK
       find . -atime +_NUM -type f -exec mv {} ARGUMENT_UNK \;
  [new-pair]
       find all file older than "_NUM" day
       find /tmp -mtime +_NUM -print
 find /tmp -mtime +_NUM -print
[text-case  334 ] =========================================================
  [original-pair]
       find all ".php" file in all directory tree matching pattern _UNK and search file for string _LONG_PATTERN
       find ARGUMENT_UNK -name "*.php" -exec grep -H _LONG_PATTERN {} +
  [new-pair]
       find all ".php" file in current directory tree
       find . -type f -name "*.php"
 find . -type f -name "*.php"
[text-case  335 ] =========================================================
  [original-pair]
       find all ".php" file in all directory tree matching pattern _UNK and search file for string _LONG_PATTERN
       find ARGUMENT_UNK -name "*.php" -print0 | xargs -0 grep -H _LONG_PATTERN
  [new-pair]
       find all ".php" file in current directory tree
       find . -type f -name "*.php"
 find . -type f -name "*.php"
[text-case  336 ] =========================================================
  [original-pair]
       find all ".php" file in all directory tree matching pattern _UNK and search file for string _LONG_PATTERN
       find ARGUMENT_UNK -name "*.php" -exec grep _LONG_PATTERN {} \; -print
  [new-pair]
       find all ".php" file in current directory tree
       find . -type f -name "*.php"
 find . -type f -name "*.php"
[text-case  337 ] =========================================================
  [original-pair]
       display long listing of all file in current folder bigger than "_NUMKB"
       find . -size +_NUM -ls
  [new-pair]
       display long listing of all file in current folder bigger than "_NUMKB"
       find . -size +_NUMk -exec ls -l -h {} +
 find . -size +_NUMk -exec ls -l -h {} +
[text-case  338 ] =========================================================
  [original-pair]
       find file in folder using name pattern
       find /usr/share/doc -name ARGUMENT_UNK
  [new-pair]
       find all file in current folder using name pattern
       find . -iregex ".*packet.*"
 find . -iregex ".*packet.*"
[text-case  339 ] =========================================================
  [original-pair]
       find all file in folder using name pattern
       find /usr/share/doc -name ARGUMENT_UNK
  [new-pair]
       find all file in current folder using name pattern
       find . -iregex ".*packet.*"
 find . -iregex ".*packet.*"
[text-case  340 ] =========================================================
  [original-pair]
       find all occurences of file in file system belong to user root
       find / -user root -name FindCommandExamples.txt
  [new-pair]
       find all file belong to user root
       find / -user root
 find / -user root
[text-case  341 ] =========================================================
  [original-pair]
       find all or single file called "FindCommandExamples.txt" under "/" directory of owner root
       find / -user root -name FindCommandExamples.txt
  [new-pair]
       find all or single file called "tecmint.txt" under "/" directory of owner root
       find / -user root -name tecmint.txt
 find / -user root -name tecmint.txt
[text-case  342 ] =========================================================
  [original-pair]
       find all file called "FindCommandExamples.txt" of owner root
       find / -user root -name FindCommandExamples.txt
  [new-pair]
       find regular file in current directory tree called "FindCommandExamples.txt" and remove
       find . -type f -name "FindCommandExamples.txt" -exec rm -f {} \;
 find . -type f -name "FindCommandExamples.txt" -exec rm -f {} \;
[text-case  343 ] =========================================================
  [original-pair]
       search for all directory ending with ".mp_NUM" in file system and move to folder "/mnt/mp_NUM"
       find / -iname "*.mp_NUM" -type d -exec mv {} /mnt/mp_NUM \;
  [new-pair]
       search for all "mp_NUM" file in file system and move to folder "/mnt/mp_NUM"
       find / -iname "*.mp_NUM" -exec mv {} /mnt/mp_NUM \;
 find / -iname "*.mp_NUM" -exec mv {} /mnt/mp_NUM \;
[text-case  344 ] =========================================================
  [original-pair]
       display all directory in folder _UNK except tmp and cache directory
       find ARGUMENT_UNK -type d \( ! -name tmp -or ! -name ARGUMENT_UNK \) -print
  [new-pair]
       display all directory in folder _UNK except tmp directory
       find ARGUMENT_UNK -type d ! -name tmp -print
 find ARGUMENT_UNK -type d ! -name tmp -print
[text-case  345 ] =========================================================
  [original-pair]
       count line of java code for all java file in current directory
       find . -name "*.java" -print0 | xargs -0 wc
  [new-pair]
       find all java file in current folder and search for pattern _UNK
       find . -name '*.java' -exec grep ARGUMENT_UNK {} \;
 find . -name '*.java' -exec grep ARGUMENT_UNK {} \;
[text-case  346 ] =========================================================
  [original-pair]
       find all CSS file
       find . -name "*.css"
  [new-pair]
       list all CSS file under current directory
       find . -type f -name "*.css"
 find . -type f -name "*.css"
[text-case  347 ] =========================================================
  [original-pair]
       list all CSS file ( and directory ending with _UNK ) under current directory
       find . -name "*.css"
  [new-pair]
       list all CSS file under current directory
       find . -type f -name "*.css"
 find . -type f -name "*.css"
[text-case  348 ] =========================================================
  [original-pair]
       search for string "foo" in "*.html" file under _UNK directory
       grep foo $( find ARGUMENT_UNK -name "*.html" )
  [new-pair]
       find all "*.html" file under current directory
       find . -type f -name '*.html'
 find . -type f -name '*.html'
[text-case  349 ] =========================================================
  [original-pair]
       find all "*.txt" and _UNK file
       find . -type f \( -name "*.txt" -or -name ARGUMENT_UNK \)
  [new-pair]
       find all "*.txt" "files/directories" under current directory
       find -name '*.txt'
 find -name '*.txt'
[text-case  350 ] =========================================================
  [original-pair]
       find all "*.txt" and _UNK file in current directory
       find . -type f \( -name "*.txt" -or -name ARGUMENT_UNK \)
  [new-pair]
       find all "*.txt" "files/directories" under current directory
       find -name '*.txt'
 find -name '*.txt'
[text-case  351 ] =========================================================
  [original-pair]
       print file in subdirectory between level "_NUM" and "_NUM"
       find -mindepth _NUM -maxdepth _NUM -name "sum.java"
  [new-pair]
       find all level "_NUM" subdirectory of current directory
       find . -maxdepth _NUM -type d
 find . -maxdepth _NUM -type d
[text-case  352 ] =========================================================
  [original-pair]
       find all file folder specific word in name
       find /usr/share -name ARGUMENT_UNK
  [new-pair]
       find file in directory specific word in name
       find /home/john -name ARGUMENT_UNK -type f -print
 find /home/john -name ARGUMENT_UNK -type f -print
[text-case  353 ] =========================================================
  [original-pair]
       to list all file in "/usr/share" directory tree with text _UNK somewhere in name
       find /usr/share -name ARGUMENT_UNK
  [new-pair]
       find all _UNK in "/usr/share"
       find /usr/share -name README
 find /usr/share -name README
[text-case  354 ] =========================================================
  [original-pair]
       find file "_NUM" byte in size in current directory and remove
       find . -maxdepth _NUM -size _NUMc -exec rm {} \;
  [new-pair]
       find file in current directory tree whose size "_NUM" byte
       find . -size _NUMc
 find . -size _NUMc
[text-case  355 ] =========================================================
  [original-pair]
       find file in current directory tree whose name begin with "file" and whose size "_NUM" and remove
       find -name ARGUMENT_UNK -size _NUM -delete
  [new-pair]
       find all file in current directory tree whose name begin with _UNK
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  356 ] =========================================================
  [original-pair]
       find file in current directory tree whose name begin with "file" and whose size "_NUM" and remove
       find . -name ARGUMENT_UNK -size _NUM -print0 | xargs -0 rm
  [new-pair]
       find all file in current directory tree whose name begin with _UNK
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  357 ] =========================================================
  [original-pair]
       find file "_NUM" byte in size in current directory tree and remove
       find . -size _NUM -exec rm {} \;
  [new-pair]
       find file in current directory tree whose size "_NUM" byte
       find . -size _NUMc
 find . -size _NUMc
[text-case  358 ] =========================================================
  [original-pair]
       find file in current directory whose name begin with "file" and remove
       find . -name ARGUMENT_UNK -maxdepth _NUM -exec rm {} \;
  [new-pair]
       find all file in current directory tree whose name begin with _UNK
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  359 ] =========================================================
  [original-pair]
       to list number of directory in "/usr/share" directory tree
       find /usr/share ! -type f | wc -l
  [new-pair]
       to list number of file and directory in "/usr/share" directory tree
       find /usr/share | wc -l
 find /usr/share | wc -l
[text-case  360 ] =========================================================
  [original-pair]
       find all symbolic link under current folder and below
       find ARGUMENT_UNK ARGUMENT_UNK l
  [new-pair]
       find all symbolic link in current folder
       find -type l
 find -type l
[text-case  361 ] =========================================================
  [original-pair]
       change file permission on all regular file within directory
       find /path/to/directory -type f -exec chmod ARGUMENT_UNK {} +
  [new-pair]
       change permission of all regular file in current folder
       find . -type f -exec chmod ARGUMENT_UNK {} \;
 find . -type f -exec chmod ARGUMENT_UNK {} \;
[text-case  362 ] =========================================================
  [original-pair]
       change file permission on all regular file within directory
       find /path/to/directory -type f -exec chmod ARGUMENT_UNK {} +
  [new-pair]
       change permission of all regular file in current folder
       find . -type f -exec chmod ARGUMENT_UNK {} \;
 find . -type f -exec chmod ARGUMENT_UNK {} \;
[text-case  363 ] =========================================================
  [original-pair]
       find file in current directory tree permission rwx for user and _UNK for group and others
       find . -perm ARGUMENT_UNK
  [new-pair]
       list file in current directory tree permission rwx for user and _UNK for group and others
       find . -perm ARGUMENT_UNK -exec ls -l {} \;
 find . -perm ARGUMENT_UNK -exec ls -l {} \;
[text-case  364 ] =========================================================
  [original-pair]
       search for regular expression "expr" in all ".c" and ".h" file from current directory tree
       find -name '*.[ch]' | xargs grep -E 'expr'
  [new-pair]
       search ".c" and ".h" file in current directory tree for "expr"
       find . -name '*.[ch]' | xargs grep -E 'expr'
 find . -name '*.[ch]' | xargs grep -E 'expr'
[text-case  365 ] =========================================================
  [original-pair]
       search all ".c" and ".h" file in current directory tree for "expr"
       find -name '*.[ch]' | xargs grep -E 'expr'
  [new-pair]
       search ".c" and ".h" file in current directory tree for "expr"
       find . -name '*.[ch]' | xargs grep -E 'expr'
 find . -name '*.[ch]' | xargs grep -E 'expr'
[text-case  366 ] =========================================================
  [original-pair]
       find all ".c" and ".h" file in current directory tree and search for "expr"
       find -name '*.[ch]' | xargs grep -E 'expr'
  [new-pair]
       search ".c" and ".h" file in current directory tree for "expr"
       find . -name '*.[ch]' | xargs grep -E 'expr'
 find . -name '*.[ch]' | xargs grep -E 'expr'
[text-case  367 ] =========================================================
  [original-pair]
       search for word in all file with extension _UNK in current folder
       find -name '*.[ch]' | xargs grep -E 'expr'
  [new-pair]
       search for word in all file in current folder
       find . -type f -exec grep ARGUMENT_UNK {} \;
 find . -type f -exec grep ARGUMENT_UNK {} \;
[text-case  368 ] =========================================================
  [original-pair]
       search pattern _UNK in all ".c" file in folder _UNK
       find ARGUMENT_UNK -name '*.c' -print0 | xargs -0 grep ARGUMENT_UNK
  [new-pair]
       list ".c" file in current directory
       find . ! -name . -prune -name "*.c" -print
 find . ! -name . -prune -name "*.c" -print
[text-case  369 ] =========================================================
  [original-pair]
       search ".c" file residing in _UNK directory tree for line beginning with _UNK
       find ARGUMENT_UNK -name '*.c' -print0 | xargs -0 grep ARGUMENT_UNK
  [new-pair]
       find all regular file residing in current directory tree and search for string _UNK
       find . -type f -print | xargs grep -i ARGUMENT_UNK
 find . -type f -print | xargs grep -i ARGUMENT_UNK
[text-case  370 ] =========================================================
  [original-pair]
       find all file in file system changed in last "_NUM" hour
       find / -cmin -_NUM
  [new-pair]
       find all file in current folder not changed in last "_NUM" hour
       find ./ -daystart -ctime +_NUM
 find ./ -daystart -ctime +_NUM
[text-case  371 ] =========================================================
  [original-pair]
       find all file ( under root file system "/" ) changed within last "_NUM" hour
       find / -ctime -_NUM
  [new-pair]
       find file ( under root file system "/" ) accessed within last "_NUM" hour
       find / -atime -_NUM
 find / -atime -_NUM
[text-case  372 ] =========================================================
  [original-pair]
       find file on system created during last "_NUM" day
       find / -ctime -_NUM
  [new-pair]
       find file on system accessed during last "_NUM" hour but not within last hour
       find / -atime -_NUM -amin +_NUM
 find / -atime -_NUM -amin +_NUM
[text-case  373 ] =========================================================
  [original-pair]
       find all file in file system changed in last "_NUM" hour
       find / -ctime -_NUM
  [new-pair]
       find all file in current folder not changed in last "_NUM" hour
       find ./ -daystart -ctime +_NUM
 find ./ -daystart -ctime +_NUM
[text-case  374 ] =========================================================
  [original-pair]
       find all file changed in last "_NUM" hour
       find / -cmin -_NUM
  [new-pair]
       find all file in current folder not changed in last "_NUM" hour
       find ./ -daystart -ctime +_NUM
 find ./ -daystart -ctime +_NUM
[text-case  375 ] =========================================================
  [original-pair]
       find all file on system changed within last hour
       find / -cmin -_NUM
  [new-pair]
       find all file on system modified within last hour
       find / -mmin -_NUM
 find / -mmin -_NUM
[text-case  376 ] =========================================================
  [original-pair]
       find all file under "/home" belong to user tecmint
       find /home -user tecmint
  [new-pair]
       find all "*.txt" file of user tecmint under "/home" directory
       find /home -user tecmint -iname "*.txt"
 find /home -user tecmint -iname "*.txt"
[text-case  377 ] =========================================================
  [original-pair]
       find all file belongs to user tecmint under "/home" directory
       find /home -user tecmint
  [new-pair]
       find all "*.txt" file of user tecmint under "/home" directory
       find /home -user tecmint -iname "*.txt"
 find /home -user tecmint -iname "*.txt"
[text-case  378 ] =========================================================
  [original-pair]
       sort based on size and display top "_NUM" largest "normal/regular" file in current folder
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       sort and display top "_NUM" file along with last access date for all file in file system ( sort based on timestamp )
       find / -type f -printf _LONG_PATTERN | head -n _NUM | sort -k -1 -. -8 -n -k -1 -. -1 -n -r -k -1
 find / -type f -printf _LONG_PATTERN | head -n _NUM | sort -k -1 -. -8 -n -k -1 -. -1 -n -r -k -1
[text-case  379 ] =========================================================
  [original-pair]
       display "_NUM" largest file in current directory and sub-directories
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       print largest "_NUM" file under current directory
       find . -type f -printf _LONG_PATTERN | sort -r -n | head -_NUM
 find . -type f -printf _LONG_PATTERN | sort -r -n | head -_NUM
[text-case  380 ] =========================================================
  [original-pair]
       find top "_NUM" _UNK file
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       find top "_NUM" file in current directory and subdirectory
       find . -type f -exec ls -a -l {} \; | sort -n -r -k -5 | head -n _NUM
 find . -type f -exec ls -a -l {} \; | sort -n -r -k -5 | head -n _NUM
[text-case  381 ] =========================================================
  [original-pair]
       find top "_NUM" _UNK file
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       find top "_NUM" file in current directory and subdirectory
       find . -type f -exec ls -a -l {} \; | sort -n -r -k -5 | head -n _NUM
 find . -type f -exec ls -a -l {} \; | sort -n -r -k -5 | head -n _NUM
[text-case  382 ] =========================================================
  [original-pair]
       display "_NUM" largest file in current directory and subdirectory
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       find largest file in directory and subdirectory
       find . -printf _LONG_PATTERN | sort -n -r | head -_NUM
 find . -printf _LONG_PATTERN | sort -n -r | head -_NUM
[text-case  383 ] =========================================================
  [original-pair]
       find largest file in current directory and sub directory
       find . -type f -exec ls -s {} \; | sort -n -r | head -_NUM
  [new-pair]
       find largest file in directory and subdirectory
       find . -printf _LONG_PATTERN | sort -n -r | head -_NUM
 find . -printf _LONG_PATTERN | sort -n -r | head -_NUM
[text-case  384 ] =========================================================
  [original-pair]
       find all file whose name contain string _UNK _UNK within _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK
  [new-pair]
       print list of file from _UNK directory tree whose name begin with _UNK and contain string _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK -print0 | xargs -0 grep -l ARGUMENT_UNK
 find ARGUMENT_UNK -name ARGUMENT_UNK -print0 | xargs -0 grep -l ARGUMENT_UNK
[text-case  385 ] =========================================================
  [original-pair]
       find all file in folder specific word in name
       find /etc -iregex ARGUMENT_UNK
  [new-pair]
       find file in directory specific word in name
       find /home/john -name ARGUMENT_UNK -type f -print
 find /home/john -name ARGUMENT_UNK -type f -print
[text-case  386 ] =========================================================
  [original-pair]
       find all file in folder specific word in name
       find ARGUMENT_UNK -name ARGUMENT_UNK
  [new-pair]
       find file in directory specific word in name
       find /home/john -name ARGUMENT_UNK -type f -print
 find /home/john -name ARGUMENT_UNK -type f -print
[text-case  387 ] =========================================================
  [original-pair]
       move all file matching pattern _UNK ".old" _UNK from current directory to directory _UNK
       find . ! -name . -prune -name ARGUMENT_UNK -exec mv {} ARGUMENT_UNK \;
  [new-pair]
       remove all file matching pattern _UNK _UNK _UNK _UNK under current directory
       find . -name _LONG_PATTERN -exec rm -f '{}' \;
 find . -name _LONG_PATTERN -exec rm -f '{}' \;
[text-case  388 ] =========================================================
  [original-pair]
       change ownership of all "regular/normal" file in current _UNK "print_NUM" used to handle all file space or new line in name )
       find . -type f -print0 | xargs -0 chown username
  [new-pair]
       find all perl file in current folder "print_NUM" used to handle file with new line in name or only space
       find . -type f -name "*.pl" -print0
 find . -type f -name "*.pl" -print0
[text-case  389 ] =========================================================
  [original-pair]
       search entire file hierarchy for file named _UNK _UNK on "ext_NUM" file system and print out detailed information about file
       find / -fstype ext_NUM -name ARGUMENT_UNK -ls
  [new-pair]
       find and print detailed information about all regular file in home directory and below only group permission set
       find . -perm g=r -type f -exec ls -l {} \;
 find . -perm g=r -type f -exec ls -l {} \;
[text-case  390 ] =========================================================
  [original-pair]
       find all file under "/etc/sysconfig" directory accessed in last "_NUM" minute
       find /etc/sysconfig -amin -_NUM
  [new-pair]
       find all regular file under "/etc/sysconfig" directory accessed in last "_NUM" minute
       find /etc/sysconfig -amin -_NUM -type f
 find /etc/sysconfig -amin -_NUM -type f
[text-case  391 ] =========================================================
  [original-pair]
       find all configuration file accessed in last "_NUM" minute
       find /etc/sysconfig -amin -_NUM
  [new-pair]
       find all configuration file in folder modified in last "_NUM" minute
       find /etc -name "*.conf" -mmin -_NUM
 find /etc -name "*.conf" -mmin -_NUM
[text-case  392 ] =========================================================
  [original-pair]
       find foo foo _UNK FOO etc but only _UNK
       find . -iname foo -type d
  [new-pair]
       find foo foo _UNK FOO etc but only file
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  393 ] =========================================================
  [original-pair]
       search for directory foo ignoring case
       find . -iname foo -type d
  [new-pair]
       search for regular file foo ignoring case
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  394 ] =========================================================
  [original-pair]
       find directory case-insensitive name too in current directory
       find . -iname foo -type d
  [new-pair]
       find and delete all empty directory in current folder and all sub directory too
       find . -depth -empty -type d -delete
 find . -depth -empty -type d -delete
[text-case  395 ] =========================================================
  [original-pair]
       find directory case-insensitive name foo in current directory
       find . -iname foo -type d
  [new-pair]
       find regular case-insensitive name foo in current directory
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  396 ] =========================================================
  [original-pair]
       search for all directory named foo FOO or any other _UNK of _UNK and _UNK character beneath current directory
       find . -iname foo -type d
  [new-pair]
       search for all file named foo FOO or any other _UNK of _UNK and _UNK character beneath current directory
       find . -iname foo -type f
 find . -iname foo -type f
[text-case  397 ] =========================================================
  [original-pair]
       delete all ".c" file present in current directory and below
       find . -name "*.c" | xargs rm -f
  [new-pair]
       display all ".c" file in current folder excluding present in all sub directory
       find . ! -name . -prune -name "*.c" -print
 find . ! -name . -prune -name "*.c" -print
[text-case  398 ] =========================================================
  [original-pair]
       find all file starting with specific name in folder
       find /etc -name ARGUMENT_UNK ARGUMENT_UNK print
  [new-pair]
       find all file in folder end with specific name
       find ARGUMENT_UNK -name '*.o'
 find ARGUMENT_UNK -name '*.o'
[text-case  399 ] =========================================================
  [original-pair]
       display list of all file in file system not belong to any user and search only in _UNK and _UNK file system
       find / -nouser \( -fstype ARGUMENT_UNK -or -fstype ARGUMENT_UNK \) -ls
  [new-pair]
       display list of all file in file system not belong to any group and search only in _UNK and _UNK file system
       find / -nogroup \( -fstype ARGUMENT_UNK -or -fstype ARGUMENT_UNK \) -ls
 find / -nogroup \( -fstype ARGUMENT_UNK -or -fstype ARGUMENT_UNK \) -ls
[text-case  400 ] =========================================================
  [original-pair]
       find _UNK source file in _UNK
       find foo -path ARGUMENT_UNK -print
  [new-pair]
       find all perl source code file
       find . -name "*.pl"
 find . -name "*.pl"
[text-case  401 ] =========================================================
  [original-pair]
       find _UNK source file in _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK
  [new-pair]
       find all perl source code file
       find . -name "*.pl"
 find . -name "*.pl"
[text-case  402 ] =========================================================
  [original-pair]
       search directory foo for file containing _UNK in full name
       find foo -path ARGUMENT_UNK -print
  [new-pair]
       find all file containing _UNK
       find . -type f -exec grep YOURSTRING /dev/null {} \;
 find . -type f -exec grep YOURSTRING /dev/null {} \;
[text-case  403 ] =========================================================
  [original-pair]
       find all _UNK file in _UNK
       find ARGUMENT_UNK -name ARGUMENT_UNK
  [new-pair]
       find all _UNK file
       find . -name *.ini
 find . -name *.ini
[text-case  404 ] =========================================================
  [original-pair]
       search directory "/tmp/foo" for file containing _UNK in full name
       find /tmp/foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  405 ] =========================================================
  [original-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  406 ] =========================================================
  [original-pair]
       find file full path name _UNK under foo directory and print
       find foo -path ARGUMENT_UNK -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  407 ] =========================================================
  [original-pair]
       find file full path name _UNK under foo directory and print
       find foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  408 ] =========================================================
  [original-pair]
       search directory foo for file containing _UNK in full name
       find foo -path /tmp/foo/bar -print
  [new-pair]
       find all file containing _UNK
       find . -type f -exec grep YOURSTRING /dev/null {} \;
 find . -type f -exec grep YOURSTRING /dev/null {} \;
[text-case  409 ] =========================================================
  [original-pair]
       find file full path name _UNK under foo directory and print
       find /tmp/foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  410 ] =========================================================
  [original-pair]
       search _UNK directory tree for _UNK file
       find ARGUMENT_UNK -name ARGUMENT_UNK
  [new-pair]
       search _UNK directory tree for _UNK directory
       find ARGUMENT_UNK -type d -name ARGUMENT_UNK
 find ARGUMENT_UNK -type d -name ARGUMENT_UNK
[text-case  411 ] =========================================================
  [original-pair]
       find file full path name _UNK under foo directory and print
       find foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  412 ] =========================================================
  [original-pair]
       find all file matching shell pattern _UNK in foo directory tree
       find foo -path ARGUMENT_UNK -print
  [new-pair]
       find all file matching pattern _UNK in current directory tree
       find -iname ARGUMENT_UNK
 find -iname ARGUMENT_UNK
[text-case  413 ] =========================================================
  [original-pair]
       find file full path name _UNK under foo directory and print
       find foo -path /tmp/foo/bar -print
  [new-pair]
       find file full path name _UNK under "/tmp/foo" directory and print
       find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
 find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
[text-case  414 ] =========================================================
  [original-pair]
       remove all file whose name begin with _UNK in "/home/peter" directory tree
       find /home/peter -name ARGUMENT_UNK | xargs rm
  [new-pair]
       find all file in current directory tree whose name begin with _UNK
       find . -name ARGUMENT_UNK
 find . -name ARGUMENT_UNK
[text-case  415 ] =========================================================
  [original-pair]
       list all regular file in "/var/www" and below changed in last "_NUM" minute
       find /var/www -cmin -_NUM -type f -printf _LONG_PATTERN
  [new-pair]
       list all file in "/var/www" and below changed in last "_NUM" minute
       find /var/www -cmin -_NUM -printf _LONG_PATTERN
 find /var/www -cmin -_NUM -printf _LONG_PATTERN
[text-case  416 ] =========================================================
  [original-pair]
       find image file and move to _UNK directory
       find ARGUMENT_UNK \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name ARGUMENT_UNK \) -print0 | xargs -0 mv ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       find image in folder of image
       find images -name "articles.jpg"
 find images -name "articles.jpg"
[text-case  417 ] =========================================================
  [original-pair]
       find ".gif" and ".png" image file in _UNK and move to _UNK directory
       find ARGUMENT_UNK \( -name ARGUMENT_UNK -or -name ARGUMENT_UNK -or -name ARGUMENT_UNK \) -print0 | xargs -0 mv ARGUMENT_UNK ARGUMENT_UNK
  [new-pair]
       copy all ".png" file from home directory tree to _UNK
       find ~/ -name *.png -exec cp {} imagesdir \;
 find ~/ -name *.png -exec cp {} imagesdir \;
[text-case  418 ] =========================================================
  [original-pair]
       move all regular file under current directory to _UNK
       find ./ -type f -print | xargs -l -5 ARGUMENT_UNK -i mv -f {} ARGUMENT_UNK
  [new-pair]
       move all "files/directories" under current directory to _UNK
       find sourceDir -print0 | xargs -0 mv -t destDir
 find sourceDir -print0 | xargs -0 mv -t destDir
[text-case  419 ] =========================================================
  [original-pair]
       move all regular file under current directory to _UNK
       find ./ -type f -print | xargs -i mv -f {} ARGUMENT_UNK
  [new-pair]
       move all "files/directories" under current directory to _UNK
       find sourceDir -print0 | xargs -0 mv -t destDir
 find sourceDir -print0 | xargs -0 mv -t destDir
[text-case  420 ] =========================================================
  [original-pair]
       find all file in current directory with _UNK _UNK in name
       find . -maxdepth _NUM -iname _LONG_PATTERN
  [new-pair]
       find file with name _UNK in current folder
       find -print | grep ARGUMENT_UNK
 find -print | grep ARGUMENT_UNK
[text-case  421 ] =========================================================
  [original-pair]
       find in file system for specific file
       find / -name filename -print
  [new-pair]
       find specific file in entire file system
       find / -name photo.jpg
 find / -name photo.jpg
[text-case  422 ] =========================================================
  [original-pair]
       display all regular file in folder _UNK
       find ARGUMENT_UNK -type f
  [new-pair]
       display all regular file in current folder
       find . -type f
 find . -type f
[text-case  423 ] =========================================================
  [original-pair]
       find all configuration file in folder and not search in sub _UNK directory and display last "_NUM" file
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       display all directory in folder _UNK and not search in sub directory
       find ARGUMENT_UNK -maxdepth _NUM -type d
 find ARGUMENT_UNK -maxdepth _NUM -type d
[text-case  424 ] =========================================================
  [original-pair]
       find _UNK "files/directories" only _UNK "_NUM" level down under "/etc" directory and show few line of output from end
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       find all read only file in entire file system and show few line of output from beginning
       find / -perm /u=r | head
 find / -perm /u=r | head
[text-case  425 ] =========================================================
  [original-pair]
       show last "_NUM" ".conf" file found by "find" in "/etc" directory and "_NUM" level below
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       print first "_NUM" file or directory found in current directory tree by "find"
       find | head
 find | head
[text-case  426 ] =========================================================
  [original-pair]
       show last "_NUM" ".conf" file found by "find" in "/etc" directory
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       print first "_NUM" file or directory found in current directory tree by "find"
       find | head
 find | head
[text-case  427 ] =========================================================
  [original-pair]
       find _UNK "files/directories" only _UNK "_NUM" level down under "/etc" directory and show few line of output from end
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       find all read only file in entire file system and show few line of output from beginning
       find / -perm /u=r | head
 find / -perm /u=r | head
[text-case  428 ] =========================================================
  [original-pair]
       find all configuration file in folder and not search in sub folder and display last "_NUM" file
       find /etc -maxdepth _NUM -name "*.conf" | tail
  [new-pair]
       display all file in current folder and not search in sub directory
       find . -maxdepth _NUM
 find . -maxdepth _NUM
[text-case  429 ] =========================================================
  [original-pair]
       find all file changed exactly "_NUM" hour ago
       find . -ctime _NUM -type f
  [new-pair]
       find all file modified exactly "_NUM" hour ago
       find . -type f -mtime _NUM
 find . -type f -mtime _NUM
[text-case  430 ] =========================================================
  [original-pair]
       find all file changed today
       find . -ctime _NUM -type f
  [new-pair]
       find _UNK changed today
       find /path/to/search -daystart -ctime -_NUM
 find /path/to/search -daystart -ctime -_NUM
[text-case  431 ] =========================================================
  [original-pair]
       show list of all file in current folder modified within "_NUM" hour
       find . -mtime _NUM -print
  [new-pair]
       list all regular file in current directory tree modified within last "_NUM" hour
       find . -mtime _NUM -type f -ls
 find . -mtime _NUM -type f -ls
[text-case  432 ] =========================================================
  [original-pair]
       find all file exactly "_NUM" day old
       find . -mtime _NUM -print
  [new-pair]
       find all file modified exactly "_NUM" day ago
       find -mtime _NUM
 find -mtime _NUM
[text-case  433 ] =========================================================
  [original-pair]
       get all file exactly "_NUM" day old
       find . -mtime _NUM -print
  [new-pair]
       get all file modified within last "_NUM" day
       find . -mtime -_NUM -print
 find . -mtime -_NUM -print
[text-case  434 ] =========================================================
  [original-pair]
       find _UNK owner of all file in _UNK directory
       find ARGUMENT_UNK -type f -follow | xargs ls -a -l | awk _LONG_PATTERN | sort -u
  [new-pair]
       change owner of all file in current directory
       find . -exec chown myuser:a-common-group-name {} +
 find . -exec chown myuser:a-common-group-name {} +
[text-case  435 ] =========================================================
  [original-pair]
       search current directory tree for regular file contain "string"
       find . -type f -print0 | xargs -0 grep string
  [new-pair]
       search all regular file in current directory tree for "string"
       find . -type f -exec grep string {} \;
 find . -type f -exec grep string {} \;
[text-case  436 ] =========================================================
  [original-pair]
       search current directory tree for regular file contain "string"
       find . -type f -printf ARGUMENT_UNK | xargs grep string
  [new-pair]
       search all regular file in current directory tree for "string"
       find . -type f -exec grep string {} \;
 find . -type f -exec grep string {} \;
[text-case  437 ] =========================================================
  [original-pair]
       search current directory tree for regular file contain "string"
       find . -type f | xargs grep string
  [new-pair]
       search all regular file in current directory tree for "string"
       find . -type f -exec grep string {} \;
 find . -type f -exec grep string {} \;
[text-case  438 ] =========================================================
  [original-pair]
       find all file in current directory and print excluding name SCCS
       find . \( -print -or -name SCCS -prune \)
  [new-pair]
       print all file and directory in "." directory tree skipping SCCS directory but _UNK out SCCS directory name
       find . -print -name SCCS -prune
 find . -print -name SCCS -prune
[text-case  439 ] =========================================================
  [original-pair]
       list all file except for in directory SCCS
       find . \( -print -or -name SCCS -prune \)
  [new-pair]
       print all file and directory in "." directory tree skipping SCCS directory but _UNK out SCCS directory name
       find . -print -name SCCS -prune
 find . -print -name SCCS -prune
[text-case  440 ] =========================================================
  [original-pair]
       find every _UNK undo file in current directory tree
       find -type f -iname ARGUMENT_UNK
  [new-pair]
       find all undo file in current folder and display _UNK line word character
       find ./ -name ARGUMENT_UNK | xargs wc
 find ./ -name ARGUMENT_UNK | xargs wc
[text-case  441 ] =========================================================
  [original-pair]
       find every _UNK undo file under current directory
       find -type f -iname ARGUMENT_UNK
  [new-pair]
       find all undo file in current folder and display _UNK line word character
       find ./ -name ARGUMENT_UNK | xargs wc
 find ./ -name ARGUMENT_UNK | xargs wc
[text-case  442 ] =========================================================
  [original-pair]
       find within directory called _UNK only "mp_NUM" file size le than "_NUM" kilobyte ( _UNK "_NUMMB" )
       find ARGUMENT_UNK -name '*.mp_NUM' -size -_NUMk
  [new-pair]
       search for file whose size between "_NUM" kilobyte and "_NUM" kilobyte
       find . \( -size +_NUMk -and -size -_NUMk \)
 find . \( -size +_NUMk -and -size -_NUMk \)
[text-case  443 ] =========================================================
  [original-pair]
       search for "mp_NUM" file in folder _UNK smaller than "_NUMMB"
       find ARGUMENT_UNK -name '*.mp_NUM' -size -_NUMk
  [new-pair]
       find all file in current folder smaller than "_NUMMB"
       find . -size -_NUMk
 find . -size -_NUMk
[text-case  444 ] =========================================================
  [original-pair]
       change owner of all file in folder _UNK to _UNK
       find ARGUMENT_UNK -print | xargs chown ARGUMENT_UNK
  [new-pair]
       change owner of all file in current directory
       find . -exec chown myuser:a-common-group-name {} +
 find . -exec chown myuser:a-common-group-name {} +
[text-case  445 ] =========================================================
  [original-pair]
       find all file in current folder of size "_NUM" byte
       find . -type f -empty
  [new-pair]
       find all directory in current folder _UNK size "_NUM" byte )
       find -type d -empty
 find -type d -empty
[text-case  446 ] =========================================================
  [original-pair]
       find all file in current folder of size "_NUM" byte
       find . -type f -size ARGUMENT_UNK
  [new-pair]
       find all directory in current folder _UNK size "_NUM" byte )
       find -type d -empty
 find -type d -empty
[text-case  447 ] =========================================================
  [original-pair]
       list all _UNK file
       find . -empty -exec ls {} \;
  [new-pair]
       _UNK list all file in current directory
       find . -print
 find . -print
[text-case  448 ] =========================================================
  [original-pair]
       display all "normal/regular" file in current folder empty
       find . -type f -empty
  [new-pair]
       delete all "normal/regular" file in current folder empty
       find . -type f -empty -delete
 find . -type f -empty -delete
[text-case  449 ] =========================================================
  [original-pair]
       display all empty "regular/normal" file in current folder
       find . -type f -empty
  [new-pair]
       find all empty "regular/normal" file in current folder and delete
       find . -type f -empty -delete
 find . -type f -empty -delete
[text-case  450 ] =========================================================
  [original-pair]
       find all file of size "_NUM" byte
       find . -type f -empty
  [new-pair]
       find file in current directory tree whose size "_NUM" byte
       find . -size _NUMc
 find . -size _NUMc
[text-case  451 ] =========================================================
  [original-pair]
       find all empty regular file in current directory and below
       find . -type f -empty
  [new-pair]
       find all empty folder in current directory and below
       find . -type d -empty
 find . -type d -empty
[text-case  452 ] =========================================================
  [original-pair]
       list all _UNK file under current directory
       find . -empty -exec ls {} \;
  [new-pair]
       list all file under current directory
       find . -type f | xargs ls
 find . -type f | xargs ls
[text-case  453 ] =========================================================
  [original-pair]
       list all empty file in current directory tree
       find . -empty -exec ls {} \;
  [new-pair]
       list all empty file under current directory
       find . -maxdepth _NUM -empty
 find . -maxdepth _NUM -empty
[text-case  454 ] =========================================================
  [original-pair]
       list all empty file in current directory tree
       find . -type f -empty
  [new-pair]
       list all empty file under current directory
       find . -maxdepth _NUM -empty
 find . -maxdepth _NUM -empty
[text-case  455 ] =========================================================
  [original-pair]
       find all "files/directories" named root under current directory and copy to _UNK
       find . -name ARGUMENT_UNK | xargs cp ARGUMENT_UNK
  [new-pair]
       find all "files/directories" named _UNK under current directory
       find ./ -name Desktop
 find ./ -name Desktop
[text-case  456 ] =========================================================
  [original-pair]
       find all text file in home directory
       find ~/ -name '*.txt'
  [new-pair]
       find all text file in home folder
       find ~ -name "*.txt" ARGUMENT_UNK print
 find ~ -name "*.txt" ARGUMENT_UNK print
[text-case  457 ] =========================================================
  [original-pair]
       find all text file in home directory
       find ~/ -name '*.txt'
  [new-pair]
       find all text file in home folder
       find ~ -name "*.txt" ARGUMENT_UNK print
 find ~ -name "*.txt" ARGUMENT_UNK print
[text-case  458 ] =========================================================
  [original-pair]
       find all ".txt" file in "user\'s" home directory and below
       find ~/ -name '*.txt'
  [new-pair]
       find all ".txt" file under current directory and below
       find . -name "*.txt"
 find . -name "*.txt"
[text-case  459 ] =========================================================
  [original-pair]
       list all "*.txt" file in "user\'s" home directory
       find ~/ -name '*.txt'
  [new-pair]
       delete all file in current "user\'s" home directory and sub-directories not accessed for more than "_NUM" day
       find ~ -atime +_NUM -delete
 find ~ -atime +_NUM -delete
[text-case  460 ] =========================================================
  [original-pair]
       find directory under maximum "_NUM" level down directory "$dir" with "_NUM" permission owned by user _UNK
       find $dir -maxdepth _NUM -type d -user ARGUMENT_UNK -perm -100
  [new-pair]
       find all directory in maximum "_NUM" level down _UNK directory
       find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
 find ARGUMENT_UNK -maxdepth _NUM -mindepth _NUM -type d
[text-case  461 ] =========================================================
  [original-pair]
       search home directory tree for all ".txt" file
       find ~/ -name '*.txt'
  [new-pair]
       find _UNK or ".txt" file
       find /home/user/Desktop \( -name '*.bmp' -or -name '*.txt' \)
 find /home/user/Desktop \( -name '*.bmp' -or -name '*.txt' \)
[text-case  462 ] =========================================================
  [original-pair]
       find all "*.txt" "files/directories" under home directory
       find ~/ -name '*.txt'
  [new-pair]
       find all "*.txt" "files/directories" under current directory
       find -name '*.txt'
 find -name '*.txt'
[text-case  463 ] =========================================================
  [original-pair]
       find all "*.txt" "files/directories" under home directory
       find ~ -name "*.txt" -print
  [new-pair]
       find all "*.txt" "files/directories" under current directory
       find -name '*.txt'
 find -name '*.txt'
[text-case  464 ] =========================================================
  [original-pair]
       find all perl file in "/var/www"
       find /var/www/ -type f -name "*.pl" -print
  [new-pair]
       find all perl file in "/var/www" ( case insensitive search )
       find /var/www/ -type f -iname "*.pl" -print
 find /var/www/ -type f -iname "*.pl" -print
[text-case  465 ] =========================================================
  [original-pair]
       find all swap file ( file ending with "~" ) in current folder and delete
       find . -name "*~" -delete
  [new-pair]
       search for swap file ( ".swp" file ) in temp folder and remove
       find /tmp -name '*.swp' -exec rm {} \;
 find /tmp -name '*.swp' -exec rm {} \;
[text-case  466 ] =========================================================
  [original-pair]
       find all swap file ( file ending with "~" ) in current folder and delete
       find . -name "*~" -exec rm {} \;
  [new-pair]
       search for swap file ( ".swp" file ) in temp folder and remove
       find /tmp -name '*.swp' -exec rm {} \;
 find /tmp -name '*.swp' -exec rm {} \;
[text-case  467 ] =========================================================
  [original-pair]
       delete all file in current directory tree whose name end with "~"
       find . -name "*~" -delete
  [new-pair]
       copy all regular file whose name end in "~" from "/path" directory tree to _UNK
       find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ARGUMENT_UNK
 find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ARGUMENT_UNK
[text-case  468 ] =========================================================
  [original-pair]
       delete all file in current directory tree whose name end with "~"
       find . -name "*~" -exec rm {} \;
  [new-pair]
       copy all regular file whose name end in "~" from "/path" directory tree to _UNK
       find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ARGUMENT_UNK
 find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ARGUMENT_UNK
